{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor",
      "name": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "numAllowed", "type": "uint256" }
      ],
      "name": "allotBoosters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "owner", "type": "address" }
      ],
      "name": "balanceOf",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "name": "boostersAllowedToBuy",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBooster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "name": "cards",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "getApproved",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes32", "name": "role", "type": "bytes32" }
      ],
      "name": "getRoleAdmin",
      "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes32", "name": "role", "type": "bytes32" },
        { "internalType": "address", "name": "account", "type": "address" }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes32", "name": "role", "type": "bytes32" },
        { "internalType": "address", "name": "account", "type": "address" }
      ],
      "name": "hasRole",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "owner", "type": "address" },
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "name": "isApprovedForAll",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numCards",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "ownerOf",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes32", "name": "role", "type": "bytes32" },
        { "internalType": "address", "name": "account", "type": "address" }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes32", "name": "role", "type": "bytes32" },
        { "internalType": "address", "name": "account", "type": "address" }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
        { "internalType": "bytes", "name": "data", "type": "bytes" }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" },
        { "internalType": "bool", "name": "approved", "type": "bool" }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "string", "name": "uri", "type": "string" }],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newBoosterSize",
          "type": "uint256"
        }
      ],
      "name": "setBoosterSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "_numCards", "type": "uint256" }
      ],
      "name": "setNumCards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeOfBoosterPack",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }
      ],
      "name": "supportsInterface",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "tokenURI",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/AccessControl.sol",
    "1": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/IAccessControl.sol",
    "10": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/introspection/ERC165.sol",
    "11": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/introspection/IERC165.sol",
    "12": "contracts/Diffemon.sol",
    "2": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/ERC721.sol",
    "3": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/IERC721.sol",
    "5": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "7": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
    "8": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Counters.sol",
    "9": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/Diffemon.sol",
    "exportedSymbols": {
      "AccessControl": [657],
      "Address": [2399],
      "Context": [1919],
      "Counters": [1598],
      "Diffemon": [337],
      "ERC165": [1943],
      "ERC721": [1524],
      "IAccessControl": [1897],
      "IERC165": [2411],
      "IERC721": [2059],
      "IERC721Metadata": [2104],
      "IERC721Receiver": [2077],
      "Strings": [1824]
    },
    "id": 338,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 658,
        "src": "58:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1525,
        "src": "117:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1825,
        "src": "175:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mcian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 338,
        "sourceUnit": 1599,
        "src": "227:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 657,
              "src": "334:13:12"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:12"
          },
          {
            "baseName": {
              "id": 8,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1524,
              "src": "349:6:12"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "349:6:12"
          }
        ],
        "canonicalName": "Diffemon",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 337,
        "linearizedBaseContracts": [
          337, 1524, 2104, 2059, 657, 1943, 2411, 1897, 1919
        ],
        "name": "Diffemon",
        "nameLocation": "322:8:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 13,
            "libraryName": {
              "id": 10,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1598,
              "src": "369:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "363:36:12",
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1530,
                "src": "382:16:12"
              },
              "referencedDeclaration": 1530,
              "src": "382:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1530_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "429:15:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "404:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1530_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1530,
                "src": "404:16:12"
              },
              "referencedDeclaration": 1530,
              "src": "404:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1530_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "32c13287",
            "id": 18,
            "mutability": "mutable",
            "name": "sizeOfBoosterPack",
            "nameLocation": "466:17:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "451:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32d1deaf",
            "id": 20,
            "mutability": "mutable",
            "name": "numCards",
            "nameLocation": "504:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "489:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8dc10768",
            "id": 24,
            "mutability": "mutable",
            "name": "cards",
            "nameLocation": "554:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "518:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "518:28:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3289d6f1",
            "id": 28,
            "mutability": "mutable",
            "name": "boostersAllowedToBuy",
            "nameLocation": "600:20:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "565:55:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "573:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "565:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "636:7:12",
            "nodeType": "VariableDeclaration",
            "scope": 337,
            "src": "629:14:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "629:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "793:213:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "814:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 39,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "834:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "834:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "803:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "803:42:12"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "numCards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "856:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313034",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "867:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_104_by_1",
                        "typeString": "int_const 104"
                      },
                      "value": "104"
                    },
                    "src": "856:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "856:14:12"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "sizeOfBoosterPack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "880:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "36",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "900:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "src": "880:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "880:21:12"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "920:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "697066733a2f2f6261667962656963366e786d34707867723273667778776a6f696e3678616c68706f796f696368696f326162786c6e696d647873737678323537612f",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "930:69:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_27e668ea375d1241fe3aa6b5c374ef16a018e06a382770da7a11704cbd2f07f4",
                        "typeString": "literal_string \"ipfs://bafybeic6nxm4pxgr2sfwxwjoin6xalhpoyoichio2abxlnimdxssvx257a/\""
                      },
                      "value": "ipfs://bafybeic6nxm4pxgr2sfwxwjoin6xalhpoyoichio2abxlnimdxssvx257a/"
                    },
                    "src": "920:79:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "920:79:12"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "44696666656d6f6e",
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "773:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_72234e68f143a1f8e3735722b53519117bfa1292867ce49b17809851cd75c578",
                      "typeString": "literal_string \"Diffemon\""
                    },
                    "value": "Diffemon"
                  },
                  {
                    "hexValue": "444d4f4e",
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "785:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5f15b820f313054967f2af80ef1c6cda059fd142b2ed977ae95f6d28be474204",
                      "typeString": "literal_string \"DMON\""
                    },
                    "value": "DMON"
                  }
                ],
                "id": 35,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1524,
                  "src": "766:6:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "766:26:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:2:12"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:12"
            },
            "scope": 337,
            "src": "744:262:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [1294],
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1138:37:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1160:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1148:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Diffemon_$337_$",
                          "typeString": "type(contract super Diffemon)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1294,
                      "src": "1148:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:20:12"
                }
              ]
            },
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1089:5:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 61,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 60,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1524,
                  "src": "1130:6:12"
                }
              ],
              "src": "1121:16:12"
            },
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1103:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1095:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:17:12"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:12"
            },
            "scope": 337,
            "src": "1080:95:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [862],
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "1305:167:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1330:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 79,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "1315:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:23:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:23:12"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1362:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 83,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1356:5:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:14:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1356:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1356:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1463:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1356:109:12",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 94,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1408:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 97,
                                    "name": "cards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "1434:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 99,
                                  "indexExpression": {
                                    "id": 98,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "1440:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1434:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 95,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "1417:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$1824_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1686,
                                "src": "1417:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1417:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2e6a736f6e",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1451:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              },
                              "value": ".json"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              }
                            ],
                            "expression": {
                              "id": 92,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1391:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1391:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1391:68:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1384:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1384:76:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "1349:116:12"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1190:8:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 75,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 74,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1524,
                  "src": "1261:6:12"
                }
              ],
              "src": "1252:16:12"
            },
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1207:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1199:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:17:12"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1286:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:15:12"
            },
            "scope": 337,
            "src": "1181:291:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [398, 751],
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1620:60:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "1661:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1637:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Diffemon_$337_$",
                          "typeString": "type(contract super Diffemon)"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 751,
                      "src": "1637:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1630:43:12"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1487:17:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 114,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 112,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1524,
                  "src": "1570:6:12"
                },
                {
                  "id": 113,
                  "name": "AccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 657,
                  "src": "1578:13:12"
                }
              ],
              "src": "1561:31:12"
            },
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1512:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1505:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1504:20:12"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1610:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:6:12"
            },
            "scope": 337,
            "src": "1478:202:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1743:153:12",
              "statements": [
                {
                  "assignments": [132],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1761:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "1753:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1753:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 133,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1771:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1530_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1542,
                      "src": "1771:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1530_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1530_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1753:43:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 137,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1806:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1530_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1556,
                      "src": "1806:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1530_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1530_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:27:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1853:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 144,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1857:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 142,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1139, 1168],
                      "referencedDeclaration": 1139,
                      "src": "1843:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:22:12"
                },
                {
                  "expression": {
                    "id": 147,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 132,
                    "src": "1882:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1875:14:12"
                }
              ]
            },
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeMint",
            "nameLocation": "1695:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1712:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1704:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1703:12:12"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1734:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:9:12"
            },
            "scope": 337,
            "src": "1686:210:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "1991:30:12",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2001:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "2011:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2001:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:13:12"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "1970:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 155,
                      "name": "getRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "1957:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 154,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 376,
                  "src": "1948:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1948:42:12"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "1911:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "1936:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "1922:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1921:19:12"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1991:0:12"
            },
            "scope": 337,
            "src": "1902:119:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [871],
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "2102:31:12",
              "statements": [
                {
                  "expression": {
                    "id": 171,
                    "name": "baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "2119:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 172,
                  "nodeType": "Return",
                  "src": "2112:14:12"
                }
              ]
            },
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "2036:8:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 167,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2069:8:12"
            },
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:2:12"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2087:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:15:12"
            },
            "scope": 337,
            "src": "2027:106:12",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2241:51:12",
              "statements": [
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 184,
                      "name": "sizeOfBoosterPack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2251:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "newBoosterSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "2271:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2251:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2251:34:12"
                }
              ]
            },
            "functionSelector": "67c586c5",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 180,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "2220:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 179,
                      "name": "getRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "2207:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 178,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 376,
                  "src": "2198:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2198:42:12"
              }
            ],
            "name": "setBoosterSize",
            "nameLocation": "2152:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "newBoosterSize",
                  "nameLocation": "2175:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2167:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2166:24:12"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:12"
            },
            "scope": 337,
            "src": "2143:149:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "2392:37:12",
              "statements": [
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 199,
                      "name": "numCards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2402:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 200,
                      "name": "_numCards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2413:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2402:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:20:12"
                }
              ]
            },
            "functionSelector": "5b91fd8d",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 195,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "2371:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 194,
                      "name": "getRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "2358:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 193,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 376,
                  "src": "2349:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2349:42:12"
              }
            ],
            "name": "setNumCards",
            "nameLocation": "2311:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_numCards",
                  "nameLocation": "2331:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "2323:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:19:12"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2392:0:12"
            },
            "scope": 337,
            "src": "2302:127:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2553:157:12",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 222,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 219,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "2615:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 220,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "2615:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2630:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2615:16:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 218,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -5,
                                    "src": "2605:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2605:27:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 224,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2634:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "2634:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 228,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3437",
                                      "id": 226,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2652:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_47_by_1",
                                        "typeString": "int_const 47"
                                      },
                                      "value": "47"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 227,
                                      "name": "salt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "2657:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2652:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2634:27:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 230,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2663:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "difficulty",
                                  "nodeType": "MemberAccess",
                                  "src": "2663:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 232,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2681:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2681:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 216,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2588:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2588:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2588:104:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 215,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2578:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2578:115:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2570:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2570:124:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 237,
                      "name": "modulo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "2697:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2570:133:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 239,
                  "nodeType": "Return",
                  "src": "2563:140:12"
                }
              ]
            },
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nameLocation": "2485:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "modulo",
                  "nameLocation": "2500:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2492:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2516:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2508:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2491:30:12"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2544:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:9:12"
            },
            "scope": 337,
            "src": "2476:234:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2821:55:12",
              "statements": [
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 253,
                        "name": "boostersAllowedToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2831:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 255,
                      "indexExpression": {
                        "id": 254,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "2852:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2831:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 256,
                      "name": "numAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "2859:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2831:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:38:12"
                }
              ]
            },
            "functionSelector": "33a3611f",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 249,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "2800:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 248,
                      "name": "getRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "2787:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 376,
                  "src": "2778:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2778:42:12"
              }
            ],
            "name": "allotBoosters",
            "nameLocation": "2725:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2747:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2739:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "numAllowed",
                  "nameLocation": "2759:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2751:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2738:32:12"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:0:12"
            },
            "scope": 337,
            "src": "2716:160:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "2915:179:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 264,
                            "name": "boostersAllowedToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2933:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "expression": {
                              "id": 265,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2954:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2954:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2933:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2968:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2933:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820626f6f737465727320616c6c6f77656420746f20627579",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2971:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac70c0f10723ee45590ed7ce2d7e99360b36201b22bf66c1e268cddba756cb61",
                          "typeString": "literal_string \"Not enough boosters allowed to buy\""
                        },
                        "value": "Not enough boosters allowed to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_ac70c0f10723ee45590ed7ce2d7e99360b36201b22bf66c1e268cddba756cb61",
                          "typeString": "literal_string \"Not enough boosters allowed to buy\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2925:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:83:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "2925:83:12"
                },
                {
                  "expression": {
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 273,
                        "name": "boostersAllowedToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "3018:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 276,
                      "indexExpression": {
                        "expression": {
                          "id": 274,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3039:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3039:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3018:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3054:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3018:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:37:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3076:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3076:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 280,
                      "name": "mintTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "3065:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3065:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3065:22:12"
                }
              ]
            },
            "functionSelector": "0c7c0c0f",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyBooster",
            "nameLocation": "2895:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2905:2:12"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2915:0:12"
            },
            "scope": 337,
            "src": "2886:208:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "3155:84:12",
              "statements": [
                {
                  "assignments": [294],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "3174:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "3166:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3166:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3193:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 295,
                      "name": "safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "3184:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:12:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3166:30:12"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 299,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3209:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 301,
                      "indexExpression": {
                        "id": 300,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3215:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3209:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 302,
                      "name": "cardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3226:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3209:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3209:23:12"
                }
              ]
            },
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "3113:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "cardId",
                  "nameLocation": "3126:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "3118:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3142:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "3134:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3117:28:12"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3155:0:12"
            },
            "scope": 337,
            "src": "3104:135:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "3289:157:12",
              "statements": [
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "3344:96:12",
                    "statements": [
                      {
                        "assignments": [322],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 322,
                            "mutability": "mutable",
                            "name": "cardId",
                            "nameLocation": "3366:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 333,
                            "src": "3358:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 321,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3358:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 327,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 324,
                              "name": "numCards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3382:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 325,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 312,
                              "src": "3392:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 323,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "3375:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3375:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3358:36:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 329,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "3418:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 330,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3426:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 328,
                            "name": "mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "3413:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3413:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "3413:16:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 315,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "3316:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 316,
                      "name": "sizeOfBoosterPack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3320:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3316:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "initializationExpression": {
                    "assignments": [312],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3309:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "3303:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 314,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3313:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3303:11:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3339:3:12",
                      "subExpression": {
                        "id": 318,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "3339:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 320,
                    "nodeType": "ExpressionStatement",
                    "src": "3339:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3299:141:12"
                }
              ]
            },
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "3257:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3276:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3268:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3267:12:12"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3289:0:12"
            },
            "scope": 337,
            "src": "3248:198:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 338,
        "src": "313:3136:12",
        "usedErrors": []
      }
    ],
    "src": "0:3450:12"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060408051808201825260088152672234b33332b6b7b760c11b6020808301918252835180850190945260048452632226a7a760e11b9084015281519192916200005e9160019162000167565b5080516200007490600290602084019062000167565b506200008691506000905033620000c6565b60686009556006600855604080516080810190915260438082526200206460208301398051620000bf91600c9160209091019062000167565b5062000249565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000163576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001223390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b82805462000175906200020d565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b600181811c908216806200022257607f821691505b6020821081036200024357634e487b7160e01b600052602260045260246000fd5b50919050565b611e0b80620002596000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806355f804b3116100f957806395d89b4111610097578063b88d4fde11610071578063b88d4fde146103c5578063c87b56dd146103d8578063d547741f146103eb578063e985e9c5146103fe57600080fd5b806395d89b41146103a2578063a217fddf146103aa578063a22cb465146103b257600080fd5b806367c586c5116100d357806367c586c51461034957806370a082311461035c5780638dc107681461036f57806391d148541461038f57600080fd5b806355f804b3146103105780635b91fd8d146103235780636352211e1461033657600080fd5b80632f2ff15d1161016657806332d1deaf1161014057806332d1deaf146102ce57806333a3611f146102d757806336568abe146102ea57806342842e0e146102fd57600080fd5b80632f2ff15d146102925780633289d6f1146102a557806332c13287146102c557600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780630c7c0c0f1461024657806323b872dd1461024e578063248a9ca31461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d736600461170e565b61043a565b60405190151581526020015b60405180910390f35b6101f961044b565b6040516101e89190611783565b610219610214366004611796565b6104dd565b6040516001600160a01b0390911681526020016101e8565b61024461023f3660046117cb565b610504565b005b61024461061e565b61024461025c3660046117f5565b6106b6565b61028461026f366004611796565b60009081526020819052604090206001015490565b6040519081526020016101e8565b6102446102a0366004611831565b6106e7565b6102846102b336600461185d565b600b6020526000908152604090205481565b61028460085481565b61028460095481565b6102446102e53660046117cb565b61070c565b6102446102f8366004611831565b61075f565b61024461030b3660046117f5565b6107dd565b61024461031e366004611904565b6107f8565b610244610331366004611796565b61082c565b610219610344366004611796565b610853565b610244610357366004611796565b6108b3565b61028461036a36600461185d565b6108da565b61028461037d366004611796565b600a6020526000908152604090205481565b6101dc61039d366004611831565b610960565b6101f9610989565b610284600081565b6102446103c036600461194d565b610998565b6102446103d3366004611989565b6109a3565b6101f96103e6366004611796565b6109db565b6102446103f9366004611831565b610a52565b6101dc61040c366004611a05565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b600061044582610a77565b92915050565b60606001805461045a90611a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461048690611a2f565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b60006104e882610ab7565b506000908152600560205260409020546001600160a01b031690565b600061050f82610853565b9050806001600160a01b0316836001600160a01b0316036105815760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061059d575061059d813361040c565b61060f5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610578565b6106198383610b19565b505050565b336000908152600b60205260409020546106855760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f75676820626f6f737465727320616c6c6f77656420746f2062604482015261757960f01b6064820152608401610578565b336000908152600b602052604081208054600192906106a5908490611a7f565b909155506106b4905033610b87565b565b6106c03382610bc7565b6106dc5760405162461bcd60e51b815260040161057890611a96565b610619838383610c46565b60008281526020819052604090206001015461070281610de2565b6106198383610dec565b6000808052602052600080516020611db68339815191525461072d81610de2565b6001600160a01b0383166000908152600b602052604081208054849290610755908490611ae4565b9091555050505050565b6001600160a01b03811633146107cf5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610578565b6107d98282610e70565b5050565b610619838383604051806020016040528060008152506109a3565b6000808052602052600080516020611db68339815191525461081981610de2565b815161061990600c90602085019061165f565b6000808052602052600080516020611db68339815191525461084d81610de2565b50600955565b6000818152600360205260408120546001600160a01b0316806104455760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610578565b6000808052602052600080516020611db6833981519152546108d481610de2565b50600855565b60006001600160a01b0382166109445760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610578565b506001600160a01b031660009081526004602052604090205490565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606002805461045a90611a2f565b6107d9338383610ed5565b6109ad3383610bc7565b6109c95760405162461bcd60e51b815260040161057890611a96565b6109d584848484610fa3565b50505050565b60606109e682610ab7565b6000600c80546109f590611a2f565b905011610a115760405180602001604052806000815250610445565b6000828152600a6020526040902054600c90610a2c90610fd6565b604051602001610a3d929190611b18565b60405160208183030381529060405292915050565b600082815260208190526040902060010154610a6d81610de2565b6106198383610e70565b60006001600160e01b031982166380ac58cd60e01b1480610aa857506001600160e01b03198216635b5e139f60e01b145b806104455750610445826110d7565b6000818152600360205260409020546001600160a01b0316610b165760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610578565b50565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b4e82610853565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b6008548160ff1610156107d9576000610ba86009548360ff1661110c565b9050610bb4818461118d565b5080610bbf81611bd2565b915050610b8a565b600080610bd383610853565b9050806001600160a01b0316846001600160a01b03161480610c1a57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610c3e5750836001600160a01b0316610c33846104dd565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c5982610853565b6001600160a01b031614610cbd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610578565b6001600160a01b038216610d1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610578565b610d2a600082610b19565b6001600160a01b0383166000908152600460205260408120805460019290610d53908490611a7f565b90915550506001600160a01b0382166000908152600460205260408120805460019290610d81908490611ae4565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b1681336111ae565b610df68282610960565b6107d9576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e2c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610e7a8282610960565b156107d9576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b816001600160a01b0316836001600160a01b031603610f365760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610578565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fae848484610c46565b610fba84848484611212565b6109d55760405162461bcd60e51b815260040161057890611bf1565b606081600003610ffd5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611027578061101181611c43565b91506110209050600a83611c72565b9150611001565b60008167ffffffffffffffff81111561104257611042611878565b6040519080825280601f01601f19166020018201604052801561106c576020820181803683370190505b5090505b8415610c3e57611081600183611a7f565b915061108e600a86611c86565b611099906030611ae4565b60f81b8183815181106110ae576110ae611c9a565b60200101906001600160f81b031916908160001a9053506110d0600a86611c72565b9450611070565b60006001600160e01b03198216637965db0b60e01b148061044557506301ffc9a760e01b6001600160e01b0319831614610445565b60008261111a600143611a7f565b4061112684602f611cb0565b6111309042611a7f565b6040805160208101939093528201524460608083019190915233901b6bffffffffffffffffffffffff191660808201526094016040516020818303038152906040528051906020012060001c6111869190611c86565b9392505050565b600061119882611313565b6000908152600a60205260409020929092555050565b6111b88282610960565b6107d9576111d0816001600160a01b03166014611339565b6111db836020611339565b6040516020016111ec929190611ccf565b60408051601f198184030181529082905262461bcd60e51b825261057891600401611783565b60006001600160a01b0384163b1561130857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611256903390899088908890600401611d44565b6020604051808303816000875af1925050508015611291575060408051601f3d908101601f1916820190925261128e91810190611d81565b60015b6112ee573d8080156112bf576040519150601f19603f3d011682016040523d82523d6000602084013e6112c4565b606091505b5080516000036112e65760405162461bcd60e51b815260040161057890611bf1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c3e565b506001949350505050565b60008061131f60075490565b905061132f600780546001019055565b61044583826114d5565b60606000611348836002611cb0565b611353906002611ae4565b67ffffffffffffffff81111561136b5761136b611878565b6040519080825280601f01601f191660200182016040528015611395576020820181803683370190505b509050600360fc1b816000815181106113b0576113b0611c9a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113df576113df611c9a565b60200101906001600160f81b031916908160001a9053506000611403846002611cb0565b61140e906001611ae4565b90505b6001811115611486576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144257611442611c9a565b1a60f81b82828151811061145857611458611c9a565b60200101906001600160f81b031916908160001a90535060049490941c9361147f81611d9e565b9050611411565b5083156111865760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610578565b6107d98282604051806020016040528060008152506114f4838361151d565b6115016000848484611212565b6106195760405162461bcd60e51b815260040161057890611bf1565b6001600160a01b0382166115735760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610578565b6000818152600360205260409020546001600160a01b0316156115d85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610578565b6001600160a01b0382166000908152600460205260408120805460019290611601908490611ae4565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461166b90611a2f565b90600052602060002090601f01602090048101928261168d57600085556116d3565b82601f106116a657805160ff19168380011785556116d3565b828001600101855582156116d3579182015b828111156116d35782518255916020019190600101906116b8565b506116df9291506116e3565b5090565b5b808211156116df57600081556001016116e4565b6001600160e01b031981168114610b1657600080fd5b60006020828403121561172057600080fd5b8135611186816116f8565b60005b8381101561174657818101518382015260200161172e565b838111156109d55750506000910152565b6000815180845261176f81602086016020860161172b565b601f01601f19169290920160200192915050565b6020815260006111866020830184611757565b6000602082840312156117a857600080fd5b5035919050565b80356001600160a01b03811681146117c657600080fd5b919050565b600080604083850312156117de57600080fd5b6117e7836117af565b946020939093013593505050565b60008060006060848603121561180a57600080fd5b611813846117af565b9250611821602085016117af565b9150604084013590509250925092565b6000806040838503121561184457600080fd5b82359150611854602084016117af565b90509250929050565b60006020828403121561186f57600080fd5b611186826117af565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118a9576118a9611878565b604051601f8501601f19908116603f011681019082821181831017156118d1576118d1611878565b816040528093508581528686860111156118ea57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561191657600080fd5b813567ffffffffffffffff81111561192d57600080fd5b8201601f8101841361193e57600080fd5b610c3e8482356020840161188e565b6000806040838503121561196057600080fd5b611969836117af565b91506020830135801515811461197e57600080fd5b809150509250929050565b6000806000806080858703121561199f57600080fd5b6119a8856117af565b93506119b6602086016117af565b925060408501359150606085013567ffffffffffffffff8111156119d957600080fd5b8501601f810187136119ea57600080fd5b6119f98782356020840161188e565b91505092959194509250565b60008060408385031215611a1857600080fd5b611a21836117af565b9150611854602084016117af565b600181811c90821680611a4357607f821691505b602082108103611a6357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611a9157611a91611a69565b500390565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008219821115611af757611af7611a69565b500190565b60008151611b0e81856020860161172b565b9290920192915050565b600080845481600182811c915080831680611b3457607f831692505b60208084108203611b5357634e487b7160e01b86526022600452602486fd5b818015611b675760018114611b7857611ba5565b60ff19861689528489019650611ba5565b60008b81526020902060005b86811015611b9d5781548b820152908501908301611b84565b505084890196505b505050505050611bc9611bb88286611afc565b64173539b7b760d91b815260050190565b95945050505050565b600060ff821660ff8103611be857611be8611a69565b60010192915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611c5557611c55611a69565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c8157611c81611c5c565b500490565b600082611c9557611c95611c5c565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611cca57611cca611a69565b500290565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611d0781601785016020880161172b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611d3881602884016020880161172b565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d7790830184611757565b9695505050505050565b600060208284031215611d9357600080fd5b8151611186816116f8565b600081611dad57611dad611a69565b50600019019056fead3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb6a2646970667358221220a4227ad0dd1d609ee09f0855ba7a7901b665328cc21024d0ded02df43238753364736f6c634300080d0033697066733a2f2f6261667962656963366e786d34707867723273667778776a6f696e3678616c68706f796f696368696f326162786c6e696d647873737678323537612f",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": { "enabled": true, "runs": 200 },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Diffemon",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": { "95": [3806, 3828, false] },
        "AccessControl._grantRole": { "93": [7557, 7579, false] },
        "AccessControl._revokeRole": { "94": [7961, 7983, false] },
        "AccessControl.renounceRole": { "92": [6020, 6043, true] }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": { "Diffemon.tokenURI": { "91": [1356, 1381, true] } },
      "2": {
        "ERC721._checkOnERC721Received": { "106": [12784, 12802, false] },
        "ERC721._mint": { "108": [8947, 8963, true] },
        "ERC721._safeMint": { "107": [8410, 8463, true] },
        "ERC721._safeTransfer": { "105": [6622, 6669, true] },
        "ERC721._setApprovalForAll": { "104": [11407, 11424, true] },
        "ERC721._transfer": {
          "102": [10369, 10400, true],
          "103": [10460, 10476, true]
        },
        "ERC721.approve": {
          "96": [3604, 3615, true],
          "97": [3685, 3706, true],
          "98": [3710, 3747, true]
        },
        "ERC721.balanceOf": { "100": [2028, 2047, true] },
        "ERC721.safeTransferFrom": { "101": [5418, 5459, true] },
        "ERC721.transferFrom": { "99": [4801, 4842, true] }
      },
      "3": {},
      "5": {},
      "7": {},
      "8": {},
      "9": {
        "Strings.toHexString": { "110": [2008, 2018, true] },
        "Strings.toString": { "109": [665, 675, false] }
      }
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": { "49": [3400, 3430], "69": [3844, 4193] },
        "AccessControl._grantRole": { "50": [7595, 7631], "51": [7645, 7690] },
        "AccessControl._revokeRole": { "52": [7999, 8036], "53": [8050, 8095] },
        "AccessControl.getRoleAdmin": { "0": [4484, 4513] },
        "AccessControl.grantRole": { "15": [4929, 4954] },
        "AccessControl.hasRole": { "26": [2997, 3033] },
        "AccessControl.renounceRole": {
          "17": [6012, 6095],
          "18": [6106, 6132]
        },
        "AccessControl.revokeRole": { "33": [5355, 5381] },
        "AccessControl.supportsInterface": { "65": [2707, 2801] }
      },
      "1": {},
      "10": { "ERC165.supportsInterface": { "66": [930, 977] } },
      "11": {},
      "12": {
        "Diffemon.allotBoosters": { "16": [2831, 2869] },
        "Diffemon.buyBooster": {
          "10": [2925, 3008],
          "11": [3018, 3055],
          "12": [3065, 3087]
        },
        "Diffemon.mint": { "68": [3209, 3232] },
        "Diffemon.mintTokens": { "39": [3413, 3429], "40": [3339, 3342] },
        "Diffemon.random": { "67": [2563, 2703] },
        "Diffemon.safeMint": { "74": [1806, 1833], "76": [1843, 1865] },
        "Diffemon.setBaseURI": { "20": [2001, 2014] },
        "Diffemon.setBoosterSize": { "23": [2251, 2285] },
        "Diffemon.setNumCards": { "21": [2402, 2422] },
        "Diffemon.supportsInterface": { "2": [1630, 1673] },
        "Diffemon.tokenURI": { "31": [1315, 1338], "32": [1349, 1465] }
      },
      "2": {
        "ERC721._approve": { "37": [11033, 11062], "38": [11072, 11123] },
        "ERC721._checkOnERC721Received": {
          "70": [12826, 12886],
          "71": [12660, 12718],
          "72": [13145, 13156]
        },
        "ERC721._exists": { "35": [7115, 7152] },
        "ERC721._isApprovedOrOwner": { "41": [7475, 7571] },
        "ERC721._mint": {
          "86": [8939, 9000],
          "87": [9010, 9068],
          "88": [9135, 9153],
          "89": [9163, 9184],
          "90": [9195, 9233]
        },
        "ERC721._requireMinted": { "36": [11730, 11783] },
        "ERC721._safeMint": {
          "83": [7983, 8009],
          "84": [8361, 8379],
          "85": [8389, 8539]
        },
        "ERC721._safeTransfer": { "57": [6576, 6604], "58": [6614, 6724] },
        "ERC721._setApprovalForAll": {
          "54": [11399, 11454],
          "55": [11464, 11510],
          "56": [11520, 11566]
        },
        "ERC721._transfer": {
          "42": [10361, 10442],
          "43": [10452, 10517],
          "44": [10629, 10658],
          "45": [10669, 10689],
          "46": [10699, 10717],
          "47": [10727, 10748],
          "48": [10759, 10791]
        },
        "ERC721.approve": {
          "6": [3596, 3653],
          "8": [3664, 3835],
          "9": [3846, 3867]
        },
        "ERC721.balanceOf": { "24": [2020, 2093], "25": [2103, 2126] },
        "ERC721.getApproved": { "4": [4030, 4053], "5": [4064, 4095] },
        "ERC721.isApprovedForAll": { "1": [4501, 4543] },
        "ERC721.name": { "3": [2549, 2561] },
        "ERC721.ownerOf": { "22": [2323, 2379] },
        "ERC721.safeTransferFrom": {
          "19": [5138, 5177],
          "29": [5410, 5510],
          "30": [5520, 5558]
        },
        "ERC721.setApprovalForAll": { "28": [4263, 4315] },
        "ERC721.supportsInterface": { "34": [1688, 1863] },
        "ERC721.symbol": { "27": [2713, 2727] },
        "ERC721.transferFrom": { "13": [4793, 4893], "14": [4904, 4932] }
      },
      "3": {},
      "5": {},
      "7": { "Context._msgSender": { "7": [712, 729] } },
      "8": {
        "Counters.current": { "73": [911, 932] },
        "Counters.increment": { "75": [1032, 1051] }
      },
      "9": {
        "Strings.toHexString": {
          "77": [1809, 1824],
          "78": [1834, 1849],
          "79": [1918, 1955],
          "80": [1969, 1980],
          "81": [1899, 1902],
          "82": [2000, 2055]
        },
        "Strings.toString": {
          "59": [691, 701],
          "60": [807, 815],
          "61": [829, 839],
          "62": [941, 952],
          "63": [966, 1022],
          "64": [1036, 1047]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806355f804b3116100f957806395d89b4111610097578063b88d4fde11610071578063b88d4fde146103c5578063c87b56dd146103d8578063d547741f146103eb578063e985e9c5146103fe57600080fd5b806395d89b41146103a2578063a217fddf146103aa578063a22cb465146103b257600080fd5b806367c586c5116100d357806367c586c51461034957806370a082311461035c5780638dc107681461036f57806391d148541461038f57600080fd5b806355f804b3146103105780635b91fd8d146103235780636352211e1461033657600080fd5b80632f2ff15d1161016657806332d1deaf1161014057806332d1deaf146102ce57806333a3611f146102d757806336568abe146102ea57806342842e0e146102fd57600080fd5b80632f2ff15d146102925780633289d6f1146102a557806332c13287146102c557600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780630c7c0c0f1461024657806323b872dd1461024e578063248a9ca31461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d736600461170e565b61043a565b60405190151581526020015b60405180910390f35b6101f961044b565b6040516101e89190611783565b610219610214366004611796565b6104dd565b6040516001600160a01b0390911681526020016101e8565b61024461023f3660046117cb565b610504565b005b61024461061e565b61024461025c3660046117f5565b6106b6565b61028461026f366004611796565b60009081526020819052604090206001015490565b6040519081526020016101e8565b6102446102a0366004611831565b6106e7565b6102846102b336600461185d565b600b6020526000908152604090205481565b61028460085481565b61028460095481565b6102446102e53660046117cb565b61070c565b6102446102f8366004611831565b61075f565b61024461030b3660046117f5565b6107dd565b61024461031e366004611904565b6107f8565b610244610331366004611796565b61082c565b610219610344366004611796565b610853565b610244610357366004611796565b6108b3565b61028461036a36600461185d565b6108da565b61028461037d366004611796565b600a6020526000908152604090205481565b6101dc61039d366004611831565b610960565b6101f9610989565b610284600081565b6102446103c036600461194d565b610998565b6102446103d3366004611989565b6109a3565b6101f96103e6366004611796565b6109db565b6102446103f9366004611831565b610a52565b6101dc61040c366004611a05565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b600061044582610a77565b92915050565b60606001805461045a90611a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461048690611a2f565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b60006104e882610ab7565b506000908152600560205260409020546001600160a01b031690565b600061050f82610853565b9050806001600160a01b0316836001600160a01b0316036105815760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061059d575061059d813361040c565b61060f5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610578565b6106198383610b19565b505050565b336000908152600b60205260409020546106855760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f75676820626f6f737465727320616c6c6f77656420746f2062604482015261757960f01b6064820152608401610578565b336000908152600b602052604081208054600192906106a5908490611a7f565b909155506106b4905033610b87565b565b6106c03382610bc7565b6106dc5760405162461bcd60e51b815260040161057890611a96565b610619838383610c46565b60008281526020819052604090206001015461070281610de2565b6106198383610dec565b6000808052602052600080516020611db68339815191525461072d81610de2565b6001600160a01b0383166000908152600b602052604081208054849290610755908490611ae4565b9091555050505050565b6001600160a01b03811633146107cf5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610578565b6107d98282610e70565b5050565b610619838383604051806020016040528060008152506109a3565b6000808052602052600080516020611db68339815191525461081981610de2565b815161061990600c90602085019061165f565b6000808052602052600080516020611db68339815191525461084d81610de2565b50600955565b6000818152600360205260408120546001600160a01b0316806104455760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610578565b6000808052602052600080516020611db6833981519152546108d481610de2565b50600855565b60006001600160a01b0382166109445760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610578565b506001600160a01b031660009081526004602052604090205490565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606002805461045a90611a2f565b6107d9338383610ed5565b6109ad3383610bc7565b6109c95760405162461bcd60e51b815260040161057890611a96565b6109d584848484610fa3565b50505050565b60606109e682610ab7565b6000600c80546109f590611a2f565b905011610a115760405180602001604052806000815250610445565b6000828152600a6020526040902054600c90610a2c90610fd6565b604051602001610a3d929190611b18565b60405160208183030381529060405292915050565b600082815260208190526040902060010154610a6d81610de2565b6106198383610e70565b60006001600160e01b031982166380ac58cd60e01b1480610aa857506001600160e01b03198216635b5e139f60e01b145b806104455750610445826110d7565b6000818152600360205260409020546001600160a01b0316610b165760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610578565b50565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b4e82610853565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60005b6008548160ff1610156107d9576000610ba86009548360ff1661110c565b9050610bb4818461118d565b5080610bbf81611bd2565b915050610b8a565b600080610bd383610853565b9050806001600160a01b0316846001600160a01b03161480610c1a57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610c3e5750836001600160a01b0316610c33846104dd565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c5982610853565b6001600160a01b031614610cbd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610578565b6001600160a01b038216610d1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610578565b610d2a600082610b19565b6001600160a01b0383166000908152600460205260408120805460019290610d53908490611a7f565b90915550506001600160a01b0382166000908152600460205260408120805460019290610d81908490611ae4565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b1681336111ae565b610df68282610960565b6107d9576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e2c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610e7a8282610960565b156107d9576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b816001600160a01b0316836001600160a01b031603610f365760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610578565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fae848484610c46565b610fba84848484611212565b6109d55760405162461bcd60e51b815260040161057890611bf1565b606081600003610ffd5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611027578061101181611c43565b91506110209050600a83611c72565b9150611001565b60008167ffffffffffffffff81111561104257611042611878565b6040519080825280601f01601f19166020018201604052801561106c576020820181803683370190505b5090505b8415610c3e57611081600183611a7f565b915061108e600a86611c86565b611099906030611ae4565b60f81b8183815181106110ae576110ae611c9a565b60200101906001600160f81b031916908160001a9053506110d0600a86611c72565b9450611070565b60006001600160e01b03198216637965db0b60e01b148061044557506301ffc9a760e01b6001600160e01b0319831614610445565b60008261111a600143611a7f565b4061112684602f611cb0565b6111309042611a7f565b6040805160208101939093528201524460608083019190915233901b6bffffffffffffffffffffffff191660808201526094016040516020818303038152906040528051906020012060001c6111869190611c86565b9392505050565b600061119882611313565b6000908152600a60205260409020929092555050565b6111b88282610960565b6107d9576111d0816001600160a01b03166014611339565b6111db836020611339565b6040516020016111ec929190611ccf565b60408051601f198184030181529082905262461bcd60e51b825261057891600401611783565b60006001600160a01b0384163b1561130857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611256903390899088908890600401611d44565b6020604051808303816000875af1925050508015611291575060408051601f3d908101601f1916820190925261128e91810190611d81565b60015b6112ee573d8080156112bf576040519150601f19603f3d011682016040523d82523d6000602084013e6112c4565b606091505b5080516000036112e65760405162461bcd60e51b815260040161057890611bf1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c3e565b506001949350505050565b60008061131f60075490565b905061132f600780546001019055565b61044583826114d5565b60606000611348836002611cb0565b611353906002611ae4565b67ffffffffffffffff81111561136b5761136b611878565b6040519080825280601f01601f191660200182016040528015611395576020820181803683370190505b509050600360fc1b816000815181106113b0576113b0611c9a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113df576113df611c9a565b60200101906001600160f81b031916908160001a9053506000611403846002611cb0565b61140e906001611ae4565b90505b6001811115611486576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144257611442611c9a565b1a60f81b82828151811061145857611458611c9a565b60200101906001600160f81b031916908160001a90535060049490941c9361147f81611d9e565b9050611411565b5083156111865760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610578565b6107d98282604051806020016040528060008152506114f4838361151d565b6115016000848484611212565b6106195760405162461bcd60e51b815260040161057890611bf1565b6001600160a01b0382166115735760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610578565b6000818152600360205260409020546001600160a01b0316156115d85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610578565b6001600160a01b0382166000908152600460205260408120805460019290611601908490611ae4565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461166b90611a2f565b90600052602060002090601f01602090048101928261168d57600085556116d3565b82601f106116a657805160ff19168380011785556116d3565b828001600101855582156116d3579182015b828111156116d35782518255916020019190600101906116b8565b506116df9291506116e3565b5090565b5b808211156116df57600081556001016116e4565b6001600160e01b031981168114610b1657600080fd5b60006020828403121561172057600080fd5b8135611186816116f8565b60005b8381101561174657818101518382015260200161172e565b838111156109d55750506000910152565b6000815180845261176f81602086016020860161172b565b601f01601f19169290920160200192915050565b6020815260006111866020830184611757565b6000602082840312156117a857600080fd5b5035919050565b80356001600160a01b03811681146117c657600080fd5b919050565b600080604083850312156117de57600080fd5b6117e7836117af565b946020939093013593505050565b60008060006060848603121561180a57600080fd5b611813846117af565b9250611821602085016117af565b9150604084013590509250925092565b6000806040838503121561184457600080fd5b82359150611854602084016117af565b90509250929050565b60006020828403121561186f57600080fd5b611186826117af565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118a9576118a9611878565b604051601f8501601f19908116603f011681019082821181831017156118d1576118d1611878565b816040528093508581528686860111156118ea57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561191657600080fd5b813567ffffffffffffffff81111561192d57600080fd5b8201601f8101841361193e57600080fd5b610c3e8482356020840161188e565b6000806040838503121561196057600080fd5b611969836117af565b91506020830135801515811461197e57600080fd5b809150509250929050565b6000806000806080858703121561199f57600080fd5b6119a8856117af565b93506119b6602086016117af565b925060408501359150606085013567ffffffffffffffff8111156119d957600080fd5b8501601f810187136119ea57600080fd5b6119f98782356020840161188e565b91505092959194509250565b60008060408385031215611a1857600080fd5b611a21836117af565b9150611854602084016117af565b600181811c90821680611a4357607f821691505b602082108103611a6357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611a9157611a91611a69565b500390565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008219821115611af757611af7611a69565b500190565b60008151611b0e81856020860161172b565b9290920192915050565b600080845481600182811c915080831680611b3457607f831692505b60208084108203611b5357634e487b7160e01b86526022600452602486fd5b818015611b675760018114611b7857611ba5565b60ff19861689528489019650611ba5565b60008b81526020902060005b86811015611b9d5781548b820152908501908301611b84565b505084890196505b505050505050611bc9611bb88286611afc565b64173539b7b760d91b815260050190565b95945050505050565b600060ff821660ff8103611be857611be8611a69565b60010192915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611c5557611c55611a69565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c8157611c81611c5c565b500490565b600082611c9557611c95611c5c565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611cca57611cca611a69565b500290565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611d0781601785016020880161172b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611d3881602884016020880161172b565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d7790830184611757565b9695505050505050565b600060208284031215611d9357600080fd5b8151611186816116f8565b600081611dad57611dad611a69565b50600019019056fead3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb6a2646970667358221220a4227ad0dd1d609ee09f0855ba7a7901b665328cc21024d0ded02df43238753364736f6c634300080d0033",
  "deployedSourceMap": "313:3136:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:202;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1478:202:12;;;;;;;;2470:98:2;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1714:32:13;;;1696:51;;1684:2;1669:18;3935:167:2;1550:203:13;3467:407:2;;;;;;:::i;:::-;;:::i;:::-;;2886:208:12;;;:::i;4612:327:2:-;;;;;;:::i;:::-;;:::i;4391:129:0:-;;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;2859:25:13;;;2847:2;2832:18;4391:129:0;2713:177:13;4816:145:0;;;;;;:::i;:::-;;:::i;565:55:12:-;;;;;;:::i;:::-;;;;;;;;;;;;;;451:32;;;;;;489:23;;;;;;2716:160;;;;;;:::i;:::-;;:::i;5925:214:0:-;;;;;;:::i;:::-;;:::i;5005:179:2:-;;;;;;:::i;:::-;;:::i;1902:119:12:-;;;;;;:::i;:::-;;:::i;2302:127::-;;;;;;:::i;:::-;;:::i;2190:218:2:-;;;;;;:::i;:::-;;:::i;2143:149:12:-;;;;;;:::i;:::-;;:::i;1929:204:2:-;;;;;;:::i;:::-;;:::i;518:41:12:-;;;;;;:::i;:::-;;;;;;;;;;;;;;2895:145:0;;;;;;:::i;:::-;;:::i;2632:102:2:-;;;:::i;2027:49:0:-;;2072:4;2027:49;;4169:153:2;;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;:::i;:::-;;:::i;1181:291:12:-;;;;;;:::i;:::-;;:::i;5241:147:0:-;;;;;;:::i;:::-;;:::i;4388:162:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:2;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1478:202:12;1610:4;1637:36;1661:11;1637:23;:36::i;:::-;1630:43;1478:202;-1:-1:-1;;1478:202:12:o;2470:98:2:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:2;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:2;:2;-1:-1:-1;;;;;3604:11:2;;3596:57;;;;-1:-1:-1;;;3596:57:2;;6628:2:13;3596:57:2;;;6610:21:13;6667:2;6647:18;;;6640:30;6706:34;6686:18;;;6679:62;-1:-1:-1;;;6757:18:13;;;6750:31;6798:19;;3596:57:2;;;;;;;;;719:10:7;-1:-1:-1;;;;;3685:21:2;;;;:62;;-1:-1:-1;3710:37:2;3727:5;719:10:7;4388:162:2;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:2;;7030:2:13;3664:171:2;;;7012:21:13;7069:2;7049:18;;;7042:30;7108:34;7088:18;;;7081:62;7179:32;7159:18;;;7152:60;7229:19;;3664:171:2;6828:426:13;3664:171:2;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;2886:208:12:-;2954:10;2968:1;2933:32;;;:20;:32;;;;;;2925:83;;;;-1:-1:-1;;;2925:83:12;;7461:2:13;2925:83:12;;;7443:21:13;7500:2;7480:18;;;7473:30;7539:34;7519:18;;;7512:62;-1:-1:-1;;;7590:18:13;;;7583:32;7632:19;;2925:83:12;7259:398:13;2925:83:12;3039:10;3018:32;;;;:20;:32;;;;;:37;;3054:1;;3018:32;:37;;3054:1;;3018:37;:::i;:::-;;;;-1:-1:-1;3065:22:12;;-1:-1:-1;3076:10:12;3065;:22::i;:::-;2886:208::o;4612:327:2:-;4801:41;719:10:7;4834:7:2;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:2;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;4816:145:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;2716:160:12:-:0;2072:4:0;4491:12;;;;;-1:-1:-1;;;;;;;;;;;4491:22:0;2505:16;2516:4;2505:10;:16::i;:::-;-1:-1:-1;;;;;2831:24:12;::::1;;::::0;;;:20:::1;:24;::::0;;;;:38;;2859:10;;2831:24;:38:::1;::::0;2859:10;;2831:38:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;2716:160:12:o;5925:214:0:-;-1:-1:-1;;;;;6020:23:0;;719:10:7;6020:23:0;6012:83;;;;-1:-1:-1;;;6012:83:0;;8674:2:13;6012:83:0;;;8656:21:13;8713:2;8693:18;;;8686:30;8752:34;8732:18;;;8725:62;-1:-1:-1;;;8803:18:13;;;8796:45;8858:19;;6012:83:0;8472:411:13;6012:83:0;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;5005:179:2:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;1902:119:12:-;2072:4:0;4491:12;;;;;-1:-1:-1;;;;;;;;;;;4491:22:0;2505:16;2516:4;2505:10;:16::i;:::-;2001:13:12;;::::1;::::0;:7:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;2302:127::-:0;2072:4:0;4491:12;;;;;-1:-1:-1;;;;;;;;;;;4491:22:0;2505:16;2516:4;2505:10;:16::i;:::-;-1:-1:-1;2402:8:12::1;:20:::0;2302:127::o;2190:218:2:-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:2;;2323:56;;;;-1:-1:-1;;;2323:56:2;;9090:2:13;2323:56:2;;;9072:21:13;9129:2;9109:18;;;9102:30;-1:-1:-1;;;9148:18:13;;;9141:54;9212:18;;2323:56:2;8888:348:13;2143:149:12;2072:4:0;4491:12;;;;;-1:-1:-1;;;;;;;;;;;4491:22:0;2505:16;2516:4;2505:10;:16::i;:::-;-1:-1:-1;2251:17:12::1;:34:::0;2143:149::o;1929:204:2:-;2001:7;-1:-1:-1;;;;;2028:19:2;;2020:73;;;;-1:-1:-1;;;2020:73:2;;9443:2:13;2020:73:2;;;9425:21:13;9482:2;9462:18;;;9455:30;9521:34;9501:18;;;9494:62;-1:-1:-1;;;9572:18:13;;;9565:39;9621:19;;2020:73:2;9241:405:13;2020:73:2;-1:-1:-1;;;;;;2110:16:2;;;;;:9;:16;;;;;;;1929:204::o;2895:145:0:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;2632:102:2:-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:7;4296:8:2;4306;4263:18;:52::i;5250:315::-;5418:41;719:10:7;5451:7:2;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:2;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;1181:291:12:-;1286:13;1315:23;1330:7;1315:14;:23::i;:::-;1380:1;1362:7;1356:21;;;;;:::i;:::-;;;:25;:109;;;;;;;;;;;;;;;;;1434:14;;;;:5;:14;;;;;;1408:7;;1417:32;;:16;:32::i;:::-;1391:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1349:116;1181:291;-1:-1:-1;;1181:291:12:o;5241:147:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;1570:300:2:-:0;1672:4;-1:-1:-1;;;;;;1707:40:2;;-1:-1:-1;;;1707:40:2;;:104;;-1:-1:-1;;;;;;;1763:48:2;;-1:-1:-1;;;1763:48:2;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;11657:133::-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:2;11730:53;;;;-1:-1:-1;;;11730:53:2;;9090:2:13;11730:53:2;;;9072:21:13;9129:2;9109:18;;;9102:30;-1:-1:-1;;;9148:18:13;;;9141:54;9212:18;;11730:53:2;8888:348:13;11730:53:2;11657:133;:::o;10959:171::-;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:2;-1:-1:-1;;;;;11033:29:2;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:2;;;;;;;;;;;10959:171;;:::o;3248:198:12:-;3303:7;3299:141;3320:17;;3316:1;:21;;;3299:141;;;3358:14;3375:19;3382:8;;3392:1;3375:19;;:6;:19::i;:::-;3358:36;;3413:16;3418:6;3426:2;3413:4;:16::i;:::-;-1:-1:-1;3339:3:12;;;;:::i;:::-;;;;3299:141;;7317:261:2;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:2;:7;-1:-1:-1;;;;;7483:16:2;;:52;;;-1:-1:-1;;;;;;4508:25:2;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:2;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:2;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:2:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:2;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:2;;10361:81;;;;-1:-1:-1;;;10361:81:2;;11773:2:13;10361:81:2;;;11755:21:13;11812:2;11792:18;;;11785:30;11851:34;11831:18;;;11824:62;-1:-1:-1;;;11902:18:13;;;11895:35;11947:19;;10361:81:2;11571:401:13;10361:81:2;-1:-1:-1;;;;;10460:16:2;;10452:65;;;;-1:-1:-1;;;10452:65:2;;12179:2:13;10452:65:2;;;12161:21:13;12218:2;12198:18;;;12191:30;12257:34;12237:18;;;12230:62;-1:-1:-1;;;12308:18:13;;;12301:34;12352:19;;10452:65:2;11977:400:13;10452:65:2;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:2;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:2;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:2;-1:-1:-1;;;;;10727:21:2;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;3334:103:0:-;3400:30;3411:4;719:10:7;3400::0;:30::i;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:7;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;;;;;;;;;-1:-1:-1;;;;;7999:29:0;;;;;;;;;;:37;;-1:-1:-1;;7999:37:0;;;8055:40;719:10:7;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;11266:307:2:-;11416:8;-1:-1:-1;;;;;11407:17:2;:5;-1:-1:-1;;;;;11407:17:2;;11399:55;;;;-1:-1:-1;;;11399:55:2;;12584:2:13;11399:55:2;;;12566:21:13;12623:2;12603:18;;;12596:30;12662:27;12642:18;;;12635:55;12707:18;;11399:55:2;12382:349:13;11399:55:2;-1:-1:-1;;;;;11464:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:2;;;;;;;;;;11525:41;;540::13;;;11525::2;;513:18:13;11525:41:2;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:2;;;;;;;:::i;392:703:9:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:9;;;;;;;;;;;;-1:-1:-1;;;691:10:9;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:9;;-1:-1:-1;837:2:9;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:9;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:9;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:9;;;;;;;;-1:-1:-1;1036:11:9;1045:2;1036:11;;:::i;:::-;;;908:150;;2606:202:0;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:10;;;2765:36:0;829:155:10;2476:234:12;2544:7;2697:6;2615:16;2630:1;2615:12;:16;:::i;:::-;2605:27;2652:9;2657:4;2652:2;:9;:::i;:::-;2634:27;;:15;:27;:::i;:::-;2588:104;;;;;;14187:19:13;;;;14222:12;;14215:28;2663:16:12;14259:12:13;;;;14252:28;;;;2681:10:12;14314:15:13;;-1:-1:-1;;14310:53:13;14296:12;;;14289:75;14380:13;;2588:104:12;;;;;;;;;;;;2578:115;;;;;;2570:124;;:133;;;;:::i;:::-;2563:140;2476:234;-1:-1:-1;;;2476:234:12:o;3104:135::-;3166:15;3184:12;3193:2;3184:8;:12::i;:::-;3209:14;;;;:5;:14;;;;;:23;;;;-1:-1:-1;;3104:135:12:o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;12342:831:2:-;12491:4;-1:-1:-1;;;;;12511:13:2;;1465:19:6;:23;12507:660:2;;12546:71;;-1:-1:-1;;;12546:71:2;;-1:-1:-1;;;;;12546:36:2;;;;;:71;;719:10:7;;12597:4:2;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:2;;;;;;;;-1:-1:-1;;12546:71:2;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:2;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:2;-1:-1:-1;;;12667:51:2;;-1:-1:-1;12660:58:2;;12507:660;-1:-1:-1;13152:4:2;12342:831;;;;;;:::o;1686:210:12:-;1734:7;1753:15;1771:25;:15;918:14:8;;827:112;1771:25:12;1753:43;;1806:27;:15;1032:19:8;;1050:1;1032:19;;;945:123;1806:27:12;1843:22;1853:2;1857:7;1843:9;:22::i;1652:441:9:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:9;;1752:47;;-1:-1:-1;;;1809:6:9;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:9;;;;;;;;;-1:-1:-1;;;1834:6:9;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:9;;;;;;;;-1:-1:-1;1864:9:9;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:9;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:9;;;;;;;;-1:-1:-1;1979:1:9;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:9;;2000:55;;;;-1:-1:-1;;;2000:55:9;;16297:2:13;2000:55:9;;;16279:21:13;;;16316:18;;;16309:30;16375:34;16355:18;;;16348:62;16427:18;;2000:55:9;16095:356:13;7908:108:2;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;-1:-1:-1;;;8389:150:2;;;;;;;:::i;8868:427::-;-1:-1:-1;;;;;8947:16:2;;8939:61;;;;-1:-1:-1;;;8939:61:2;;16658:2:13;8939:61:2;;;16640:21:13;;;16677:18;;;16670:30;16736:34;16716:18;;;16709:62;16788:18;;8939:61:2;16456:356:13;8939:61:2;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:2;:30;9010:58;;;;-1:-1:-1;;;9010:58:2;;17019:2:13;9010:58:2;;;17001:21:13;17058:2;17038:18;;;17031:30;17097;17077:18;;;17070:58;17145:18;;9010:58:2;16817:352:13;9010:58:2;-1:-1:-1;;;;;9135:13:2;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:2;-1:-1:-1;;;;;9163:21:2;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;5925:214:0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:13;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:13;822:16;;815:27;592:258::o;855:269::-;908:3;946:5;940:12;973:6;968:3;961:19;989:63;1045:6;1038:4;1033:3;1029:14;1022:4;1015:5;1011:16;989:63;:::i;:::-;1106:2;1085:15;-1:-1:-1;;1081:29:13;1072:39;;;;1113:4;1068:50;;855:269;-1:-1:-1;;855:269:13:o;1129:231::-;1278:2;1267:9;1260:21;1241:4;1298:56;1350:2;1339:9;1335:18;1327:6;1298:56;:::i;1365:180::-;1424:6;1477:2;1465:9;1456:7;1452:23;1448:32;1445:52;;;1493:1;1490;1483:12;1445:52;-1:-1:-1;1516:23:13;;1365:180;-1:-1:-1;1365:180:13:o;1758:173::-;1826:20;;-1:-1:-1;;;;;1875:31:13;;1865:42;;1855:70;;1921:1;1918;1911:12;1855:70;1758:173;;;:::o;1936:254::-;2004:6;2012;2065:2;2053:9;2044:7;2040:23;2036:32;2033:52;;;2081:1;2078;2071:12;2033:52;2104:29;2123:9;2104:29;:::i;:::-;2094:39;2180:2;2165:18;;;;2152:32;;-1:-1:-1;;;1936:254:13:o;2195:328::-;2272:6;2280;2288;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2380:29;2399:9;2380:29;:::i;:::-;2370:39;;2428:38;2462:2;2451:9;2447:18;2428:38;:::i;:::-;2418:48;;2513:2;2502:9;2498:18;2485:32;2475:42;;2195:328;;;;;:::o;2895:254::-;2963:6;2971;3024:2;3012:9;3003:7;2999:23;2995:32;2992:52;;;3040:1;3037;3030:12;2992:52;3076:9;3063:23;3053:33;;3105:38;3139:2;3128:9;3124:18;3105:38;:::i;:::-;3095:48;;2895:254;;;;;:::o;3154:186::-;3213:6;3266:2;3254:9;3245:7;3241:23;3237:32;3234:52;;;3282:1;3279;3272:12;3234:52;3305:29;3324:9;3305:29;:::i;3527:127::-;3588:10;3583:3;3579:20;3576:1;3569:31;3619:4;3616:1;3609:15;3643:4;3640:1;3633:15;3659:632;3724:5;3754:18;3795:2;3787:6;3784:14;3781:40;;;3801:18;;:::i;:::-;3876:2;3870:9;3844:2;3930:15;;-1:-1:-1;;3926:24:13;;;3952:2;3922:33;3918:42;3906:55;;;3976:18;;;3996:22;;;3973:46;3970:72;;;4022:18;;:::i;:::-;4062:10;4058:2;4051:22;4091:6;4082:15;;4121:6;4113;4106:22;4161:3;4152:6;4147:3;4143:16;4140:25;4137:45;;;4178:1;4175;4168:12;4137:45;4228:6;4223:3;4216:4;4208:6;4204:17;4191:44;4283:1;4276:4;4267:6;4259;4255:19;4251:30;4244:41;;;;3659:632;;;;;:::o;4296:451::-;4365:6;4418:2;4406:9;4397:7;4393:23;4389:32;4386:52;;;4434:1;4431;4424:12;4386:52;4474:9;4461:23;4507:18;4499:6;4496:30;4493:50;;;4539:1;4536;4529:12;4493:50;4562:22;;4615:4;4607:13;;4603:27;-1:-1:-1;4593:55:13;;4644:1;4641;4634:12;4593:55;4667:74;4733:7;4728:2;4715:16;4710:2;4706;4702:11;4667:74;:::i;4752:347::-;4817:6;4825;4878:2;4866:9;4857:7;4853:23;4849:32;4846:52;;;4894:1;4891;4884:12;4846:52;4917:29;4936:9;4917:29;:::i;:::-;4907:39;;4996:2;4985:9;4981:18;4968:32;5043:5;5036:13;5029:21;5022:5;5019:32;5009:60;;5065:1;5062;5055:12;5009:60;5088:5;5078:15;;;4752:347;;;;;:::o;5104:667::-;5199:6;5207;5215;5223;5276:3;5264:9;5255:7;5251:23;5247:33;5244:53;;;5293:1;5290;5283:12;5244:53;5316:29;5335:9;5316:29;:::i;:::-;5306:39;;5364:38;5398:2;5387:9;5383:18;5364:38;:::i;:::-;5354:48;;5449:2;5438:9;5434:18;5421:32;5411:42;;5504:2;5493:9;5489:18;5476:32;5531:18;5523:6;5520:30;5517:50;;;5563:1;5560;5553:12;5517:50;5586:22;;5639:4;5631:13;;5627:27;-1:-1:-1;5617:55:13;;5668:1;5665;5658:12;5617:55;5691:74;5757:7;5752:2;5739:16;5734:2;5730;5726:11;5691:74;:::i;:::-;5681:84;;;5104:667;;;;;;;:::o;5776:260::-;5844:6;5852;5905:2;5893:9;5884:7;5880:23;5876:32;5873:52;;;5921:1;5918;5911:12;5873:52;5944:29;5963:9;5944:29;:::i;:::-;5934:39;;5992:38;6026:2;6015:9;6011:18;5992:38;:::i;6041:380::-;6120:1;6116:12;;;;6163;;;6184:61;;6238:4;6230:6;6226:17;6216:27;;6184:61;6291:2;6283:6;6280:14;6260:18;6257:38;6254:161;;6337:10;6332:3;6328:20;6325:1;6318:31;6372:4;6369:1;6362:15;6400:4;6397:1;6390:15;6254:161;;6041:380;;;:::o;7662:127::-;7723:10;7718:3;7714:20;7711:1;7704:31;7754:4;7751:1;7744:15;7778:4;7775:1;7768:15;7794:125;7834:4;7862:1;7859;7856:8;7853:34;;;7867:18;;:::i;:::-;-1:-1:-1;7904:9:13;;7794:125::o;7924:410::-;8126:2;8108:21;;;8165:2;8145:18;;;8138:30;8204:34;8199:2;8184:18;;8177:62;-1:-1:-1;;;8270:2:13;8255:18;;8248:44;8324:3;8309:19;;7924:410::o;8339:128::-;8379:3;8410:1;8406:6;8403:1;8400:13;8397:39;;;8416:18;;:::i;:::-;-1:-1:-1;8452:9:13;;8339:128::o;9777:185::-;9819:3;9857:5;9851:12;9872:52;9917:6;9912:3;9905:4;9898:5;9894:16;9872:52;:::i;:::-;9940:16;;;;;9777:185;-1:-1:-1;;9777:185:13:o;10085:1301::-;10362:3;10391:1;10424:6;10418:13;10454:3;10476:1;10504:9;10500:2;10496:18;10486:28;;10564:2;10553:9;10549:18;10586;10576:61;;10630:4;10622:6;10618:17;10608:27;;10576:61;10656:2;10704;10696:6;10693:14;10673:18;10670:38;10667:165;;-1:-1:-1;;;10731:33:13;;10787:4;10784:1;10777:15;10817:4;10738:3;10805:17;10667:165;10848:18;10875:104;;;;10993:1;10988:320;;;;10841:467;;10875:104;-1:-1:-1;;10908:24:13;;10896:37;;10953:16;;;;-1:-1:-1;10875:104:13;;10988:320;9724:1;9717:14;;;9761:4;9748:18;;11083:1;11097:165;11111:6;11108:1;11105:13;11097:165;;;11189:14;;11176:11;;;11169:35;11232:16;;;;11126:10;;11097:165;;;11101:3;;11291:6;11286:3;11282:16;11275:23;;10841:467;;;;;;;11324:56;11349:30;11375:3;11367:6;11349:30;:::i;:::-;-1:-1:-1;;;10027:20:13;;10072:1;10063:11;;9967:113;11324:56;11317:63;10085:1301;-1:-1:-1;;;;;10085:1301:13:o;11391:175::-;11428:3;11472:4;11465:5;11461:16;11501:4;11492:7;11489:17;11486:43;;11509:18;;:::i;:::-;11558:1;11545:15;;11391:175;-1:-1:-1;;11391:175:13:o;12736:414::-;12938:2;12920:21;;;12977:2;12957:18;;;12950:30;13016:34;13011:2;12996:18;;12989:62;-1:-1:-1;;;13082:2:13;13067:18;;13060:48;13140:3;13125:19;;12736:414::o;13155:135::-;13194:3;13215:17;;;13212:43;;13235:18;;:::i;:::-;-1:-1:-1;13282:1:13;13271:13;;13155:135::o;13295:127::-;13356:10;13351:3;13347:20;13344:1;13337:31;13387:4;13384:1;13377:15;13411:4;13408:1;13401:15;13427:120;13467:1;13493;13483:35;;13498:18;;:::i;:::-;-1:-1:-1;13532:9:13;;13427:120::o;13552:112::-;13584:1;13610;13600:35;;13615:18;;:::i;:::-;-1:-1:-1;13649:9:13;;13552:112::o;13669:127::-;13730:10;13725:3;13721:20;13718:1;13711:31;13761:4;13758:1;13751:15;13785:4;13782:1;13775:15;13801:168;13841:7;13907:1;13903;13899:6;13895:14;13892:1;13889:21;13884:1;13877:9;13870:17;13866:45;13863:71;;;13914:18;;:::i;:::-;-1:-1:-1;13954:9:13;;13801:168::o;14404:786::-;14815:25;14810:3;14803:38;14785:3;14870:6;14864:13;14886:62;14941:6;14936:2;14931:3;14927:12;14920:4;14912:6;14908:17;14886:62;:::i;:::-;-1:-1:-1;;;15007:2:13;14967:16;;;14999:11;;;14992:40;15057:13;;15079:63;15057:13;15128:2;15120:11;;15113:4;15101:17;;15079:63;:::i;:::-;15162:17;15181:2;15158:26;;14404:786;-1:-1:-1;;;;14404:786:13:o;15195:500::-;-1:-1:-1;;;;;15464:15:13;;;15446:34;;15516:15;;15511:2;15496:18;;15489:43;15563:2;15548:18;;15541:34;;;15611:3;15606:2;15591:18;;15584:31;;;15389:4;;15632:57;;15669:19;;15661:6;15632:57;:::i;:::-;15624:65;15195:500;-1:-1:-1;;;;;;15195:500:13:o;15700:249::-;15769:6;15822:2;15810:9;15801:7;15797:23;15793:32;15790:52;;;15838:1;15835;15828:12;15790:52;15870:9;15864:16;15889:30;15913:5;15889:30;:::i;15954:136::-;15993:3;16021:5;16011:39;;16030:18;;:::i;:::-;-1:-1:-1;;;16066:18:13;;15954:136::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": { "details": "See {IERC721-approve}." },
      "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
      "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": { "details": "See {IERC721Metadata-name}." },
      "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": { "details": "See {IERC721Metadata-symbol}." },
      "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [313, 3449],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67C586C5 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x67C586C5 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x8DC10768 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x5B91FD8D EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x32D1DEAF GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x32D1DEAF EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x33A3611F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3289D6F1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x32C13287 EQ PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xC7C0C0F EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x244 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x185D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x284 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x284 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0x244 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x244 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH2 0x219 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x284 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x445 DUP3 PUSH2 0xA77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x1A2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP3 PUSH2 0xAB7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F DUP3 PUSH2 0x853 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x59D JUMPI POP PUSH2 0x59D DUP2 CALLER PUSH2 0x40C JUMP JUMPDEST PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 PUSH2 0xB19 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820626F6F737465727320616C6C6F77656420746F2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7579 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x6A5 SWAP1 DUP5 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x6B4 SWAP1 POP CALLER PUSH2 0xB87 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C0 CALLER DUP3 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1A96 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x702 DUP2 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DB6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x72D DUP2 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x755 SWAP1 DUP5 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0x7D9 DUP3 DUP3 PUSH2 0xE70 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DB6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x819 DUP2 PUSH2 0xDE2 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x619 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DB6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x84D DUP2 PUSH2 0xDE2 JUMP JUMPDEST POP PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DB6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x8D4 DUP2 PUSH2 0xDE2 JUMP JUMPDEST POP PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x7D9 CALLER DUP4 DUP4 PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x9AD CALLER DUP4 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1A96 JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFA3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9E6 DUP3 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP1 SLOAD PUSH2 0x9F5 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP GT PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x445 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xC SWAP1 PUSH2 0xA2C SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3D SWAP3 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA6D DUP2 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xAA8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x445 JUMPI POP PUSH2 0x445 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xB4E DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 PUSH2 0xBA8 PUSH1 0x9 SLOAD DUP4 PUSH1 0xFF AND PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH2 0xBB4 DUP2 DUP5 PUSH2 0x118D JUMP JUMPDEST POP DUP1 PUSH2 0xBBF DUP2 PUSH2 0x1BD2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD3 DUP4 PUSH2 0x853 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xC3E JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC33 DUP5 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC59 DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x0 DUP3 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD53 SWAP1 DUP5 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD81 SWAP1 DUP5 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB16 DUP2 CALLER PUSH2 0x11AE JUMP JUMPDEST PUSH2 0xDF6 DUP3 DUP3 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE2C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE7A DUP3 DUP3 PUSH2 0x960 JUMP JUMPDEST ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFAE DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0xFBA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xFFD JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1027 JUMPI DUP1 PUSH2 0x1011 DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x106C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xC3E JUMPI PUSH2 0x1081 PUSH1 0x1 DUP4 PUSH2 0x1A7F JUMP JUMPDEST SWAP2 POP PUSH2 0x108E PUSH1 0xA DUP7 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1099 SWAP1 PUSH1 0x30 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10AE JUMPI PUSH2 0x10AE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10D0 PUSH1 0xA DUP7 PUSH2 0x1C72 JUMP JUMPDEST SWAP5 POP PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x445 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x445 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x111A PUSH1 0x1 NUMBER PUSH2 0x1A7F JUMP JUMPDEST BLOCKHASH PUSH2 0x1126 DUP5 PUSH1 0x2F PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x1130 SWAP1 TIMESTAMP PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE DIFFICULTY PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 DUP3 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH2 0x11B8 DUP3 DUP3 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x7D9 JUMPI PUSH2 0x11D0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x11DB DUP4 PUSH1 0x20 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11EC SWAP3 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x578 SWAP2 PUSH1 0x4 ADD PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1308 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1256 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1291 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x128E SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12EE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xC3E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x131F PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x132F PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x445 DUP4 DUP3 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1348 DUP4 PUSH1 0x2 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x1353 SWAP1 PUSH1 0x2 PUSH2 0x1AE4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136B PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1395 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13B0 JUMPI PUSH2 0x13B0 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1403 DUP5 PUSH1 0x2 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x140E SWAP1 PUSH1 0x1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1486 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1442 JUMPI PUSH2 0x1442 PUSH2 0x1C9A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x147F DUP2 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x1411 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0x7D9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14F4 DUP4 DUP4 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x1501 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1601 SWAP1 DUP5 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x166B SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x168D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x16D3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x16D3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x16D3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16D3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16B8 JUMP JUMPDEST POP PUSH2 0x16DF SWAP3 SWAP2 POP PUSH2 0x16E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1186 DUP2 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1746 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x172E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9D5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x176F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x172B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1186 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17E7 DUP4 PUSH2 0x17AF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x180A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1813 DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP PUSH2 0x1821 PUSH1 0x20 DUP6 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1854 PUSH1 0x20 DUP5 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1186 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A9 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D1 PUSH2 0x1878 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x188E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1969 DUP4 PUSH2 0x17AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A8 DUP6 PUSH2 0x17AF JUMP JUMPDEST SWAP4 POP PUSH2 0x19B6 PUSH1 0x20 DUP7 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x19EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19F9 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x188E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A21 DUP4 PUSH2 0x17AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1854 PUSH1 0x20 DUP5 ADD PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A91 JUMPI PUSH2 0x1A91 PUSH2 0x1A69 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF7 PUSH2 0x1A69 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1B0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x172B JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1B34 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x1B53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B78 JUMPI PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1B9D JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1B84 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x1BC9 PUSH2 0x1BB8 DUP3 DUP7 PUSH2 0x1AFC JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1BE8 JUMPI PUSH2 0x1BE8 PUSH2 0x1A69 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C55 JUMPI PUSH2 0x1C55 PUSH2 0x1A69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C81 JUMPI PUSH2 0x1C81 PUSH2 0x1C5C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C95 JUMPI PUSH2 0x1C95 PUSH2 0x1C5C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CCA PUSH2 0x1A69 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1D07 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x172B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1D38 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x172B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D77 SWAP1 DUP4 ADD DUP5 PUSH2 0x1757 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1186 DUP2 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x1A69 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xAD ORIGIN 0x28 0xB6 PUSH23 0xF7D3CD4284A5443F17F1962B36E491B30A40B2405849E5 SWAP8 0xBA 0x5F 0xB6 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x22 PUSH27 0xD0DD1D609EE09F0855BA7A7901B665328CC21024D0DED02DF43238 PUSH22 0x3364736F6C634300080D003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": { "fn": null, "offset": [313, 3449], "op": "MSTORE", "path": "12" },
    "5": { "fn": null, "offset": [313, 3449], "op": "CALLVALUE", "path": "12" },
    "6": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "7": { "fn": null, "offset": [313, 3449], "op": "ISZERO", "path": "12" },
    "8": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "12": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [313, 3449],
      "op": "REVERT",
      "path": "12"
    },
    "16": { "fn": null, "offset": [313, 3449], "op": "JUMPDEST", "path": "12" },
    "17": { "fn": null, "offset": [313, 3449], "op": "POP", "path": "12" },
    "18": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [313, 3449],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": { "fn": null, "offset": [313, 3449], "op": "LT", "path": "12" },
    "22": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C4"
    },
    "25": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "26": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [313, 3449],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": { "fn": null, "offset": [313, 3449], "op": "SHR", "path": "12" },
    "32": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "33": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x55F804B3"
    },
    "38": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "39": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF9"
    },
    "42": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "43": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "44": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95D89B41"
    },
    "49": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "50": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97"
    },
    "53": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "54": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "55": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB88D4FDE"
    },
    "60": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "61": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x71"
    },
    "64": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "65": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "66": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB88D4FDE"
    },
    "71": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "72": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C5"
    },
    "75": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "76": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "77": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC87B56DD"
    },
    "82": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "83": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D8"
    },
    "86": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "87": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "88": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "93": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "94": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EB"
    },
    "97": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "98": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "99": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE985E9C5"
    },
    "104": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "105": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FE"
    },
    "108": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "109": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "111": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "112": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "113": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "114": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "115": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95D89B41"
    },
    "120": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "121": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A2"
    },
    "124": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "125": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "126": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "131": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "132": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AA"
    },
    "135": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "136": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "137": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA22CB465"
    },
    "142": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "143": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B2"
    },
    "146": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "147": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "149": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "150": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "151": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "152": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "153": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x67C586C5"
    },
    "158": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "159": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD3"
    },
    "162": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "163": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "164": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x67C586C5"
    },
    "169": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "170": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349"
    },
    "173": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "174": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "175": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "180": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "181": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C"
    },
    "184": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "185": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "186": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DC10768"
    },
    "191": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "192": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36F"
    },
    "195": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "196": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "197": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "202": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "203": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38F"
    },
    "206": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "207": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "209": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "210": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "211": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "212": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "213": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x55F804B3"
    },
    "218": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "219": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x310"
    },
    "222": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "223": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "224": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5B91FD8D"
    },
    "229": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "230": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x323"
    },
    "233": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "234": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "235": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6352211E"
    },
    "240": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "241": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x336"
    },
    "244": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "245": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "247": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "248": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "249": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "250": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "251": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "256": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "257": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "260": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "261": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "262": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x32D1DEAF"
    },
    "267": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "268": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x140"
    },
    "271": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "272": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "273": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x32D1DEAF"
    },
    "278": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "279": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CE"
    },
    "282": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "283": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "284": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x33A3611F"
    },
    "289": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "290": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D7"
    },
    "293": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "294": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "295": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x36568ABE"
    },
    "300": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "301": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EA"
    },
    "304": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "305": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "306": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "311": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "312": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FD"
    },
    "315": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "316": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "318": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "319": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "320": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "321": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "322": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "327": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "328": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x292"
    },
    "331": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "332": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "333": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3289D6F1"
    },
    "338": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "339": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A5"
    },
    "342": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "343": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "344": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x32C13287"
    },
    "349": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "350": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C5"
    },
    "353": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "354": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "356": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "357": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "358": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "359": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "360": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "365": { "fn": null, "offset": [313, 3449], "op": "GT", "path": "12" },
    "366": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A2"
    },
    "369": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "370": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "371": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x95EA7B3"
    },
    "376": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "377": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231"
    },
    "380": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "381": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "382": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC7C0C0F"
    },
    "387": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "388": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x246"
    },
    "391": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "392": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "393": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x23B872DD"
    },
    "398": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "399": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24E"
    },
    "402": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "403": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "404": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "409": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "410": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x261"
    },
    "413": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "414": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "416": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "417": { "fn": null, "offset": [313, 3449], "op": "REVERT", "path": "12" },
    "418": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "419": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "420": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1FFC9A7"
    },
    "425": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "426": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C9"
    },
    "429": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "430": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "431": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6FDDE03"
    },
    "436": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "437": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F1"
    },
    "440": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "441": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "442": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH4",
      "path": "12",
      "value": "0x81812FC"
    },
    "447": { "fn": null, "offset": [313, 3449], "op": "EQ", "path": "12" },
    "448": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH2",
      "path": "12",
      "value": "0x206"
    },
    "451": { "fn": null, "offset": [313, 3449], "op": "JUMPI", "path": "12" },
    "452": {
      "fn": null,
      "offset": [313, 3449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "453": {
      "fn": null,
      "offset": [313, 3449],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "455": { "fn": null, "offset": [313, 3449], "op": "DUP1", "path": "12" },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [313, 3449],
      "op": "REVERT",
      "path": "12"
    },
    "457": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "JUMPDEST",
      "path": "12"
    },
    "458": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DC"
    },
    "461": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D7"
    },
    "464": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "465": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "467": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH2",
      "path": "12",
      "value": "0x170E"
    },
    "470": {
      "fn": "Diffemon.supportsInterface",
      "jump": "i",
      "offset": [1478, 1680],
      "op": "JUMP",
      "path": "12"
    },
    "471": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "JUMPDEST",
      "path": "12"
    },
    "472": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43A"
    },
    "475": {
      "fn": "Diffemon.supportsInterface",
      "jump": "i",
      "offset": [1478, 1680],
      "op": "JUMP",
      "path": "12"
    },
    "476": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "JUMPDEST",
      "path": "12"
    },
    "477": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "479": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "MLOAD",
      "path": "12"
    },
    "480": { "op": "SWAP1" },
    "481": { "op": "ISZERO" },
    "482": { "op": "ISZERO" },
    "483": { "op": "DUP2" },
    "484": { "op": "MSTORE" },
    "485": { "op": "PUSH1", "value": "0x20" },
    "487": { "op": "ADD" },
    "488": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "JUMPDEST",
      "path": "12"
    },
    "489": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "491": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "MLOAD",
      "path": "12"
    },
    "492": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "DUP1",
      "path": "12"
    },
    "493": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "SWAP2",
      "path": "12"
    },
    "494": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "SUB",
      "path": "12"
    },
    "495": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "SWAP1",
      "path": "12"
    },
    "496": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "RETURN",
      "path": "12"
    },
    "497": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "JUMPDEST",
      "path": "2"
    },
    "498": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "501": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44B"
    },
    "504": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [2470, 2568],
      "op": "JUMP",
      "path": "2"
    },
    "505": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "JUMPDEST",
      "path": "2"
    },
    "506": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "508": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "MLOAD",
      "path": "2"
    },
    "509": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8"
    },
    "512": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "SWAP2",
      "path": "2"
    },
    "513": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1783"
    },
    "517": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [2470, 2568],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "522": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH2",
      "path": "2",
      "value": "0x214"
    },
    "525": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "526": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "528": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1796"
    },
    "531": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [3935, 4102],
      "op": "JUMP",
      "path": "2"
    },
    "532": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "JUMPDEST",
      "path": "2"
    },
    "533": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "536": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [3935, 4102],
      "op": "JUMP",
      "path": "2"
    },
    "537": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "540": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "MLOAD",
      "path": "2"
    },
    "541": { "op": "PUSH1", "value": "0x1" },
    "543": { "op": "PUSH1", "value": "0x1" },
    "545": { "op": "PUSH1", "value": "0xA0" },
    "547": { "op": "SHL" },
    "548": { "op": "SUB" },
    "549": { "op": "SWAP1" },
    "550": { "op": "SWAP2" },
    "551": { "op": "AND" },
    "552": { "op": "DUP2" },
    "553": { "op": "MSTORE" },
    "554": { "op": "PUSH1", "value": "0x20" },
    "556": { "op": "ADD" },
    "557": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8"
    },
    "560": { "op": "JUMP" },
    "561": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "JUMPDEST",
      "path": "2"
    },
    "562": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "565": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F"
    },
    "568": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "569": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "571": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CB"
    },
    "574": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [3467, 3874],
      "op": "JUMP",
      "path": "2"
    },
    "575": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "JUMPDEST",
      "path": "2"
    },
    "576": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "PUSH2",
      "path": "2",
      "value": "0x504"
    },
    "579": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [3467, 3874],
      "op": "JUMP",
      "path": "2"
    },
    "580": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "JUMPDEST",
      "path": "2"
    },
    "581": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "STOP",
      "path": "2"
    },
    "582": {
      "fn": "Diffemon.buyBooster",
      "offset": [2886, 3094],
      "op": "JUMPDEST",
      "path": "12"
    },
    "583": {
      "fn": "Diffemon.buyBooster",
      "offset": [2886, 3094],
      "op": "PUSH2",
      "path": "12",
      "value": "0x244"
    },
    "586": {
      "fn": "Diffemon.buyBooster",
      "offset": [2886, 3094],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61E"
    },
    "589": {
      "fn": "Diffemon.buyBooster",
      "jump": "i",
      "offset": [2886, 3094],
      "op": "JUMP",
      "path": "12"
    },
    "590": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "JUMPDEST",
      "path": "2"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "594": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "600": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F5"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [4612, 4939],
      "op": "JUMP",
      "path": "2"
    },
    "604": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "JUMPDEST",
      "path": "2"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B6"
    },
    "608": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [4612, 4939],
      "op": "JUMP",
      "path": "2"
    },
    "609": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "JUMPDEST",
      "path": "0"
    },
    "610": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "613": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26F"
    },
    "616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "617": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1796"
    },
    "622": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [4391, 4520],
      "op": "JUMP",
      "path": "0"
    },
    "623": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "JUMPDEST",
      "path": "0"
    },
    "624": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4465, 4472],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "626": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0",
      "statement": 0
    },
    "627": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "628": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "629": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "631": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "632": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "634": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "636": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "KECCAK256",
      "path": "0"
    },
    "638": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "640": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "ADD",
      "path": "0"
    },
    "641": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "642": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "647": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "MLOAD",
      "path": "0"
    },
    "648": { "op": "SWAP1" },
    "649": { "op": "DUP2" },
    "650": { "op": "MSTORE" },
    "651": { "op": "PUSH1", "value": "0x20" },
    "653": { "op": "ADD" },
    "654": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4391, 4520],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8"
    },
    "657": { "op": "JUMP" },
    "658": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "659": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "662": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "665": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "666": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "668": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1831"
    },
    "671": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [4816, 4961],
      "op": "JUMP",
      "path": "0"
    },
    "672": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "673": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E7"
    },
    "676": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [4816, 4961],
      "op": "JUMP",
      "path": "0"
    },
    "677": { "offset": [565, 620], "op": "JUMPDEST", "path": "12" },
    "678": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH2",
      "path": "12",
      "value": "0x284"
    },
    "681": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B3"
    },
    "684": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "685": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "687": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH2",
      "path": "12",
      "value": "0x185D"
    },
    "690": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [565, 620],
      "op": "JUMP",
      "path": "12"
    },
    "691": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "JUMPDEST",
      "path": "12"
    },
    "692": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "694": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "696": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "MSTORE",
      "path": "12"
    },
    "697": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "699": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "SWAP1",
      "path": "12"
    },
    "700": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "DUP2",
      "path": "12"
    },
    "701": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "MSTORE",
      "path": "12"
    },
    "702": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "704": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "SWAP1",
      "path": "12"
    },
    "705": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "KECCAK256",
      "path": "12"
    },
    "706": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "SLOAD",
      "path": "12"
    },
    "707": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "DUP2",
      "path": "12"
    },
    "708": {
      "fn": "AccessControl.grantRole",
      "offset": [565, 620],
      "op": "JUMP",
      "path": "12"
    },
    "709": { "offset": [451, 483], "op": "JUMPDEST", "path": "12" },
    "710": {
      "fn": "AccessControl.grantRole",
      "offset": [451, 483],
      "op": "PUSH2",
      "path": "12",
      "value": "0x284"
    },
    "713": {
      "fn": "AccessControl.grantRole",
      "offset": [451, 483],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "715": {
      "fn": "AccessControl.grantRole",
      "offset": [451, 483],
      "op": "SLOAD",
      "path": "12"
    },
    "716": {
      "fn": "AccessControl.grantRole",
      "offset": [451, 483],
      "op": "DUP2",
      "path": "12"
    },
    "717": {
      "fn": "AccessControl.grantRole",
      "offset": [451, 483],
      "op": "JUMP",
      "path": "12"
    },
    "718": { "offset": [489, 512], "op": "JUMPDEST", "path": "12" },
    "719": {
      "fn": "AccessControl.grantRole",
      "offset": [489, 512],
      "op": "PUSH2",
      "path": "12",
      "value": "0x284"
    },
    "722": {
      "fn": "AccessControl.grantRole",
      "offset": [489, 512],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "724": {
      "fn": "AccessControl.grantRole",
      "offset": [489, 512],
      "op": "SLOAD",
      "path": "12"
    },
    "725": {
      "fn": "AccessControl.grantRole",
      "offset": [489, 512],
      "op": "DUP2",
      "path": "12"
    },
    "726": {
      "fn": "AccessControl.grantRole",
      "offset": [489, 512],
      "op": "JUMP",
      "path": "12"
    },
    "727": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "JUMPDEST",
      "path": "12"
    },
    "728": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "PUSH2",
      "path": "12",
      "value": "0x244"
    },
    "731": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E5"
    },
    "734": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "735": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "737": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17CB"
    },
    "740": {
      "fn": "Diffemon.allotBoosters",
      "jump": "i",
      "offset": [2716, 2876],
      "op": "JUMP",
      "path": "12"
    },
    "741": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "JUMPDEST",
      "path": "12"
    },
    "742": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "PUSH2",
      "path": "12",
      "value": "0x70C"
    },
    "745": {
      "fn": "Diffemon.allotBoosters",
      "jump": "i",
      "offset": [2716, 2876],
      "op": "JUMP",
      "path": "12"
    },
    "746": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "JUMPDEST",
      "path": "0"
    },
    "747": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "750": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F8"
    },
    "753": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "754": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "756": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1831"
    },
    "759": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [5925, 6139],
      "op": "JUMP",
      "path": "0"
    },
    "760": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "JUMPDEST",
      "path": "0"
    },
    "761": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75F"
    },
    "764": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [5925, 6139],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "JUMPDEST",
      "path": "2"
    },
    "766": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30B"
    },
    "772": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "773": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "775": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F5"
    },
    "778": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5005, 5184],
      "op": "JUMP",
      "path": "2"
    },
    "779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "JUMPDEST",
      "path": "2"
    },
    "780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DD"
    },
    "783": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5005, 5184],
      "op": "JUMP",
      "path": "2"
    },
    "784": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "785": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x244"
    },
    "788": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31E"
    },
    "791": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "792": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "794": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1904"
    },
    "797": {
      "fn": "Diffemon.setBaseURI",
      "jump": "i",
      "offset": [1902, 2021],
      "op": "JUMP",
      "path": "12"
    },
    "798": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "799": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7F8"
    },
    "802": {
      "fn": "Diffemon.setBaseURI",
      "jump": "i",
      "offset": [1902, 2021],
      "op": "JUMP",
      "path": "12"
    },
    "803": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "804": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x244"
    },
    "807": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x331"
    },
    "810": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "811": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "813": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1796"
    },
    "816": {
      "fn": "Diffemon.setNumCards",
      "jump": "i",
      "offset": [2302, 2429],
      "op": "JUMP",
      "path": "12"
    },
    "817": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "818": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82C"
    },
    "821": {
      "fn": "Diffemon.setNumCards",
      "jump": "i",
      "offset": [2302, 2429],
      "op": "JUMP",
      "path": "12"
    },
    "822": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "JUMPDEST",
      "path": "2"
    },
    "823": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "826": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "PUSH2",
      "path": "2",
      "value": "0x344"
    },
    "829": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "830": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "832": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1796"
    },
    "835": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [2190, 2408],
      "op": "JUMP",
      "path": "2"
    },
    "836": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "JUMPDEST",
      "path": "2"
    },
    "837": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "840": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [2190, 2408],
      "op": "JUMP",
      "path": "2"
    },
    "841": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "JUMPDEST",
      "path": "12"
    },
    "842": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "PUSH2",
      "path": "12",
      "value": "0x244"
    },
    "845": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "PUSH2",
      "path": "12",
      "value": "0x357"
    },
    "848": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "849": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "851": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1796"
    },
    "854": {
      "fn": "Diffemon.setBoosterSize",
      "jump": "i",
      "offset": [2143, 2292],
      "op": "JUMP",
      "path": "12"
    },
    "855": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "JUMPDEST",
      "path": "12"
    },
    "856": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B3"
    },
    "859": {
      "fn": "Diffemon.setBoosterSize",
      "jump": "i",
      "offset": [2143, 2292],
      "op": "JUMP",
      "path": "12"
    },
    "860": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "JUMPDEST",
      "path": "2"
    },
    "861": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "864": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A"
    },
    "867": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "868": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "870": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "PUSH2",
      "path": "2",
      "value": "0x185D"
    },
    "873": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [1929, 2133],
      "op": "JUMP",
      "path": "2"
    },
    "874": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "JUMPDEST",
      "path": "2"
    },
    "875": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DA"
    },
    "878": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [1929, 2133],
      "op": "JUMP",
      "path": "2"
    },
    "879": { "offset": [518, 559], "op": "JUMPDEST", "path": "12" },
    "880": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH2",
      "path": "12",
      "value": "0x284"
    },
    "883": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37D"
    },
    "886": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "887": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "889": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1796"
    },
    "892": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [518, 559],
      "op": "JUMP",
      "path": "12"
    },
    "893": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "JUMPDEST",
      "path": "12"
    },
    "894": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "896": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "898": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "MSTORE",
      "path": "12"
    },
    "899": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "SWAP1",
      "path": "12"
    },
    "902": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "DUP2",
      "path": "12"
    },
    "903": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "MSTORE",
      "path": "12"
    },
    "904": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "906": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "SWAP1",
      "path": "12"
    },
    "907": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "KECCAK256",
      "path": "12"
    },
    "908": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "SLOAD",
      "path": "12"
    },
    "909": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "DUP2",
      "path": "12"
    },
    "910": {
      "fn": "ERC721.balanceOf",
      "offset": [518, 559],
      "op": "JUMP",
      "path": "12"
    },
    "911": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "JUMPDEST",
      "path": "0"
    },
    "912": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "915": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39D"
    },
    "918": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "919": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "921": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1831"
    },
    "924": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [2895, 3040],
      "op": "JUMP",
      "path": "0"
    },
    "925": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "JUMPDEST",
      "path": "0"
    },
    "926": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "929": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [2895, 3040],
      "op": "JUMP",
      "path": "0"
    },
    "930": {
      "fn": "ERC721.symbol",
      "offset": [2632, 2734],
      "op": "JUMPDEST",
      "path": "2"
    },
    "931": {
      "fn": "ERC721.symbol",
      "offset": [2632, 2734],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "934": {
      "fn": "ERC721.symbol",
      "offset": [2632, 2734],
      "op": "PUSH2",
      "path": "2",
      "value": "0x989"
    },
    "937": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [2632, 2734],
      "op": "JUMP",
      "path": "2"
    },
    "938": { "offset": [2027, 2076], "op": "JUMPDEST", "path": "0" },
    "939": {
      "fn": "ERC721.symbol",
      "offset": [2027, 2076],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "942": {
      "offset": [2072, 2076],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "944": { "offset": [2027, 2076], "op": "DUP2", "path": "0" },
    "945": {
      "fn": "ERC721.symbol",
      "offset": [2027, 2076],
      "op": "JUMP",
      "path": "0"
    },
    "946": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "JUMPDEST",
      "path": "2"
    },
    "947": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0"
    },
    "953": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "954": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "956": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "PUSH2",
      "path": "2",
      "value": "0x194D"
    },
    "959": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [4169, 4322],
      "op": "JUMP",
      "path": "2"
    },
    "960": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "PUSH2",
      "path": "2",
      "value": "0x998"
    },
    "964": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [4169, 4322],
      "op": "JUMP",
      "path": "2"
    },
    "965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "JUMPDEST",
      "path": "2"
    },
    "966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "969": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3"
    },
    "972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "973": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1989"
    },
    "978": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5250, 5565],
      "op": "JUMP",
      "path": "2"
    },
    "979": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "JUMPDEST",
      "path": "2"
    },
    "980": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A3"
    },
    "983": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5250, 5565],
      "op": "JUMP",
      "path": "2"
    },
    "984": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "JUMPDEST",
      "path": "12"
    },
    "985": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F9"
    },
    "988": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E6"
    },
    "991": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "992": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "994": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1796"
    },
    "997": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1181, 1472],
      "op": "JUMP",
      "path": "12"
    },
    "998": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "JUMPDEST",
      "path": "12"
    },
    "999": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9DB"
    },
    "1002": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1181, 1472],
      "op": "JUMP",
      "path": "12"
    },
    "1003": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "1007": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1010": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1011": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1013": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1831"
    },
    "1016": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [5241, 5388],
      "op": "JUMP",
      "path": "0"
    },
    "1017": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA52"
    },
    "1021": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [5241, 5388],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1023": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC"
    },
    "1026": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C"
    },
    "1029": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1030": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1032": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A05"
    },
    "1035": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [4388, 4550],
      "op": "JUMP",
      "path": "2"
    },
    "1036": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1037": { "op": "PUSH1", "value": "0x1" },
    "1039": { "op": "PUSH1", "value": "0x1" },
    "1041": { "op": "PUSH1", "value": "0xA0" },
    "1043": { "op": "SHL" },
    "1044": { "op": "SUB" },
    "1045": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "SWAP2",
      "path": "2",
      "statement": 1
    },
    "1046": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP3",
      "path": "2"
    },
    "1047": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "AND",
      "path": "2"
    },
    "1048": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4485, 4489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1050": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "SWAP1",
      "path": "2"
    },
    "1051": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP2",
      "path": "2"
    },
    "1052": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "MSTORE",
      "path": "2"
    },
    "1053": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4526],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1055": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1057": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "SWAP1",
      "path": "2"
    },
    "1058": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP2",
      "path": "2"
    },
    "1059": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "MSTORE",
      "path": "2"
    },
    "1060": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1062": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP1",
      "path": "2"
    },
    "1063": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP4",
      "path": "2"
    },
    "1064": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "KECCAK256",
      "path": "2"
    },
    "1065": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP4",
      "path": "2"
    },
    "1066": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP1",
      "path": "2"
    },
    "1067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP5",
      "path": "2"
    },
    "1068": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "AND",
      "path": "2"
    },
    "1069": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "DUP3",
      "path": "2"
    },
    "1070": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "MSTORE",
      "path": "2"
    },
    "1071": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP2",
      "path": "2"
    },
    "1072": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP1",
      "path": "2"
    },
    "1073": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP2",
      "path": "2"
    },
    "1074": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "MSTORE",
      "path": "2"
    },
    "1075": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "KECCAK256",
      "path": "2"
    },
    "1076": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SLOAD",
      "path": "2"
    },
    "1077": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "AND",
      "path": "2"
    },
    "1080": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP1",
      "path": "2"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "JUMP",
      "path": "2"
    },
    "1082": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1083": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1610, 1614],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1085": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1637, 1673],
      "op": "PUSH2",
      "path": "12",
      "statement": 2,
      "value": "0x445"
    },
    "1088": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1661, 1672],
      "op": "DUP3",
      "path": "12"
    },
    "1089": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1637, 1660],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA77"
    },
    "1092": {
      "fn": "Diffemon.supportsInterface",
      "jump": "i",
      "offset": [1637, 1673],
      "op": "JUMP",
      "path": "12"
    },
    "1093": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1637, 1673],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1094": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1630, 1673],
      "op": "SWAP3",
      "path": "12"
    },
    "1095": {
      "fn": "Diffemon.supportsInterface",
      "offset": [1478, 1680],
      "op": "SWAP2",
      "path": "12"
    },
    "1096": { "op": "POP" },
    "1097": { "op": "POP" },
    "1098": {
      "fn": "Diffemon.supportsInterface",
      "jump": "o",
      "offset": [1478, 1680],
      "op": "JUMP",
      "path": "12"
    },
    "1099": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1100": {
      "fn": "ERC721.name",
      "offset": [2524, 2537],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1102": {
      "fn": "ERC721.name",
      "offset": [2556, 2561],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "1104": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1105": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SLOAD",
      "path": "2"
    },
    "1106": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45A"
    },
    "1109": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1110": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2F"
    },
    "1113": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [2549, 2561],
      "op": "JUMP",
      "path": "2"
    },
    "1114": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1115": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1116": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1118": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1119": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1121": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1122": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1123": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DIV",
      "path": "2"
    },
    "1124": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MUL",
      "path": "2"
    },
    "1125": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1127": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1128": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1130": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MLOAD",
      "path": "2"
    },
    "1131": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1132": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP2",
      "path": "2"
    },
    "1133": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1134": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1136": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MSTORE",
      "path": "2"
    },
    "1137": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1138": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP3",
      "path": "2"
    },
    "1139": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1140": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1141": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP2",
      "path": "2"
    },
    "1142": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP2",
      "path": "2"
    },
    "1143": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MSTORE",
      "path": "2"
    },
    "1144": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1146": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1147": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP3",
      "path": "2"
    },
    "1148": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1149": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SLOAD",
      "path": "2"
    },
    "1150": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x486"
    },
    "1153": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1154": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2F"
    },
    "1157": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [2549, 2561],
      "op": "JUMP",
      "path": "2"
    },
    "1158": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1159": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1160": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ISZERO",
      "path": "2"
    },
    "1161": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D3"
    },
    "1164": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPI",
      "path": "2"
    },
    "1165": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1166": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1168": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "LT",
      "path": "2"
    },
    "1169": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A8"
    },
    "1172": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPI",
      "path": "2"
    },
    "1173": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1176": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1177": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP4",
      "path": "2"
    },
    "1178": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SLOAD",
      "path": "2"
    },
    "1179": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DIV",
      "path": "2"
    },
    "1180": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MUL",
      "path": "2"
    },
    "1181": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP4",
      "path": "2"
    },
    "1182": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MSTORE",
      "path": "2"
    },
    "1183": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1184": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1186": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1187": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1188": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D3"
    },
    "1191": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMP",
      "path": "2"
    },
    "1192": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1193": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP3",
      "path": "2"
    },
    "1194": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1195": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1196": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1197": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1199": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MSTORE",
      "path": "2"
    },
    "1200": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1202": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "KECCAK256",
      "path": "2"
    },
    "1205": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP2",
      "path": "2"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SLOAD",
      "path": "2"
    },
    "1209": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP2",
      "path": "2"
    },
    "1210": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "MSTORE",
      "path": "2"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1215": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1218": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1219": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP1",
      "path": "2"
    },
    "1220": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP4",
      "path": "2"
    },
    "1221": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "GT",
      "path": "2"
    },
    "1222": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B6"
    },
    "1225": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPI",
      "path": "2"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP3",
      "path": "2"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SUB",
      "path": "2"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "AND",
      "path": "2"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "DUP3",
      "path": "2"
    },
    "1233": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "ADD",
      "path": "2"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP2",
      "path": "2"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1237": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "SWAP1",
      "path": "2"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [2549, 2561],
      "op": "POP",
      "path": "2"
    },
    "1243": {
      "fn": "ERC721.name",
      "offset": [2470, 2568],
      "op": "SWAP1",
      "path": "2"
    },
    "1244": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [2470, 2568],
      "op": "JUMP",
      "path": "2"
    },
    "1245": {
      "fn": "ERC721.getApproved",
      "offset": [3935, 4102],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "fn": "ERC721.getApproved",
      "offset": [4011, 4018],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC721.getApproved",
      "offset": [4030, 4053],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x4E8"
    },
    "1251": {
      "fn": "ERC721.getApproved",
      "offset": [4045, 4052],
      "op": "DUP3",
      "path": "2"
    },
    "1252": {
      "fn": "ERC721.getApproved",
      "offset": [4030, 4044],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB7"
    },
    "1255": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [4030, 4053],
      "op": "JUMP",
      "path": "2"
    },
    "1256": {
      "fn": "ERC721.getApproved",
      "offset": [4030, 4053],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1257": { "op": "POP" },
    "1258": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "1260": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "SWAP1",
      "path": "2"
    },
    "1261": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "DUP2",
      "path": "2"
    },
    "1262": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "MSTORE",
      "path": "2"
    },
    "1263": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4086],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1265": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1267": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "MSTORE",
      "path": "2"
    },
    "1268": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "SWAP1",
      "path": "2"
    },
    "1271": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "KECCAK256",
      "path": "2"
    },
    "1272": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "SLOAD",
      "path": "2"
    },
    "1273": { "op": "PUSH1", "value": "0x1" },
    "1275": { "op": "PUSH1", "value": "0x1" },
    "1277": { "op": "PUSH1", "value": "0xA0" },
    "1279": { "op": "SHL" },
    "1280": { "op": "SUB" },
    "1281": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "AND",
      "path": "2"
    },
    "1282": {
      "fn": "ERC721.getApproved",
      "offset": [4071, 4095],
      "op": "SWAP1",
      "path": "2"
    },
    "1283": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [3935, 4102],
      "op": "JUMP",
      "path": "2"
    },
    "1284": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1285": {
      "fn": "ERC721.approve",
      "offset": [3547, 3560],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1287": {
      "fn": "ERC721.approve",
      "offset": [3563, 3586],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50F"
    },
    "1290": {
      "fn": "ERC721.approve",
      "offset": [3578, 3585],
      "op": "DUP3",
      "path": "2"
    },
    "1291": {
      "fn": "ERC721.approve",
      "offset": [3563, 3577],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "1294": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [3563, 3586],
      "op": "JUMP",
      "path": "2"
    },
    "1295": {
      "fn": "ERC721.approve",
      "offset": [3563, 3586],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1296": {
      "fn": "ERC721.approve",
      "offset": [3547, 3586],
      "op": "SWAP1",
      "path": "2"
    },
    "1297": {
      "fn": "ERC721.approve",
      "offset": [3547, 3586],
      "op": "POP",
      "path": "2"
    },
    "1298": {
      "fn": "ERC721.approve",
      "offset": [3610, 3615],
      "op": "DUP1",
      "path": "2",
      "statement": 6
    },
    "1299": { "op": "PUSH1", "value": "0x1" },
    "1301": { "op": "PUSH1", "value": "0x1" },
    "1303": { "op": "PUSH1", "value": "0xA0" },
    "1305": { "op": "SHL" },
    "1306": { "op": "SUB" },
    "1307": {
      "fn": "ERC721.approve",
      "offset": [3604, 3615],
      "op": "AND",
      "path": "2"
    },
    "1308": {
      "fn": "ERC721.approve",
      "offset": [3604, 3606],
      "op": "DUP4",
      "path": "2"
    },
    "1309": { "op": "PUSH1", "value": "0x1" },
    "1311": { "op": "PUSH1", "value": "0x1" },
    "1313": { "op": "PUSH1", "value": "0xA0" },
    "1315": { "op": "SHL" },
    "1316": { "op": "SUB" },
    "1317": {
      "fn": "ERC721.approve",
      "offset": [3604, 3615],
      "op": "AND",
      "path": "2"
    },
    "1318": {
      "branch": 96,
      "fn": "ERC721.approve",
      "offset": [3604, 3615],
      "op": "SUB",
      "path": "2"
    },
    "1319": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "PUSH2",
      "path": "2",
      "value": "0x581"
    },
    "1322": {
      "branch": 96,
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "JUMPI",
      "path": "2"
    },
    "1323": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1325": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "MLOAD",
      "path": "2"
    },
    "1326": { "op": "PUSH3", "value": "0x461BCD" },
    "1330": { "op": "PUSH1", "value": "0xE5" },
    "1332": { "op": "SHL" },
    "1333": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "DUP2",
      "path": "2"
    },
    "1334": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "MSTORE",
      "path": "2"
    },
    "1335": { "op": "PUSH1", "value": "0x20" },
    "1337": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1339": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "DUP3",
      "path": "2"
    },
    "1340": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "ADD",
      "path": "2"
    },
    "1341": { "op": "MSTORE" },
    "1342": { "op": "PUSH1", "value": "0x21" },
    "1344": { "op": "PUSH1", "value": "0x24" },
    "1346": { "op": "DUP3" },
    "1347": { "op": "ADD" },
    "1348": { "op": "MSTORE" },
    "1349": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1382": { "op": "PUSH1", "value": "0x44" },
    "1384": { "op": "DUP3" },
    "1385": { "op": "ADD" },
    "1386": { "op": "MSTORE" },
    "1387": { "op": "PUSH1", "value": "0x39" },
    "1389": { "op": "PUSH1", "value": "0xF9" },
    "1391": { "op": "SHL" },
    "1392": { "op": "PUSH1", "value": "0x64" },
    "1394": { "op": "DUP3" },
    "1395": { "op": "ADD" },
    "1396": { "op": "MSTORE" },
    "1397": { "op": "PUSH1", "value": "0x84" },
    "1399": { "op": "ADD" },
    "1400": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1401": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1403": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "MLOAD",
      "path": "2"
    },
    "1404": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "DUP1",
      "path": "2"
    },
    "1405": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "SWAP2",
      "path": "2"
    },
    "1406": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "SUB",
      "path": "2"
    },
    "1407": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "SWAP1",
      "path": "2"
    },
    "1408": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1409": {
      "fn": "ERC721.approve",
      "offset": [3596, 3653],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1410": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7",
      "statement": 7
    },
    "1411": { "op": "PUSH1", "value": "0x1" },
    "1413": { "op": "PUSH1", "value": "0x1" },
    "1415": { "op": "PUSH1", "value": "0xA0" },
    "1417": { "op": "SHL" },
    "1418": { "op": "SUB" },
    "1419": {
      "fn": "ERC721.approve",
      "offset": [3685, 3706],
      "op": "DUP3",
      "path": "2",
      "statement": 8
    },
    "1420": {
      "fn": "ERC721.approve",
      "offset": [3685, 3706],
      "op": "AND",
      "path": "2"
    },
    "1421": {
      "fn": "ERC721.approve",
      "offset": [3685, 3706],
      "op": "EQ",
      "path": "2"
    },
    "1422": {
      "branch": 97,
      "fn": "ERC721.approve",
      "offset": [3685, 3706],
      "op": "DUP1",
      "path": "2"
    },
    "1423": {
      "fn": "ERC721.approve",
      "offset": [3685, 3747],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59D"
    },
    "1426": {
      "branch": 97,
      "fn": "ERC721.approve",
      "offset": [3685, 3747],
      "op": "JUMPI",
      "path": "2"
    },
    "1427": { "op": "POP" },
    "1428": {
      "fn": "ERC721.approve",
      "offset": [3710, 3747],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59D"
    },
    "1431": {
      "fn": "ERC721.approve",
      "offset": [3727, 3732],
      "op": "DUP2",
      "path": "2"
    },
    "1432": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4388, 4550],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C"
    },
    "1436": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [4388, 4550],
      "op": "JUMP",
      "path": "2"
    },
    "1437": {
      "branch": 98,
      "fn": "ERC721.approve",
      "offset": [3710, 3747],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1438": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "1441": {
      "branch": 98,
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "JUMPI",
      "path": "2"
    },
    "1442": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1444": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "MLOAD",
      "path": "2"
    },
    "1445": { "op": "PUSH3", "value": "0x461BCD" },
    "1449": { "op": "PUSH1", "value": "0xE5" },
    "1451": { "op": "SHL" },
    "1452": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "DUP2",
      "path": "2"
    },
    "1453": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "MSTORE",
      "path": "2"
    },
    "1454": { "op": "PUSH1", "value": "0x20" },
    "1456": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "DUP3",
      "path": "2"
    },
    "1459": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "ADD",
      "path": "2"
    },
    "1460": { "op": "MSTORE" },
    "1461": { "op": "PUSH1", "value": "0x3E" },
    "1463": { "op": "PUSH1", "value": "0x24" },
    "1465": { "op": "DUP3" },
    "1466": { "op": "ADD" },
    "1467": { "op": "MSTORE" },
    "1468": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1501": { "op": "PUSH1", "value": "0x44" },
    "1503": { "op": "DUP3" },
    "1504": { "op": "ADD" },
    "1505": { "op": "MSTORE" },
    "1506": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000"
    },
    "1539": { "op": "PUSH1", "value": "0x64" },
    "1541": { "op": "DUP3" },
    "1542": { "op": "ADD" },
    "1543": { "op": "MSTORE" },
    "1544": { "op": "PUSH1", "value": "0x84" },
    "1546": { "op": "ADD" },
    "1547": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "1550": { "op": "JUMP" },
    "1551": {
      "fn": "ERC721.approve",
      "offset": [3664, 3835],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1552": {
      "fn": "ERC721.approve",
      "offset": [3846, 3867],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x619"
    },
    "1555": {
      "fn": "ERC721.approve",
      "offset": [3855, 3857],
      "op": "DUP4",
      "path": "2"
    },
    "1556": {
      "fn": "ERC721.approve",
      "offset": [3859, 3866],
      "op": "DUP4",
      "path": "2"
    },
    "1557": {
      "fn": "ERC721.approve",
      "offset": [3846, 3854],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB19"
    },
    "1560": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [3846, 3867],
      "op": "JUMP",
      "path": "2"
    },
    "1561": {
      "fn": "ERC721.approve",
      "offset": [3846, 3867],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1562": {
      "fn": "ERC721.approve",
      "offset": [3537, 3874],
      "op": "POP",
      "path": "2"
    },
    "1563": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "POP",
      "path": "2"
    },
    "1564": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "POP",
      "path": "2"
    },
    "1565": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [3467, 3874],
      "op": "JUMP",
      "path": "2"
    },
    "1566": {
      "fn": "Diffemon.buyBooster",
      "offset": [2886, 3094],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1567": {
      "fn": "Diffemon.buyBooster",
      "offset": [2954, 2964],
      "op": "CALLER",
      "path": "12",
      "statement": 10
    },
    "1568": {
      "fn": "Diffemon.buyBooster",
      "offset": [2968, 2969],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1570": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "SWAP1",
      "path": "12"
    },
    "1571": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "DUP2",
      "path": "12"
    },
    "1572": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "MSTORE",
      "path": "12"
    },
    "1573": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2953],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1575": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1577": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "MSTORE",
      "path": "12"
    },
    "1578": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1580": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "SWAP1",
      "path": "12"
    },
    "1581": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "KECCAK256",
      "path": "12"
    },
    "1582": {
      "fn": "Diffemon.buyBooster",
      "offset": [2933, 2965],
      "op": "SLOAD",
      "path": "12"
    },
    "1583": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "PUSH2",
      "path": "12",
      "value": "0x685"
    },
    "1586": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "JUMPI",
      "path": "12"
    },
    "1587": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1589": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "MLOAD",
      "path": "12"
    },
    "1590": { "op": "PUSH3", "value": "0x461BCD" },
    "1594": { "op": "PUSH1", "value": "0xE5" },
    "1596": { "op": "SHL" },
    "1597": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "DUP2",
      "path": "12"
    },
    "1598": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "MSTORE",
      "path": "12"
    },
    "1599": { "op": "PUSH1", "value": "0x20" },
    "1601": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1603": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "DUP3",
      "path": "12"
    },
    "1604": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "ADD",
      "path": "12"
    },
    "1605": { "op": "MSTORE" },
    "1606": { "op": "PUSH1", "value": "0x22" },
    "1608": { "op": "PUSH1", "value": "0x24" },
    "1610": { "op": "DUP3" },
    "1611": { "op": "ADD" },
    "1612": { "op": "MSTORE" },
    "1613": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820626F6F737465727320616C6C6F77656420746F2062"
    },
    "1646": { "op": "PUSH1", "value": "0x44" },
    "1648": { "op": "DUP3" },
    "1649": { "op": "ADD" },
    "1650": { "op": "MSTORE" },
    "1651": { "op": "PUSH2", "value": "0x7579" },
    "1654": { "op": "PUSH1", "value": "0xF0" },
    "1656": { "op": "SHL" },
    "1657": { "op": "PUSH1", "value": "0x64" },
    "1659": { "op": "DUP3" },
    "1660": { "op": "ADD" },
    "1661": { "op": "MSTORE" },
    "1662": { "op": "PUSH1", "value": "0x84" },
    "1664": { "op": "ADD" },
    "1665": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "PUSH2",
      "path": "12",
      "value": "0x578"
    },
    "1668": { "op": "JUMP" },
    "1669": {
      "fn": "Diffemon.buyBooster",
      "offset": [2925, 3008],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1670": {
      "fn": "Diffemon.buyBooster",
      "offset": [3039, 3049],
      "op": "CALLER",
      "path": "12",
      "statement": 11
    },
    "1671": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1673": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "SWAP1",
      "path": "12"
    },
    "1674": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "DUP2",
      "path": "12"
    },
    "1675": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "MSTORE",
      "path": "12"
    },
    "1676": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3038],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1678": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1680": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "MSTORE",
      "path": "12"
    },
    "1681": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1683": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "DUP2",
      "path": "12"
    },
    "1684": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "KECCAK256",
      "path": "12"
    },
    "1685": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "DUP1",
      "path": "12"
    },
    "1686": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "SLOAD",
      "path": "12"
    },
    "1687": {
      "fn": "Diffemon.buyBooster",
      "offset": [3054, 3055],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1689": {
      "fn": "Diffemon.buyBooster",
      "offset": [3054, 3055],
      "op": "SWAP3",
      "path": "12"
    },
    "1690": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3050],
      "op": "SWAP1",
      "path": "12"
    },
    "1691": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6A5"
    },
    "1694": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "SWAP1",
      "path": "12"
    },
    "1695": {
      "fn": "Diffemon.buyBooster",
      "offset": [3054, 3055],
      "op": "DUP5",
      "path": "12"
    },
    "1696": {
      "fn": "Diffemon.buyBooster",
      "offset": [3054, 3055],
      "op": "SWAP1",
      "path": "12"
    },
    "1697": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7F"
    },
    "1700": {
      "fn": "Diffemon.buyBooster",
      "jump": "i",
      "offset": [3018, 3055],
      "op": "JUMP",
      "path": "12"
    },
    "1701": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1702": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "SWAP1",
      "path": "12"
    },
    "1703": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "SWAP2",
      "path": "12"
    },
    "1704": {
      "fn": "Diffemon.buyBooster",
      "offset": [3018, 3055],
      "op": "SSTORE",
      "path": "12"
    },
    "1705": { "op": "POP" },
    "1706": {
      "fn": "Diffemon.buyBooster",
      "offset": [3065, 3087],
      "op": "PUSH2",
      "path": "12",
      "statement": 12,
      "value": "0x6B4"
    },
    "1709": {
      "fn": "Diffemon.buyBooster",
      "offset": [3065, 3087],
      "op": "SWAP1",
      "path": "12"
    },
    "1710": { "op": "POP" },
    "1711": {
      "fn": "Diffemon.buyBooster",
      "offset": [3076, 3086],
      "op": "CALLER",
      "path": "12"
    },
    "1712": {
      "fn": "Diffemon.buyBooster",
      "offset": [3065, 3075],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB87"
    },
    "1715": {
      "fn": "Diffemon.buyBooster",
      "jump": "i",
      "offset": [3065, 3087],
      "op": "JUMP",
      "path": "12"
    },
    "1716": {
      "fn": "Diffemon.buyBooster",
      "offset": [3065, 3087],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1717": {
      "fn": "Diffemon.buyBooster",
      "jump": "o",
      "offset": [2886, 3094],
      "op": "JUMP",
      "path": "12"
    },
    "1718": {
      "fn": "ERC721.transferFrom",
      "offset": [4612, 4939],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1719": {
      "fn": "ERC721.transferFrom",
      "offset": [4801, 4842],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x6C0"
    },
    "1722": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1723": {
      "fn": "ERC721.transferFrom",
      "offset": [4834, 4841],
      "op": "DUP3",
      "path": "2"
    },
    "1724": {
      "fn": "ERC721.transferFrom",
      "offset": [4801, 4819],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC7"
    },
    "1727": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [4801, 4842],
      "op": "JUMP",
      "path": "2"
    },
    "1728": {
      "branch": 99,
      "fn": "ERC721.transferFrom",
      "offset": [4801, 4842],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1729": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DC"
    },
    "1732": {
      "branch": 99,
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "JUMPI",
      "path": "2"
    },
    "1733": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1735": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "MLOAD",
      "path": "2"
    },
    "1736": { "op": "PUSH3", "value": "0x461BCD" },
    "1740": { "op": "PUSH1", "value": "0xE5" },
    "1742": { "op": "SHL" },
    "1743": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "DUP2",
      "path": "2"
    },
    "1744": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "MSTORE",
      "path": "2"
    },
    "1745": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1747": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "ADD",
      "path": "2"
    },
    "1748": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "1751": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "SWAP1",
      "path": "2"
    },
    "1752": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A96"
    },
    "1755": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [4793, 4893],
      "op": "JUMP",
      "path": "2"
    },
    "1756": {
      "fn": "ERC721.transferFrom",
      "offset": [4793, 4893],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1757": {
      "fn": "ERC721.transferFrom",
      "offset": [4904, 4932],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x619"
    },
    "1760": {
      "fn": "ERC721.transferFrom",
      "offset": [4914, 4918],
      "op": "DUP4",
      "path": "2"
    },
    "1761": {
      "fn": "ERC721.transferFrom",
      "offset": [4920, 4922],
      "op": "DUP4",
      "path": "2"
    },
    "1762": {
      "fn": "ERC721.transferFrom",
      "offset": [4924, 4931],
      "op": "DUP4",
      "path": "2"
    },
    "1763": {
      "fn": "ERC721.transferFrom",
      "offset": [4904, 4913],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC46"
    },
    "1766": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [4904, 4932],
      "op": "JUMP",
      "path": "2"
    },
    "1767": {
      "fn": "AccessControl.grantRole",
      "offset": [4816, 4961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1768": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4465, 4472],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP3",
      "path": "0"
    },
    "1771": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "1772": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "1773": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1775": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "1776": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "1778": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1780": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "1781": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "KECCAK256",
      "path": "0"
    },
    "1782": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1784": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "ADD",
      "path": "0"
    },
    "1785": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "1786": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1789": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "1790": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "1793": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "1794": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "AccessControl.grantRole",
      "offset": [4929, 4954],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x619"
    },
    "1798": {
      "fn": "AccessControl.grantRole",
      "offset": [4940, 4944],
      "op": "DUP4",
      "path": "0"
    },
    "1799": {
      "fn": "AccessControl.grantRole",
      "offset": [4946, 4953],
      "op": "DUP4",
      "path": "0"
    },
    "1800": {
      "fn": "AccessControl.grantRole",
      "offset": [4929, 4939],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEC"
    },
    "1803": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [4929, 4954],
      "op": "JUMP",
      "path": "0"
    },
    "1804": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2716, 2876],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1805": {
      "offset": [2072, 2076],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1807": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "1808": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "1809": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "1810": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1812": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "1813": { "op": "PUSH1", "value": "0x0" },
    "1815": { "op": "DUP1" },
    "1816": { "op": "MLOAD" },
    "1817": { "op": "PUSH1", "value": "0x20" },
    "1819": { "op": "PUSH2", "value": "0x1DB6" },
    "1822": { "op": "DUP4" },
    "1823": { "op": "CODECOPY" },
    "1824": { "op": "DUP2" },
    "1825": { "op": "MLOAD" },
    "1826": { "op": "SWAP2" },
    "1827": { "op": "MSTORE" },
    "1828": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "1829": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72D"
    },
    "1832": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "1833": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "1836": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "1837": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1838": { "op": "PUSH1", "value": "0x1" },
    "1840": { "op": "PUSH1", "value": "0x1" },
    "1842": { "op": "PUSH1", "value": "0xA0" },
    "1844": { "op": "SHL" },
    "1845": { "op": "SUB" },
    "1846": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "DUP4",
      "path": "12",
      "statement": 16
    },
    "1847": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "AND",
      "path": "12"
    },
    "1848": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1850": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "SWAP1",
      "path": "12"
    },
    "1851": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "DUP2",
      "path": "12"
    },
    "1852": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "MSTORE",
      "path": "12"
    },
    "1853": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2851],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1855": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1857": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "MSTORE",
      "path": "12"
    },
    "1858": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1860": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "DUP2",
      "path": "12"
    },
    "1861": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "KECCAK256",
      "path": "12"
    },
    "1862": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "DUP1",
      "path": "12"
    },
    "1863": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "SLOAD",
      "path": "12"
    },
    "1864": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2859, 2869],
      "op": "DUP5",
      "path": "12"
    },
    "1865": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2859, 2869],
      "op": "SWAP3",
      "path": "12"
    },
    "1866": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2855],
      "op": "SWAP1",
      "path": "12"
    },
    "1867": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "PUSH2",
      "path": "12",
      "value": "0x755"
    },
    "1870": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "SWAP1",
      "path": "12"
    },
    "1871": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2859, 2869],
      "op": "DUP5",
      "path": "12"
    },
    "1872": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2859, 2869],
      "op": "SWAP1",
      "path": "12"
    },
    "1873": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AE4"
    },
    "1876": {
      "fn": "Diffemon.allotBoosters",
      "jump": "i",
      "offset": [2831, 2869],
      "op": "JUMP",
      "path": "12"
    },
    "1877": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1878": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "SWAP1",
      "path": "12"
    },
    "1879": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "SWAP2",
      "path": "12"
    },
    "1880": {
      "fn": "Diffemon.allotBoosters",
      "offset": [2831, 2869],
      "op": "SSTORE",
      "path": "12"
    },
    "1881": { "op": "POP" },
    "1882": { "op": "POP" },
    "1883": { "op": "POP" },
    "1884": { "op": "POP" },
    "1885": { "op": "POP" },
    "1886": {
      "fn": "Diffemon.allotBoosters",
      "jump": "o",
      "offset": [2716, 2876],
      "op": "JUMP",
      "path": "12"
    },
    "1887": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1888": { "op": "PUSH1", "value": "0x1" },
    "1890": { "op": "PUSH1", "value": "0x1" },
    "1892": { "op": "PUSH1", "value": "0xA0" },
    "1894": { "op": "SHL" },
    "1895": { "op": "SUB" },
    "1896": {
      "fn": "AccessControl.renounceRole",
      "offset": [6020, 6043],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "1897": {
      "fn": "AccessControl.renounceRole",
      "offset": [6020, 6043],
      "op": "AND",
      "path": "0"
    },
    "1898": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "1899": {
      "branch": 92,
      "fn": "AccessControl.renounceRole",
      "offset": [6020, 6043],
      "op": "EQ",
      "path": "0"
    },
    "1900": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CF"
    },
    "1903": {
      "branch": 92,
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "JUMPI",
      "path": "0"
    },
    "1904": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1906": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "MLOAD",
      "path": "0"
    },
    "1907": { "op": "PUSH3", "value": "0x461BCD" },
    "1911": { "op": "PUSH1", "value": "0xE5" },
    "1913": { "op": "SHL" },
    "1914": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "DUP2",
      "path": "0"
    },
    "1915": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "MSTORE",
      "path": "0"
    },
    "1916": { "op": "PUSH1", "value": "0x20" },
    "1918": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1920": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "DUP3",
      "path": "0"
    },
    "1921": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "ADD",
      "path": "0"
    },
    "1922": { "op": "MSTORE" },
    "1923": { "op": "PUSH1", "value": "0x2F" },
    "1925": { "op": "PUSH1", "value": "0x24" },
    "1927": { "op": "DUP3" },
    "1928": { "op": "ADD" },
    "1929": { "op": "MSTORE" },
    "1930": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "1963": { "op": "PUSH1", "value": "0x44" },
    "1965": { "op": "DUP3" },
    "1966": { "op": "ADD" },
    "1967": { "op": "MSTORE" },
    "1968": { "op": "PUSH15", "value": "0x103937B632B9903337B91039B2B633" },
    "1984": { "op": "PUSH1", "value": "0x89" },
    "1986": { "op": "SHL" },
    "1987": { "op": "PUSH1", "value": "0x64" },
    "1989": { "op": "DUP3" },
    "1990": { "op": "ADD" },
    "1991": { "op": "MSTORE" },
    "1992": { "op": "PUSH1", "value": "0x84" },
    "1994": { "op": "ADD" },
    "1995": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1998": { "op": "JUMP" },
    "1999": {
      "fn": "AccessControl.renounceRole",
      "offset": [6012, 6095],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2000": {
      "fn": "AccessControl.renounceRole",
      "offset": [6106, 6132],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x7D9"
    },
    "2003": {
      "fn": "AccessControl.renounceRole",
      "offset": [6118, 6122],
      "op": "DUP3",
      "path": "0"
    },
    "2004": {
      "fn": "AccessControl.renounceRole",
      "offset": [6124, 6131],
      "op": "DUP3",
      "path": "0"
    },
    "2005": {
      "fn": "AccessControl.renounceRole",
      "offset": [6106, 6117],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE70"
    },
    "2008": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [6106, 6132],
      "op": "JUMP",
      "path": "0"
    },
    "2009": {
      "fn": "AccessControl.renounceRole",
      "offset": [6106, 6132],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2010": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "POP",
      "path": "0"
    },
    "2011": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "POP",
      "path": "0"
    },
    "2012": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [5925, 6139],
      "op": "JUMP",
      "path": "0"
    },
    "2013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5005, 5184],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2014": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0x619"
    },
    "2017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5155, 5159],
      "op": "DUP4",
      "path": "2"
    },
    "2018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5161, 5163],
      "op": "DUP4",
      "path": "2"
    },
    "2019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5165, 5172],
      "op": "DUP4",
      "path": "2"
    },
    "2020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "MLOAD",
      "path": "2"
    },
    "2023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "DUP1",
      "path": "2"
    },
    "2024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "ADD",
      "path": "2"
    },
    "2027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "MSTORE",
      "path": "2"
    },
    "2030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "DUP1",
      "path": "2"
    },
    "2031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "DUP2",
      "path": "2"
    },
    "2034": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "MSTORE",
      "path": "2"
    },
    "2035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5177],
      "op": "POP",
      "path": "2"
    },
    "2036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5138, 5154],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A3"
    },
    "2039": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5138, 5177],
      "op": "JUMP",
      "path": "2"
    },
    "2040": {
      "fn": "Diffemon.setBaseURI",
      "offset": [1902, 2021],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2041": {
      "offset": [2072, 2076],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2043": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2044": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2045": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2046": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2048": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": { "op": "PUSH1", "value": "0x0" },
    "2051": { "op": "DUP1" },
    "2052": { "op": "MLOAD" },
    "2053": { "op": "PUSH1", "value": "0x20" },
    "2055": { "op": "PUSH2", "value": "0x1DB6" },
    "2058": { "op": "DUP4" },
    "2059": { "op": "CODECOPY" },
    "2060": { "op": "DUP2" },
    "2061": { "op": "MLOAD" },
    "2062": { "op": "SWAP2" },
    "2063": { "op": "MSTORE" },
    "2064": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "2065": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x819"
    },
    "2068": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "2069": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "2072": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "2073": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2074": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "DUP2",
      "path": "12",
      "statement": 20
    },
    "2075": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "MLOAD",
      "path": "12"
    },
    "2076": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "PUSH2",
      "path": "12",
      "value": "0x619"
    },
    "2079": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "SWAP1",
      "path": "12"
    },
    "2080": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2008],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "2082": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2008],
      "op": "SWAP1",
      "path": "12"
    },
    "2083": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2085": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "DUP6",
      "path": "12"
    },
    "2086": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "ADD",
      "path": "12"
    },
    "2087": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "SWAP1",
      "path": "12"
    },
    "2088": {
      "fn": "Diffemon.setBaseURI",
      "offset": [2001, 2014],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165F"
    },
    "2091": {
      "fn": "Diffemon.setBaseURI",
      "jump": "i",
      "offset": [2001, 2014],
      "op": "JUMP",
      "path": "12"
    },
    "2092": {
      "fn": "Diffemon.setNumCards",
      "offset": [2302, 2429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2093": {
      "offset": [2072, 2076],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2095": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2096": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2097": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2098": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2100": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2101": { "op": "PUSH1", "value": "0x0" },
    "2103": { "op": "DUP1" },
    "2104": { "op": "MLOAD" },
    "2105": { "op": "PUSH1", "value": "0x20" },
    "2107": { "op": "PUSH2", "value": "0x1DB6" },
    "2110": { "op": "DUP4" },
    "2111": { "op": "CODECOPY" },
    "2112": { "op": "DUP2" },
    "2113": { "op": "MLOAD" },
    "2114": { "op": "SWAP2" },
    "2115": { "op": "MSTORE" },
    "2116": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "2117": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84D"
    },
    "2120": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "2121": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "2124": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "2125": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2126": { "op": "POP" },
    "2127": {
      "fn": "Diffemon.setNumCards",
      "offset": [2402, 2410],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0x9"
    },
    "2129": {
      "fn": "Diffemon.setNumCards",
      "offset": [2402, 2422],
      "op": "SSTORE",
      "path": "12"
    },
    "2130": {
      "fn": "Diffemon.setNumCards",
      "jump": "o",
      "offset": [2302, 2429],
      "op": "JUMP",
      "path": "12"
    },
    "2131": {
      "fn": "ERC721.ownerOf",
      "offset": [2190, 2408],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2132": {
      "fn": "ERC721.ownerOf",
      "offset": [2262, 2269],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2134": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "DUP2",
      "path": "2"
    },
    "2135": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "DUP2",
      "path": "2"
    },
    "2136": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "MSTORE",
      "path": "2"
    },
    "2137": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2304],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2139": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2141": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "MSTORE",
      "path": "2"
    },
    "2142": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2144": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "DUP2",
      "path": "2"
    },
    "2145": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "KECCAK256",
      "path": "2"
    },
    "2146": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "SLOAD",
      "path": "2"
    },
    "2147": { "op": "PUSH1", "value": "0x1" },
    "2149": { "op": "PUSH1", "value": "0x1" },
    "2151": { "op": "PUSH1", "value": "0xA0" },
    "2153": { "op": "SHL" },
    "2154": { "op": "SUB" },
    "2155": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "AND",
      "path": "2"
    },
    "2156": {
      "fn": "ERC721.ownerOf",
      "offset": [2297, 2313],
      "op": "DUP1",
      "path": "2"
    },
    "2157": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0x445"
    },
    "2160": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "JUMPI",
      "path": "2"
    },
    "2161": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2163": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "MLOAD",
      "path": "2"
    },
    "2164": { "op": "PUSH3", "value": "0x461BCD" },
    "2168": { "op": "PUSH1", "value": "0xE5" },
    "2170": { "op": "SHL" },
    "2171": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "DUP2",
      "path": "2"
    },
    "2172": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "MSTORE",
      "path": "2"
    },
    "2173": { "op": "PUSH1", "value": "0x20" },
    "2175": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2177": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "DUP3",
      "path": "2"
    },
    "2178": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "ADD",
      "path": "2"
    },
    "2179": { "op": "MSTORE" },
    "2180": { "op": "PUSH1", "value": "0x18" },
    "2182": { "op": "PUSH1", "value": "0x24" },
    "2184": { "op": "DUP3" },
    "2185": { "op": "ADD" },
    "2186": { "op": "MSTORE" },
    "2187": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "2212": { "op": "PUSH1", "value": "0x42" },
    "2214": { "op": "SHL" },
    "2215": { "op": "PUSH1", "value": "0x44" },
    "2217": { "op": "DUP3" },
    "2218": { "op": "ADD" },
    "2219": { "op": "MSTORE" },
    "2220": { "op": "PUSH1", "value": "0x64" },
    "2222": { "op": "ADD" },
    "2223": {
      "fn": "ERC721.ownerOf",
      "offset": [2323, 2379],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "2226": { "op": "JUMP" },
    "2227": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2143, 2292],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2228": {
      "offset": [2072, 2076],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2230": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2231": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP1",
      "path": "0"
    },
    "2232": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2233": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2235": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2236": { "op": "PUSH1", "value": "0x0" },
    "2238": { "op": "DUP1" },
    "2239": { "op": "MLOAD" },
    "2240": { "op": "PUSH1", "value": "0x20" },
    "2242": { "op": "PUSH2", "value": "0x1DB6" },
    "2245": { "op": "DUP4" },
    "2246": { "op": "CODECOPY" },
    "2247": { "op": "DUP2" },
    "2248": { "op": "MLOAD" },
    "2249": { "op": "SWAP2" },
    "2250": { "op": "MSTORE" },
    "2251": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "2252": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "2255": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "2256": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "2259": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "2260": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2261": { "op": "POP" },
    "2262": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2251, 2268],
      "op": "PUSH1",
      "path": "12",
      "statement": 23,
      "value": "0x8"
    },
    "2264": {
      "fn": "Diffemon.setBoosterSize",
      "offset": [2251, 2285],
      "op": "SSTORE",
      "path": "12"
    },
    "2265": {
      "fn": "Diffemon.setBoosterSize",
      "jump": "o",
      "offset": [2143, 2292],
      "op": "JUMP",
      "path": "12"
    },
    "2266": {
      "fn": "ERC721.balanceOf",
      "offset": [1929, 2133],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2267": {
      "fn": "ERC721.balanceOf",
      "offset": [2001, 2008],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2269": { "op": "PUSH1", "value": "0x1" },
    "2271": { "op": "PUSH1", "value": "0x1" },
    "2273": { "op": "PUSH1", "value": "0xA0" },
    "2275": { "op": "SHL" },
    "2276": { "op": "SUB" },
    "2277": {
      "fn": "ERC721.balanceOf",
      "offset": [2028, 2047],
      "op": "DUP3",
      "path": "2",
      "statement": 24
    },
    "2278": {
      "branch": 100,
      "fn": "ERC721.balanceOf",
      "offset": [2028, 2047],
      "op": "AND",
      "path": "2"
    },
    "2279": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "PUSH2",
      "path": "2",
      "value": "0x944"
    },
    "2282": {
      "branch": 100,
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "JUMPI",
      "path": "2"
    },
    "2283": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2285": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "MLOAD",
      "path": "2"
    },
    "2286": { "op": "PUSH3", "value": "0x461BCD" },
    "2290": { "op": "PUSH1", "value": "0xE5" },
    "2292": { "op": "SHL" },
    "2293": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "DUP2",
      "path": "2"
    },
    "2294": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "MSTORE",
      "path": "2"
    },
    "2295": { "op": "PUSH1", "value": "0x20" },
    "2297": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2299": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "DUP3",
      "path": "2"
    },
    "2300": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "ADD",
      "path": "2"
    },
    "2301": { "op": "MSTORE" },
    "2302": { "op": "PUSH1", "value": "0x29" },
    "2304": { "op": "PUSH1", "value": "0x24" },
    "2306": { "op": "DUP3" },
    "2307": { "op": "ADD" },
    "2308": { "op": "MSTORE" },
    "2309": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "2342": { "op": "PUSH1", "value": "0x44" },
    "2344": { "op": "DUP3" },
    "2345": { "op": "ADD" },
    "2346": { "op": "MSTORE" },
    "2347": { "op": "PUSH9", "value": "0x3634B21037BBB732B9" },
    "2357": { "op": "PUSH1", "value": "0xB9" },
    "2359": { "op": "SHL" },
    "2360": { "op": "PUSH1", "value": "0x64" },
    "2362": { "op": "DUP3" },
    "2363": { "op": "ADD" },
    "2364": { "op": "MSTORE" },
    "2365": { "op": "PUSH1", "value": "0x84" },
    "2367": { "op": "ADD" },
    "2368": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "2371": { "op": "JUMP" },
    "2372": {
      "fn": "ERC721.balanceOf",
      "offset": [2020, 2093],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2373": { "op": "POP" },
    "2374": { "op": "PUSH1", "value": "0x1" },
    "2376": { "op": "PUSH1", "value": "0x1" },
    "2378": { "op": "PUSH1", "value": "0xA0" },
    "2380": { "op": "SHL" },
    "2381": { "op": "SUB" },
    "2382": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "AND",
      "path": "2",
      "statement": 25
    },
    "2383": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2385": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "SWAP1",
      "path": "2"
    },
    "2386": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "DUP2",
      "path": "2"
    },
    "2387": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "MSTORE",
      "path": "2"
    },
    "2388": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2119],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2390": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2392": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "MSTORE",
      "path": "2"
    },
    "2393": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2395": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "SWAP1",
      "path": "2"
    },
    "2396": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "KECCAK256",
      "path": "2"
    },
    "2397": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "SLOAD",
      "path": "2"
    },
    "2398": {
      "fn": "ERC721.balanceOf",
      "offset": [2110, 2126],
      "op": "SWAP1",
      "path": "2"
    },
    "2399": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [1929, 2133],
      "op": "JUMP",
      "path": "2"
    },
    "2400": {
      "fn": "AccessControl.hasRole",
      "offset": [2895, 3040],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2401": {
      "fn": "AccessControl.hasRole",
      "offset": [2981, 2985],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2403": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "SWAP2",
      "path": "0",
      "statement": 26
    },
    "2404": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "DUP3",
      "path": "0"
    },
    "2405": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "MSTORE",
      "path": "0"
    },
    "2406": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2408": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "DUP3",
      "path": "0"
    },
    "2409": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "DUP2",
      "path": "0"
    },
    "2410": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "MSTORE",
      "path": "0"
    },
    "2411": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2413": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "DUP1",
      "path": "0"
    },
    "2414": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "DUP5",
      "path": "0"
    },
    "2415": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3016],
      "op": "KECCAK256",
      "path": "0"
    },
    "2416": { "op": "PUSH1", "value": "0x1" },
    "2418": { "op": "PUSH1", "value": "0x1" },
    "2420": { "op": "PUSH1", "value": "0xA0" },
    "2422": { "op": "SHL" },
    "2423": { "op": "SUB" },
    "2424": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP4",
      "path": "0"
    },
    "2425": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP1",
      "path": "0"
    },
    "2426": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP4",
      "path": "0"
    },
    "2427": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "AND",
      "path": "0"
    },
    "2428": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "DUP5",
      "path": "0"
    },
    "2429": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "MSTORE",
      "path": "0"
    },
    "2430": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP2",
      "path": "0"
    },
    "2431": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP1",
      "path": "0"
    },
    "2432": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "MSTORE",
      "path": "0"
    },
    "2433": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP1",
      "path": "0"
    },
    "2434": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "KECCAK256",
      "path": "0"
    },
    "2435": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SLOAD",
      "path": "0"
    },
    "2436": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2438": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "AND",
      "path": "0"
    },
    "2439": {
      "fn": "AccessControl.hasRole",
      "offset": [3004, 3033],
      "op": "SWAP1",
      "path": "0"
    },
    "2440": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [2895, 3040],
      "op": "JUMP",
      "path": "0"
    },
    "2441": {
      "fn": "ERC721.symbol",
      "offset": [2632, 2734],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2442": {
      "fn": "ERC721.symbol",
      "offset": [2688, 2701],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2444": {
      "fn": "ERC721.symbol",
      "offset": [2720, 2727],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x2"
    },
    "2446": {
      "fn": "ERC721.symbol",
      "offset": [2713, 2727],
      "op": "DUP1",
      "path": "2"
    },
    "2447": {
      "fn": "ERC721.symbol",
      "offset": [2713, 2727],
      "op": "SLOAD",
      "path": "2"
    },
    "2448": {
      "fn": "ERC721.symbol",
      "offset": [2713, 2727],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45A"
    },
    "2451": {
      "fn": "ERC721.symbol",
      "offset": [2713, 2727],
      "op": "SWAP1",
      "path": "2"
    },
    "2452": {
      "fn": "ERC721.symbol",
      "offset": [2713, 2727],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2F"
    },
    "2455": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [2713, 2727],
      "op": "JUMP",
      "path": "2"
    },
    "2456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4169, 4322],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4263, 4315],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x7D9"
    },
    "2460": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4296, 4304],
      "op": "DUP4",
      "path": "2"
    },
    "2462": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4306, 4314],
      "op": "DUP4",
      "path": "2"
    },
    "2463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [4263, 4281],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED5"
    },
    "2466": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [4263, 4315],
      "op": "JUMP",
      "path": "2"
    },
    "2467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5418, 5459],
      "op": "PUSH2",
      "path": "2",
      "statement": 29,
      "value": "0x9AD"
    },
    "2471": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "2472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5451, 5458],
      "op": "DUP4",
      "path": "2"
    },
    "2473": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5418, 5436],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC7"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5418, 5459],
      "op": "JUMP",
      "path": "2"
    },
    "2477": {
      "branch": 101,
      "fn": "ERC721.safeTransferFrom",
      "offset": [5418, 5459],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C9"
    },
    "2481": {
      "branch": 101,
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "JUMPI",
      "path": "2"
    },
    "2482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2484": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "MLOAD",
      "path": "2"
    },
    "2485": { "op": "PUSH3", "value": "0x461BCD" },
    "2489": { "op": "PUSH1", "value": "0xE5" },
    "2491": { "op": "SHL" },
    "2492": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "DUP2",
      "path": "2"
    },
    "2493": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "MSTORE",
      "path": "2"
    },
    "2494": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2496": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "ADD",
      "path": "2"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "2500": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "SWAP1",
      "path": "2"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A96"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5410, 5510],
      "op": "JUMP",
      "path": "2"
    },
    "2505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5410, 5510],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5520, 5558],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0x9D5"
    },
    "2509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5534, 5538],
      "op": "DUP5",
      "path": "2"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5540, 5542],
      "op": "DUP5",
      "path": "2"
    },
    "2511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5544, 5551],
      "op": "DUP5",
      "path": "2"
    },
    "2512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5553, 5557],
      "op": "DUP5",
      "path": "2"
    },
    "2513": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5520, 5533],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA3"
    },
    "2516": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [5520, 5558],
      "op": "JUMP",
      "path": "2"
    },
    "2517": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5520, 5558],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "POP",
      "path": "2"
    },
    "2519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "POP",
      "path": "2"
    },
    "2520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "POP",
      "path": "2"
    },
    "2521": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [5250, 5565],
      "op": "POP",
      "path": "2"
    },
    "2522": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [5250, 5565],
      "op": "JUMP",
      "path": "2"
    },
    "2523": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2524": {
      "fn": "Diffemon.tokenURI",
      "offset": [1286, 1299],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2526": {
      "fn": "Diffemon.tokenURI",
      "offset": [1315, 1338],
      "op": "PUSH2",
      "path": "12",
      "statement": 31,
      "value": "0x9E6"
    },
    "2529": {
      "fn": "Diffemon.tokenURI",
      "offset": [1330, 1337],
      "op": "DUP3",
      "path": "12"
    },
    "2530": {
      "fn": "Diffemon.tokenURI",
      "offset": [1315, 1329],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB7"
    },
    "2533": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1315, 1338],
      "op": "JUMP",
      "path": "12"
    },
    "2534": {
      "fn": "Diffemon.tokenURI",
      "offset": [1315, 1338],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2535": {
      "fn": "Diffemon.tokenURI",
      "offset": [1380, 1381],
      "op": "PUSH1",
      "path": "12",
      "statement": 32,
      "value": "0x0"
    },
    "2537": {
      "fn": "Diffemon.tokenURI",
      "offset": [1362, 1369],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "2539": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "DUP1",
      "path": "12"
    },
    "2540": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "SLOAD",
      "path": "12"
    },
    "2541": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F5"
    },
    "2544": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "SWAP1",
      "path": "12"
    },
    "2545": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A2F"
    },
    "2548": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1356, 1377],
      "op": "JUMP",
      "path": "12"
    },
    "2549": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2550": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "SWAP1",
      "path": "12"
    },
    "2551": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1377],
      "op": "POP",
      "path": "12"
    },
    "2552": {
      "branch": 91,
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1381],
      "op": "GT",
      "path": "12"
    },
    "2553": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA11"
    },
    "2556": {
      "branch": 91,
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "JUMPI",
      "path": "12"
    },
    "2557": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2559": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "MLOAD",
      "path": "12"
    },
    "2560": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "DUP1",
      "path": "12"
    },
    "2561": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2563": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "ADD",
      "path": "12"
    },
    "2564": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2566": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "MSTORE",
      "path": "12"
    },
    "2567": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "DUP1",
      "path": "12"
    },
    "2568": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2570": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "DUP2",
      "path": "12"
    },
    "2571": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "MSTORE",
      "path": "12"
    },
    "2572": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "POP",
      "path": "12"
    },
    "2573": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "PUSH2",
      "path": "12",
      "value": "0x445"
    },
    "2576": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "JUMP",
      "path": "12"
    },
    "2577": {
      "fn": "Diffemon.tokenURI",
      "offset": [1356, 1465],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2578": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2580": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "DUP3",
      "path": "12"
    },
    "2581": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "DUP2",
      "path": "12"
    },
    "2582": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "MSTORE",
      "path": "12"
    },
    "2583": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1439],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "2585": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2587": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "MSTORE",
      "path": "12"
    },
    "2588": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2590": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "SWAP1",
      "path": "12"
    },
    "2591": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "KECCAK256",
      "path": "12"
    },
    "2592": {
      "fn": "Diffemon.tokenURI",
      "offset": [1434, 1448],
      "op": "SLOAD",
      "path": "12"
    },
    "2593": {
      "fn": "Diffemon.tokenURI",
      "offset": [1408, 1415],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "2595": {
      "fn": "Diffemon.tokenURI",
      "offset": [1408, 1415],
      "op": "SWAP1",
      "path": "12"
    },
    "2596": {
      "fn": "Diffemon.tokenURI",
      "offset": [1417, 1449],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA2C"
    },
    "2599": {
      "fn": "Diffemon.tokenURI",
      "offset": [1417, 1449],
      "op": "SWAP1",
      "path": "12"
    },
    "2600": {
      "fn": "Diffemon.tokenURI",
      "offset": [1417, 1433],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFD6"
    },
    "2603": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1417, 1449],
      "op": "JUMP",
      "path": "12"
    },
    "2604": {
      "fn": "Diffemon.tokenURI",
      "offset": [1417, 1449],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2605": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2607": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "MLOAD",
      "path": "12"
    },
    "2608": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2610": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "ADD",
      "path": "12"
    },
    "2611": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3D"
    },
    "2614": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SWAP3",
      "path": "12"
    },
    "2615": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SWAP2",
      "path": "12"
    },
    "2616": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SWAP1",
      "path": "12"
    },
    "2617": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B18"
    },
    "2620": {
      "fn": "Diffemon.tokenURI",
      "jump": "i",
      "offset": [1391, 1459],
      "op": "JUMP",
      "path": "12"
    },
    "2621": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2622": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2624": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "MLOAD",
      "path": "12"
    },
    "2625": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2627": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "DUP2",
      "path": "12"
    },
    "2628": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "DUP4",
      "path": "12"
    },
    "2629": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SUB",
      "path": "12"
    },
    "2630": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SUB",
      "path": "12"
    },
    "2631": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "DUP2",
      "path": "12"
    },
    "2632": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "MSTORE",
      "path": "12"
    },
    "2633": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "SWAP1",
      "path": "12"
    },
    "2634": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2636": {
      "fn": "Diffemon.tokenURI",
      "offset": [1391, 1459],
      "op": "MSTORE",
      "path": "12"
    },
    "2637": {
      "fn": "Diffemon.tokenURI",
      "offset": [1349, 1465],
      "op": "SWAP3",
      "path": "12"
    },
    "2638": {
      "fn": "Diffemon.tokenURI",
      "offset": [1181, 1472],
      "op": "SWAP2",
      "path": "12"
    },
    "2639": { "op": "POP" },
    "2640": { "op": "POP" },
    "2641": {
      "fn": "Diffemon.tokenURI",
      "jump": "o",
      "offset": [1181, 1472],
      "op": "JUMP",
      "path": "12"
    },
    "2642": {
      "fn": "AccessControl.revokeRole",
      "offset": [5241, 5388],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2643": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4465, 4472],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2645": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP3",
      "path": "0"
    },
    "2646": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "2647": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2648": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2650": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "DUP2",
      "path": "0"
    },
    "2651": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "MSTORE",
      "path": "0"
    },
    "2653": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2655": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "SWAP1",
      "path": "0"
    },
    "2656": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4503],
      "op": "KECCAK256",
      "path": "0"
    },
    "2657": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2659": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "ADD",
      "path": "0"
    },
    "2660": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [4491, 4513],
      "op": "SLOAD",
      "path": "0"
    },
    "2661": {
      "offset": [2505, 2521],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6D"
    },
    "2664": { "offset": [2516, 2520], "op": "DUP2", "path": "0" },
    "2665": {
      "offset": [2505, 2515],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE2"
    },
    "2668": { "jump": "i", "offset": [2505, 2521], "op": "JUMP", "path": "0" },
    "2669": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [2505, 2521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2670": {
      "fn": "AccessControl.revokeRole",
      "offset": [5355, 5381],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x619"
    },
    "2673": {
      "fn": "AccessControl.revokeRole",
      "offset": [5367, 5371],
      "op": "DUP4",
      "path": "0"
    },
    "2674": {
      "fn": "AccessControl.revokeRole",
      "offset": [5373, 5380],
      "op": "DUP4",
      "path": "0"
    },
    "2675": {
      "fn": "AccessControl.revokeRole",
      "offset": [5355, 5366],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE70"
    },
    "2678": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [5355, 5381],
      "op": "JUMP",
      "path": "0"
    },
    "2679": {
      "fn": "ERC721.supportsInterface",
      "offset": [1570, 1870],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2680": {
      "fn": "ERC721.supportsInterface",
      "offset": [1672, 1676],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2682": { "op": "PUSH1", "value": "0x1" },
    "2684": { "op": "PUSH1", "value": "0x1" },
    "2686": { "op": "PUSH1", "value": "0xE0" },
    "2688": { "op": "SHL" },
    "2689": { "op": "SUB" },
    "2690": { "op": "NOT" },
    "2691": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1747],
      "op": "DUP3",
      "path": "2",
      "statement": 34
    },
    "2692": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1747],
      "op": "AND",
      "path": "2"
    },
    "2693": { "op": "PUSH4", "value": "0x80AC58CD" },
    "2698": { "op": "PUSH1", "value": "0xE0" },
    "2700": { "op": "SHL" },
    "2701": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1747],
      "op": "EQ",
      "path": "2"
    },
    "2702": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1747],
      "op": "DUP1",
      "path": "2"
    },
    "2703": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1811],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA8"
    },
    "2706": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1811],
      "op": "JUMPI",
      "path": "2"
    },
    "2707": { "op": "POP" },
    "2708": { "op": "PUSH1", "value": "0x1" },
    "2710": { "op": "PUSH1", "value": "0x1" },
    "2712": { "op": "PUSH1", "value": "0xE0" },
    "2714": { "op": "SHL" },
    "2715": { "op": "SUB" },
    "2716": { "op": "NOT" },
    "2717": {
      "fn": "ERC721.supportsInterface",
      "offset": [1763, 1811],
      "op": "DUP3",
      "path": "2"
    },
    "2718": {
      "fn": "ERC721.supportsInterface",
      "offset": [1763, 1811],
      "op": "AND",
      "path": "2"
    },
    "2719": { "op": "PUSH4", "value": "0x5B5E139F" },
    "2724": { "op": "PUSH1", "value": "0xE0" },
    "2726": { "op": "SHL" },
    "2727": {
      "fn": "ERC721.supportsInterface",
      "offset": [1763, 1811],
      "op": "EQ",
      "path": "2"
    },
    "2728": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1811],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2729": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1863],
      "op": "DUP1",
      "path": "2"
    },
    "2730": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1863],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "2733": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1863],
      "op": "JUMPI",
      "path": "2"
    },
    "2734": {
      "fn": "ERC721.supportsInterface",
      "offset": [1707, 1863],
      "op": "POP",
      "path": "2"
    },
    "2735": {
      "fn": "ERC721.supportsInterface",
      "offset": [1827, 1863],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "2738": {
      "fn": "ERC721.supportsInterface",
      "offset": [1851, 1862],
      "op": "DUP3",
      "path": "2"
    },
    "2739": {
      "fn": "ERC721.supportsInterface",
      "offset": [1827, 1850],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D7"
    },
    "2742": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [1827, 1863],
      "op": "JUMP",
      "path": "2"
    },
    "2743": {
      "fn": "ERC721._requireMinted",
      "offset": [11657, 11790],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2744": {
      "fn": "ERC721._exists",
      "offset": [7099, 7103],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2746": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "DUP2",
      "path": "2",
      "statement": 35
    },
    "2747": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "DUP2",
      "path": "2"
    },
    "2748": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "MSTORE",
      "path": "2"
    },
    "2749": {
      "fn": "ERC721._exists",
      "offset": [7122, 7129],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2751": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2753": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "MSTORE",
      "path": "2"
    },
    "2754": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2756": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "SWAP1",
      "path": "2"
    },
    "2757": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "KECCAK256",
      "path": "2"
    },
    "2758": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "SLOAD",
      "path": "2"
    },
    "2759": { "op": "PUSH1", "value": "0x1" },
    "2761": { "op": "PUSH1", "value": "0x1" },
    "2763": { "op": "PUSH1", "value": "0xA0" },
    "2765": { "op": "SHL" },
    "2766": { "op": "SUB" },
    "2767": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "AND",
      "path": "2"
    },
    "2768": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "PUSH2",
      "path": "2",
      "statement": 36,
      "value": "0xB16"
    },
    "2771": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "JUMPI",
      "path": "2"
    },
    "2772": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2774": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "MLOAD",
      "path": "2"
    },
    "2775": { "op": "PUSH3", "value": "0x461BCD" },
    "2779": { "op": "PUSH1", "value": "0xE5" },
    "2781": { "op": "SHL" },
    "2782": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "DUP2",
      "path": "2"
    },
    "2783": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "MSTORE",
      "path": "2"
    },
    "2784": { "op": "PUSH1", "value": "0x20" },
    "2786": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2788": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "DUP3",
      "path": "2"
    },
    "2789": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "ADD",
      "path": "2"
    },
    "2790": { "op": "MSTORE" },
    "2791": { "op": "PUSH1", "value": "0x18" },
    "2793": { "op": "PUSH1", "value": "0x24" },
    "2795": { "op": "DUP3" },
    "2796": { "op": "ADD" },
    "2797": { "op": "MSTORE" },
    "2798": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "2823": { "op": "PUSH1", "value": "0x42" },
    "2825": { "op": "SHL" },
    "2826": { "op": "PUSH1", "value": "0x44" },
    "2828": { "op": "DUP3" },
    "2829": { "op": "ADD" },
    "2830": { "op": "MSTORE" },
    "2831": { "op": "PUSH1", "value": "0x64" },
    "2833": { "op": "ADD" },
    "2834": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "2837": { "op": "JUMP" },
    "2838": {
      "fn": "ERC721._requireMinted",
      "offset": [11730, 11783],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2839": {
      "fn": "ERC721._requireMinted",
      "offset": [11657, 11790],
      "op": "POP",
      "path": "2"
    },
    "2840": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [11657, 11790],
      "op": "JUMP",
      "path": "2"
    },
    "2841": {
      "fn": "ERC721._approve",
      "offset": [10959, 11130],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2842": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "2844": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "DUP2",
      "path": "2"
    },
    "2845": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "DUP2",
      "path": "2"
    },
    "2846": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "MSTORE",
      "path": "2"
    },
    "2847": {
      "fn": "ERC721._approve",
      "offset": [11033, 11048],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2849": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2851": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "MSTORE",
      "path": "2"
    },
    "2852": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2854": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "SWAP1",
      "path": "2"
    },
    "2855": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "KECCAK256",
      "path": "2"
    },
    "2856": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "DUP1",
      "path": "2"
    },
    "2857": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "SLOAD",
      "path": "2"
    },
    "2858": { "op": "PUSH1", "value": "0x1" },
    "2860": { "op": "PUSH1", "value": "0x1" },
    "2862": { "op": "PUSH1", "value": "0xA0" },
    "2864": { "op": "SHL" },
    "2865": { "op": "SUB" },
    "2866": { "op": "NOT" },
    "2867": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "AND",
      "path": "2"
    },
    "2868": { "op": "PUSH1", "value": "0x1" },
    "2870": { "op": "PUSH1", "value": "0x1" },
    "2872": { "op": "PUSH1", "value": "0xA0" },
    "2874": { "op": "SHL" },
    "2875": { "op": "SUB" },
    "2876": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "DUP5",
      "path": "2"
    },
    "2877": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "AND",
      "path": "2"
    },
    "2878": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "SWAP1",
      "path": "2"
    },
    "2879": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "DUP2",
      "path": "2"
    },
    "2880": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "OR",
      "path": "2"
    },
    "2881": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "SWAP1",
      "path": "2"
    },
    "2882": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "SWAP2",
      "path": "2"
    },
    "2883": {
      "fn": "ERC721._approve",
      "offset": [11033, 11062],
      "op": "SSTORE",
      "path": "2"
    },
    "2884": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "DUP2",
      "path": "2"
    },
    "2885": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "SWAP1",
      "path": "2"
    },
    "2886": {
      "fn": "ERC721._approve",
      "offset": [11086, 11109],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0xB4E"
    },
    "2889": {
      "fn": "ERC721._approve",
      "offset": [11033, 11057],
      "op": "DUP3",
      "path": "2"
    },
    "2890": {
      "fn": "ERC721._approve",
      "offset": [11086, 11100],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "2893": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [11086, 11109],
      "op": "JUMP",
      "path": "2"
    },
    "2894": {
      "fn": "ERC721._approve",
      "offset": [11086, 11109],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2895": { "op": "PUSH1", "value": "0x1" },
    "2897": { "op": "PUSH1", "value": "0x1" },
    "2899": { "op": "PUSH1", "value": "0xA0" },
    "2901": { "op": "SHL" },
    "2902": { "op": "SUB" },
    "2903": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "AND",
      "path": "2"
    },
    "2904": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2937": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2939": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "MLOAD",
      "path": "2"
    },
    "2940": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2942": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "MLOAD",
      "path": "2"
    },
    "2943": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "DUP1",
      "path": "2"
    },
    "2944": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "SWAP2",
      "path": "2"
    },
    "2945": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "SUB",
      "path": "2"
    },
    "2946": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "SWAP1",
      "path": "2"
    },
    "2947": {
      "fn": "ERC721._approve",
      "offset": [11077, 11123],
      "op": "LOG4",
      "path": "2"
    },
    "2948": {
      "fn": "ERC721._approve",
      "offset": [10959, 11130],
      "op": "POP",
      "path": "2"
    },
    "2949": {
      "fn": "ERC721._approve",
      "offset": [10959, 11130],
      "op": "POP",
      "path": "2"
    },
    "2950": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [10959, 11130],
      "op": "JUMP",
      "path": "2"
    },
    "2951": {
      "fn": "Diffemon.mintTokens",
      "offset": [3248, 3446],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2952": {
      "fn": "Diffemon.mintTokens",
      "offset": [3303, 3310],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2954": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2955": {
      "fn": "Diffemon.mintTokens",
      "offset": [3320, 3337],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "2957": {
      "fn": "Diffemon.mintTokens",
      "offset": [3320, 3337],
      "op": "SLOAD",
      "path": "12"
    },
    "2958": {
      "fn": "Diffemon.mintTokens",
      "offset": [3316, 3317],
      "op": "DUP2",
      "path": "12"
    },
    "2959": {
      "fn": "Diffemon.mintTokens",
      "offset": [3316, 3337],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2961": {
      "fn": "Diffemon.mintTokens",
      "offset": [3316, 3337],
      "op": "AND",
      "path": "12"
    },
    "2962": {
      "fn": "Diffemon.mintTokens",
      "offset": [3316, 3337],
      "op": "LT",
      "path": "12"
    },
    "2963": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "ISZERO",
      "path": "12"
    },
    "2964": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D9"
    },
    "2967": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "JUMPI",
      "path": "12"
    },
    "2968": {
      "fn": "Diffemon.mintTokens",
      "offset": [3358, 3372],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2970": {
      "fn": "Diffemon.mintTokens",
      "offset": [3375, 3394],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBA8"
    },
    "2973": {
      "fn": "Diffemon.mintTokens",
      "offset": [3382, 3390],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "2975": {
      "fn": "Diffemon.mintTokens",
      "offset": [3382, 3390],
      "op": "SLOAD",
      "path": "12"
    },
    "2976": {
      "fn": "Diffemon.mintTokens",
      "offset": [3392, 3393],
      "op": "DUP4",
      "path": "12"
    },
    "2977": {
      "fn": "Diffemon.mintTokens",
      "offset": [3375, 3394],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2979": {
      "fn": "Diffemon.mintTokens",
      "offset": [3375, 3394],
      "op": "AND",
      "path": "12"
    },
    "2980": {
      "fn": "Diffemon.mintTokens",
      "offset": [3375, 3381],
      "op": "PUSH2",
      "path": "12",
      "value": "0x110C"
    },
    "2983": {
      "fn": "Diffemon.mintTokens",
      "jump": "i",
      "offset": [3375, 3394],
      "op": "JUMP",
      "path": "12"
    },
    "2984": {
      "fn": "Diffemon.mintTokens",
      "offset": [3375, 3394],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2985": {
      "fn": "Diffemon.mintTokens",
      "offset": [3358, 3394],
      "op": "SWAP1",
      "path": "12"
    },
    "2986": {
      "fn": "Diffemon.mintTokens",
      "offset": [3358, 3394],
      "op": "POP",
      "path": "12"
    },
    "2987": {
      "fn": "Diffemon.mintTokens",
      "offset": [3413, 3429],
      "op": "PUSH2",
      "path": "12",
      "statement": 39,
      "value": "0xBB4"
    },
    "2990": {
      "fn": "Diffemon.mintTokens",
      "offset": [3418, 3424],
      "op": "DUP2",
      "path": "12"
    },
    "2991": {
      "fn": "Diffemon.mintTokens",
      "offset": [3426, 3428],
      "op": "DUP5",
      "path": "12"
    },
    "2992": {
      "fn": "Diffemon.mintTokens",
      "offset": [3413, 3417],
      "op": "PUSH2",
      "path": "12",
      "value": "0x118D"
    },
    "2995": {
      "fn": "Diffemon.mintTokens",
      "jump": "i",
      "offset": [3413, 3429],
      "op": "JUMP",
      "path": "12"
    },
    "2996": {
      "fn": "Diffemon.mintTokens",
      "offset": [3413, 3429],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2997": { "op": "POP" },
    "2998": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "DUP1",
      "path": "12",
      "statement": 40
    },
    "2999": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBBF"
    },
    "3002": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "DUP2",
      "path": "12"
    },
    "3003": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BD2"
    },
    "3006": {
      "fn": "Diffemon.mintTokens",
      "jump": "i",
      "offset": [3339, 3342],
      "op": "JUMP",
      "path": "12"
    },
    "3007": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3008": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "SWAP2",
      "path": "12"
    },
    "3009": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "POP",
      "path": "12"
    },
    "3010": {
      "fn": "Diffemon.mintTokens",
      "offset": [3339, 3342],
      "op": "POP",
      "path": "12"
    },
    "3011": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB8A"
    },
    "3014": {
      "fn": "Diffemon.mintTokens",
      "offset": [3299, 3440],
      "op": "JUMP",
      "path": "12"
    },
    "3015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7317, 7578],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7410, 7414],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3018": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7426, 7439],
      "op": "DUP1",
      "path": "2"
    },
    "3019": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7442, 7465],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD3"
    },
    "3022": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7457, 7464],
      "op": "DUP4",
      "path": "2"
    },
    "3023": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7442, 7456],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "3026": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [7442, 7465],
      "op": "JUMP",
      "path": "2"
    },
    "3027": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7442, 7465],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3028": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7426, 7465],
      "op": "SWAP1",
      "path": "2"
    },
    "3029": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7426, 7465],
      "op": "POP",
      "path": "2"
    },
    "3030": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7494, 7499],
      "op": "DUP1",
      "path": "2",
      "statement": 41
    },
    "3031": { "op": "PUSH1", "value": "0x1" },
    "3033": { "op": "PUSH1", "value": "0x1" },
    "3035": { "op": "PUSH1", "value": "0xA0" },
    "3037": { "op": "SHL" },
    "3038": { "op": "SUB" },
    "3039": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7499],
      "op": "AND",
      "path": "2"
    },
    "3040": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7490],
      "op": "DUP5",
      "path": "2"
    },
    "3041": { "op": "PUSH1", "value": "0x1" },
    "3043": { "op": "PUSH1", "value": "0x1" },
    "3045": { "op": "PUSH1", "value": "0xA0" },
    "3047": { "op": "SHL" },
    "3048": { "op": "SUB" },
    "3049": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7499],
      "op": "AND",
      "path": "2"
    },
    "3050": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7499],
      "op": "EQ",
      "path": "2"
    },
    "3051": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7535],
      "op": "DUP1",
      "path": "2"
    },
    "3052": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7535],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3055": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7535],
      "op": "JUMPI",
      "path": "2"
    },
    "3056": { "op": "POP" },
    "3057": { "op": "PUSH1", "value": "0x1" },
    "3059": { "op": "PUSH1", "value": "0x1" },
    "3061": { "op": "PUSH1", "value": "0xA0" },
    "3063": { "op": "SHL" },
    "3064": { "op": "SUB" },
    "3065": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP1",
      "path": "2"
    },
    "3066": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP3",
      "path": "2"
    },
    "3067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "AND",
      "path": "2"
    },
    "3068": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4485, 4489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3070": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "SWAP1",
      "path": "2"
    },
    "3071": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP2",
      "path": "2"
    },
    "3072": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "MSTORE",
      "path": "2"
    },
    "3073": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4526],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3075": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3077": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "SWAP1",
      "path": "2"
    },
    "3078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP2",
      "path": "2"
    },
    "3079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "MSTORE",
      "path": "2"
    },
    "3080": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3082": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP1",
      "path": "2"
    },
    "3083": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "DUP4",
      "path": "2"
    },
    "3084": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4533],
      "op": "KECCAK256",
      "path": "2"
    },
    "3085": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP4",
      "path": "2"
    },
    "3086": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "DUP9",
      "path": "2"
    },
    "3087": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "AND",
      "path": "2"
    },
    "3088": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "DUP4",
      "path": "2"
    },
    "3089": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "MSTORE",
      "path": "2"
    },
    "3090": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP3",
      "path": "2"
    },
    "3091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SWAP1",
      "path": "2"
    },
    "3092": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "MSTORE",
      "path": "2"
    },
    "3093": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "KECCAK256",
      "path": "2"
    },
    "3094": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "SLOAD",
      "path": "2"
    },
    "3095": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3097": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [4508, 4543],
      "op": "AND",
      "path": "2"
    },
    "3098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7503, 7535],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3099": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7570],
      "op": "DUP1",
      "path": "2"
    },
    "3100": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7570],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3E"
    },
    "3103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7570],
      "op": "JUMPI",
      "path": "2"
    },
    "3104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7570],
      "op": "POP",
      "path": "2"
    },
    "3105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7563, 7570],
      "op": "DUP4",
      "path": "2"
    },
    "3106": { "op": "PUSH1", "value": "0x1" },
    "3108": { "op": "PUSH1", "value": "0x1" },
    "3110": { "op": "PUSH1", "value": "0xA0" },
    "3112": { "op": "SHL" },
    "3113": { "op": "SUB" },
    "3114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7570],
      "op": "AND",
      "path": "2"
    },
    "3115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7559],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC33"
    },
    "3118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7551, 7558],
      "op": "DUP5",
      "path": "2"
    },
    "3119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7550],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "3122": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [7539, 7559],
      "op": "JUMP",
      "path": "2"
    },
    "3123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7559],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3124": { "op": "PUSH1", "value": "0x1" },
    "3126": { "op": "PUSH1", "value": "0x1" },
    "3128": { "op": "PUSH1", "value": "0xA0" },
    "3130": { "op": "SHL" },
    "3131": { "op": "SUB" },
    "3132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7570],
      "op": "AND",
      "path": "2"
    },
    "3133": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7539, 7570],
      "op": "EQ",
      "path": "2"
    },
    "3134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7483, 7570],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3135": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7475, 7571],
      "op": "SWAP5",
      "path": "2"
    },
    "3136": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [7317, 7578],
      "op": "SWAP4",
      "path": "2"
    },
    "3137": { "op": "POP" },
    "3138": { "op": "POP" },
    "3139": { "op": "POP" },
    "3140": { "op": "POP" },
    "3141": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [7317, 7578],
      "op": "JUMP",
      "path": "2"
    },
    "3142": {
      "fn": "ERC721._transfer",
      "offset": [10242, 10847],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3143": {
      "fn": "ERC721._transfer",
      "offset": [10396, 10400],
      "op": "DUP3",
      "path": "2",
      "statement": 42
    },
    "3144": { "op": "PUSH1", "value": "0x1" },
    "3146": { "op": "PUSH1", "value": "0x1" },
    "3148": { "op": "PUSH1", "value": "0xA0" },
    "3150": { "op": "SHL" },
    "3151": { "op": "SUB" },
    "3152": {
      "fn": "ERC721._transfer",
      "offset": [10369, 10400],
      "op": "AND",
      "path": "2"
    },
    "3153": {
      "fn": "ERC721._transfer",
      "offset": [10369, 10392],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC59"
    },
    "3156": {
      "fn": "ERC721._transfer",
      "offset": [10384, 10391],
      "op": "DUP3",
      "path": "2"
    },
    "3157": {
      "fn": "ERC721._transfer",
      "offset": [10369, 10383],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "3160": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [10369, 10392],
      "op": "JUMP",
      "path": "2"
    },
    "3161": {
      "fn": "ERC721._transfer",
      "offset": [10369, 10392],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3162": { "op": "PUSH1", "value": "0x1" },
    "3164": { "op": "PUSH1", "value": "0x1" },
    "3166": { "op": "PUSH1", "value": "0xA0" },
    "3168": { "op": "SHL" },
    "3169": { "op": "SUB" },
    "3170": {
      "fn": "ERC721._transfer",
      "offset": [10369, 10400],
      "op": "AND",
      "path": "2"
    },
    "3171": {
      "branch": 102,
      "fn": "ERC721._transfer",
      "offset": [10369, 10400],
      "op": "EQ",
      "path": "2"
    },
    "3172": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBD"
    },
    "3175": {
      "branch": 102,
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "JUMPI",
      "path": "2"
    },
    "3176": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3178": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "MLOAD",
      "path": "2"
    },
    "3179": { "op": "PUSH3", "value": "0x461BCD" },
    "3183": { "op": "PUSH1", "value": "0xE5" },
    "3185": { "op": "SHL" },
    "3186": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "DUP2",
      "path": "2"
    },
    "3187": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "MSTORE",
      "path": "2"
    },
    "3188": { "op": "PUSH1", "value": "0x20" },
    "3190": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3192": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "DUP3",
      "path": "2"
    },
    "3193": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "ADD",
      "path": "2"
    },
    "3194": { "op": "MSTORE" },
    "3195": { "op": "PUSH1", "value": "0x25" },
    "3197": { "op": "PUSH1", "value": "0x24" },
    "3199": { "op": "DUP3" },
    "3200": { "op": "ADD" },
    "3201": { "op": "MSTORE" },
    "3202": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "3235": { "op": "PUSH1", "value": "0x44" },
    "3237": { "op": "DUP3" },
    "3238": { "op": "ADD" },
    "3239": { "op": "MSTORE" },
    "3240": { "op": "PUSH5", "value": "0x37BBB732B9" },
    "3246": { "op": "PUSH1", "value": "0xD9" },
    "3248": { "op": "SHL" },
    "3249": { "op": "PUSH1", "value": "0x64" },
    "3251": { "op": "DUP3" },
    "3252": { "op": "ADD" },
    "3253": { "op": "MSTORE" },
    "3254": { "op": "PUSH1", "value": "0x84" },
    "3256": { "op": "ADD" },
    "3257": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "3260": { "op": "JUMP" },
    "3261": {
      "fn": "ERC721._transfer",
      "offset": [10361, 10442],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3262": { "op": "PUSH1", "value": "0x1" },
    "3264": { "op": "PUSH1", "value": "0x1" },
    "3266": { "op": "PUSH1", "value": "0xA0" },
    "3268": { "op": "SHL" },
    "3269": { "op": "SUB" },
    "3270": {
      "fn": "ERC721._transfer",
      "offset": [10460, 10476],
      "op": "DUP3",
      "path": "2",
      "statement": 43
    },
    "3271": {
      "branch": 103,
      "fn": "ERC721._transfer",
      "offset": [10460, 10476],
      "op": "AND",
      "path": "2"
    },
    "3272": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1F"
    },
    "3275": {
      "branch": 103,
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "JUMPI",
      "path": "2"
    },
    "3276": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3278": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "MLOAD",
      "path": "2"
    },
    "3279": { "op": "PUSH3", "value": "0x461BCD" },
    "3283": { "op": "PUSH1", "value": "0xE5" },
    "3285": { "op": "SHL" },
    "3286": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "DUP2",
      "path": "2"
    },
    "3287": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "MSTORE",
      "path": "2"
    },
    "3288": { "op": "PUSH1", "value": "0x20" },
    "3290": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3292": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "DUP3",
      "path": "2"
    },
    "3293": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "ADD",
      "path": "2"
    },
    "3294": { "op": "MSTORE" },
    "3295": { "op": "PUSH1", "value": "0x24" },
    "3297": { "op": "DUP1" },
    "3298": { "op": "DUP3" },
    "3299": { "op": "ADD" },
    "3300": { "op": "MSTORE" },
    "3301": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "3334": { "op": "PUSH1", "value": "0x44" },
    "3336": { "op": "DUP3" },
    "3337": { "op": "ADD" },
    "3338": { "op": "MSTORE" },
    "3339": { "op": "PUSH4", "value": "0x72657373" },
    "3344": { "op": "PUSH1", "value": "0xE0" },
    "3346": { "op": "SHL" },
    "3347": { "op": "PUSH1", "value": "0x64" },
    "3349": { "op": "DUP3" },
    "3350": { "op": "ADD" },
    "3351": { "op": "MSTORE" },
    "3352": { "op": "PUSH1", "value": "0x84" },
    "3354": { "op": "ADD" },
    "3355": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "3358": { "op": "JUMP" },
    "3359": {
      "fn": "ERC721._transfer",
      "offset": [10452, 10517],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3360": {
      "fn": "ERC721._transfer",
      "offset": [10629, 10658],
      "op": "PUSH2",
      "path": "2",
      "statement": 44,
      "value": "0xD2A"
    },
    "3363": {
      "fn": "ERC721._transfer",
      "offset": [10646, 10647],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3365": {
      "fn": "ERC721._transfer",
      "offset": [10650, 10657],
      "op": "DUP3",
      "path": "2"
    },
    "3366": {
      "fn": "ERC721._transfer",
      "offset": [10629, 10637],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB19"
    },
    "3369": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [10629, 10658],
      "op": "JUMP",
      "path": "2"
    },
    "3370": {
      "fn": "ERC721._transfer",
      "offset": [10629, 10658],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3371": { "op": "PUSH1", "value": "0x1" },
    "3373": { "op": "PUSH1", "value": "0x1" },
    "3375": { "op": "PUSH1", "value": "0xA0" },
    "3377": { "op": "SHL" },
    "3378": { "op": "SUB" },
    "3379": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "DUP4",
      "path": "2",
      "statement": 45
    },
    "3380": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "AND",
      "path": "2"
    },
    "3381": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3383": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "SWAP1",
      "path": "2"
    },
    "3384": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "DUP2",
      "path": "2"
    },
    "3385": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "MSTORE",
      "path": "2"
    },
    "3386": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10678],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3388": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3390": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "MSTORE",
      "path": "2"
    },
    "3391": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3393": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "DUP2",
      "path": "2"
    },
    "3394": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "KECCAK256",
      "path": "2"
    },
    "3395": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "DUP1",
      "path": "2"
    },
    "3396": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "SLOAD",
      "path": "2"
    },
    "3397": {
      "fn": "ERC721._transfer",
      "offset": [10688, 10689],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3399": {
      "fn": "ERC721._transfer",
      "offset": [10688, 10689],
      "op": "SWAP3",
      "path": "2"
    },
    "3400": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10684],
      "op": "SWAP1",
      "path": "2"
    },
    "3401": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD53"
    },
    "3404": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "SWAP1",
      "path": "2"
    },
    "3405": {
      "fn": "ERC721._transfer",
      "offset": [10688, 10689],
      "op": "DUP5",
      "path": "2"
    },
    "3406": {
      "fn": "ERC721._transfer",
      "offset": [10688, 10689],
      "op": "SWAP1",
      "path": "2"
    },
    "3407": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7F"
    },
    "3410": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [10669, 10689],
      "op": "JUMP",
      "path": "2"
    },
    "3411": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3412": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "SWAP1",
      "path": "2"
    },
    "3413": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "SWAP2",
      "path": "2"
    },
    "3414": {
      "fn": "ERC721._transfer",
      "offset": [10669, 10689],
      "op": "SSTORE",
      "path": "2"
    },
    "3415": { "op": "POP" },
    "3416": { "op": "POP" },
    "3417": { "op": "PUSH1", "value": "0x1" },
    "3419": { "op": "PUSH1", "value": "0x1" },
    "3421": { "op": "PUSH1", "value": "0xA0" },
    "3423": { "op": "SHL" },
    "3424": { "op": "SUB" },
    "3425": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "DUP3",
      "path": "2",
      "statement": 46
    },
    "3426": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "AND",
      "path": "2"
    },
    "3427": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3429": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "SWAP1",
      "path": "2"
    },
    "3430": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "DUP2",
      "path": "2"
    },
    "3431": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "MSTORE",
      "path": "2"
    },
    "3432": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10708],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3434": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3436": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "MSTORE",
      "path": "2"
    },
    "3437": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3439": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "DUP2",
      "path": "2"
    },
    "3440": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "KECCAK256",
      "path": "2"
    },
    "3441": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "DUP1",
      "path": "2"
    },
    "3442": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "SLOAD",
      "path": "2"
    },
    "3443": {
      "fn": "ERC721._transfer",
      "offset": [10716, 10717],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3445": {
      "fn": "ERC721._transfer",
      "offset": [10716, 10717],
      "op": "SWAP3",
      "path": "2"
    },
    "3446": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10712],
      "op": "SWAP1",
      "path": "2"
    },
    "3447": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD81"
    },
    "3450": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "SWAP1",
      "path": "2"
    },
    "3451": {
      "fn": "ERC721._transfer",
      "offset": [10716, 10717],
      "op": "DUP5",
      "path": "2"
    },
    "3452": {
      "fn": "ERC721._transfer",
      "offset": [10716, 10717],
      "op": "SWAP1",
      "path": "2"
    },
    "3453": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE4"
    },
    "3456": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [10699, 10717],
      "op": "JUMP",
      "path": "2"
    },
    "3457": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3458": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "SWAP1",
      "path": "2"
    },
    "3459": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "SWAP2",
      "path": "2"
    },
    "3460": {
      "fn": "ERC721._transfer",
      "offset": [10699, 10717],
      "op": "SSTORE",
      "path": "2"
    },
    "3461": { "op": "POP" },
    "3462": { "op": "POP" },
    "3463": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x0"
    },
    "3465": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "DUP2",
      "path": "2"
    },
    "3466": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "DUP2",
      "path": "2"
    },
    "3467": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "MSTORE",
      "path": "2"
    },
    "3468": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10734],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3470": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3472": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "MSTORE",
      "path": "2"
    },
    "3473": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3475": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "DUP1",
      "path": "2"
    },
    "3476": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "DUP3",
      "path": "2"
    },
    "3477": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "KECCAK256",
      "path": "2"
    },
    "3478": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "DUP1",
      "path": "2"
    },
    "3479": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "SLOAD",
      "path": "2"
    },
    "3480": { "op": "PUSH1", "value": "0x1" },
    "3482": { "op": "PUSH1", "value": "0x1" },
    "3484": { "op": "PUSH1", "value": "0xA0" },
    "3486": { "op": "SHL" },
    "3487": { "op": "SUB" },
    "3488": { "op": "NOT" },
    "3489": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "AND",
      "path": "2"
    },
    "3490": { "op": "PUSH1", "value": "0x1" },
    "3492": { "op": "PUSH1", "value": "0x1" },
    "3494": { "op": "PUSH1", "value": "0xA0" },
    "3496": { "op": "SHL" },
    "3497": { "op": "SUB" },
    "3498": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "DUP7",
      "path": "2"
    },
    "3499": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "DUP2",
      "path": "2"
    },
    "3500": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "AND",
      "path": "2"
    },
    "3501": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "SWAP2",
      "path": "2"
    },
    "3502": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "DUP3",
      "path": "2"
    },
    "3503": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "OR",
      "path": "2"
    },
    "3504": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "SWAP1",
      "path": "2"
    },
    "3505": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "SWAP3",
      "path": "2"
    },
    "3506": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10748],
      "op": "SSTORE",
      "path": "2"
    },
    "3507": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "SWAP2",
      "path": "2",
      "statement": 48
    },
    "3508": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "MLOAD",
      "path": "2"
    },
    "3509": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "DUP5",
      "path": "2"
    },
    "3510": {
      "fn": "ERC721._transfer",
      "offset": [10727, 10743],
      "op": "SWAP4",
      "path": "2"
    },
    "3511": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "SWAP2",
      "path": "2"
    },
    "3512": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "DUP8",
      "path": "2"
    },
    "3513": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "AND",
      "path": "2"
    },
    "3514": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "SWAP2",
      "path": "2"
    },
    "3515": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3548": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "SWAP2",
      "path": "2"
    },
    "3549": {
      "fn": "ERC721._transfer",
      "offset": [10764, 10791],
      "op": "LOG4",
      "path": "2"
    },
    "3550": {
      "fn": "ERC721.approve",
      "offset": [3537, 3874],
      "op": "POP",
      "path": "2"
    },
    "3551": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "POP",
      "path": "2"
    },
    "3552": {
      "fn": "ERC721.approve",
      "offset": [3467, 3874],
      "op": "POP",
      "path": "2"
    },
    "3553": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [3467, 3874],
      "op": "JUMP",
      "path": "2"
    },
    "3554": {
      "fn": "AccessControl._checkRole",
      "offset": [3334, 3437],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3555": {
      "fn": "AccessControl._checkRole",
      "offset": [3400, 3430],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0xB16"
    },
    "3558": {
      "fn": "AccessControl._checkRole",
      "offset": [3411, 3415],
      "op": "DUP2",
      "path": "0"
    },
    "3559": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "3560": {
      "fn": "AccessControl._checkRole",
      "offset": [3400, 3410],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AE"
    },
    "3563": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [3400, 3430],
      "op": "JUMP",
      "path": "0"
    },
    "3564": {
      "fn": "AccessControl._grantRole",
      "offset": [7474, 7707],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3565": {
      "fn": "AccessControl._grantRole",
      "offset": [7557, 7579],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF6"
    },
    "3568": {
      "fn": "AccessControl._grantRole",
      "offset": [7565, 7569],
      "op": "DUP3",
      "path": "0"
    },
    "3569": {
      "fn": "AccessControl._grantRole",
      "offset": [7571, 7578],
      "op": "DUP3",
      "path": "0"
    },
    "3570": {
      "fn": "AccessControl._grantRole",
      "offset": [7557, 7564],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "3573": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [7557, 7579],
      "op": "JUMP",
      "path": "0"
    },
    "3574": {
      "branch": 93,
      "fn": "AccessControl._grantRole",
      "offset": [7557, 7579],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3575": {
      "fn": "AccessControl._grantRole",
      "offset": [7552, 7701],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "3578": {
      "branch": 93,
      "fn": "AccessControl._grantRole",
      "offset": [7552, 7701],
      "op": "JUMPI",
      "path": "0"
    },
    "3579": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7601],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x0"
    },
    "3581": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP3",
      "path": "0"
    },
    "3582": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP2",
      "path": "0"
    },
    "3583": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "MSTORE",
      "path": "0"
    },
    "3584": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3586": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP2",
      "path": "0"
    },
    "3587": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP2",
      "path": "0"
    },
    "3588": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "MSTORE",
      "path": "0"
    },
    "3589": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3591": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP1",
      "path": "0"
    },
    "3592": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "DUP4",
      "path": "0"
    },
    "3593": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7607],
      "op": "KECCAK256",
      "path": "0"
    },
    "3594": { "op": "PUSH1", "value": "0x1" },
    "3596": { "op": "PUSH1", "value": "0x1" },
    "3598": { "op": "PUSH1", "value": "0xA0" },
    "3600": { "op": "SHL" },
    "3601": { "op": "SUB" },
    "3602": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "DUP6",
      "path": "0"
    },
    "3603": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "AND",
      "path": "0"
    },
    "3604": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "DUP5",
      "path": "0"
    },
    "3605": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "MSTORE",
      "path": "0"
    },
    "3606": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "SWAP1",
      "path": "0"
    },
    "3607": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "SWAP2",
      "path": "0"
    },
    "3608": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "MSTORE",
      "path": "0"
    },
    "3609": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "SWAP1",
      "path": "0"
    },
    "3610": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7624],
      "op": "KECCAK256",
      "path": "0"
    },
    "3611": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "DUP1",
      "path": "0"
    },
    "3612": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "SLOAD",
      "path": "0"
    },
    "3613": { "op": "PUSH1", "value": "0xFF" },
    "3615": { "op": "NOT" },
    "3616": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "AND",
      "path": "0"
    },
    "3617": {
      "fn": "AccessControl._grantRole",
      "offset": [7627, 7631],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3619": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "OR",
      "path": "0"
    },
    "3620": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "SWAP1",
      "path": "0"
    },
    "3621": {
      "fn": "AccessControl._grantRole",
      "offset": [7595, 7631],
      "op": "SSTORE",
      "path": "0"
    },
    "3622": {
      "fn": "AccessControl._grantRole",
      "offset": [7677, 7689],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0xE2C"
    },
    "3625": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "3626": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP1",
      "path": "7"
    },
    "3627": {
      "fn": "Context._msgSender",
      "offset": [640, 736],
      "op": "JUMP",
      "path": "7"
    },
    "3628": {
      "fn": "AccessControl._grantRole",
      "offset": [7677, 7689],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3629": { "op": "PUSH1", "value": "0x1" },
    "3631": { "op": "PUSH1", "value": "0x1" },
    "3633": { "op": "PUSH1", "value": "0xA0" },
    "3635": { "op": "SHL" },
    "3636": { "op": "SUB" },
    "3637": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "AND",
      "path": "0"
    },
    "3638": {
      "fn": "AccessControl._grantRole",
      "offset": [7668, 7675],
      "op": "DUP2",
      "path": "0"
    },
    "3639": { "op": "PUSH1", "value": "0x1" },
    "3641": { "op": "PUSH1", "value": "0x1" },
    "3643": { "op": "PUSH1", "value": "0xA0" },
    "3645": { "op": "SHL" },
    "3646": { "op": "SUB" },
    "3647": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "AND",
      "path": "0"
    },
    "3648": {
      "fn": "AccessControl._grantRole",
      "offset": [7662, 7666],
      "op": "DUP4",
      "path": "0"
    },
    "3649": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "3682": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3684": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "MLOAD",
      "path": "0"
    },
    "3685": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3687": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "MLOAD",
      "path": "0"
    },
    "3688": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "DUP1",
      "path": "0"
    },
    "3689": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "SWAP2",
      "path": "0"
    },
    "3690": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "SUB",
      "path": "0"
    },
    "3691": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "SWAP1",
      "path": "0"
    },
    "3692": {
      "fn": "AccessControl._grantRole",
      "offset": [7650, 7690],
      "op": "LOG4",
      "path": "0"
    },
    "3693": {
      "fn": "AccessControl._grantRole",
      "offset": [7474, 7707],
      "op": "POP",
      "path": "0"
    },
    "3694": {
      "fn": "AccessControl._grantRole",
      "offset": [7474, 7707],
      "op": "POP",
      "path": "0"
    },
    "3695": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [7474, 7707],
      "op": "JUMP",
      "path": "0"
    },
    "3696": {
      "fn": "AccessControl._revokeRole",
      "offset": [7878, 8112],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3697": {
      "fn": "AccessControl._revokeRole",
      "offset": [7961, 7983],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7A"
    },
    "3700": {
      "fn": "AccessControl._revokeRole",
      "offset": [7969, 7973],
      "op": "DUP3",
      "path": "0"
    },
    "3701": {
      "fn": "AccessControl._revokeRole",
      "offset": [7975, 7982],
      "op": "DUP3",
      "path": "0"
    },
    "3702": {
      "fn": "AccessControl._revokeRole",
      "offset": [7961, 7968],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "3705": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [7961, 7983],
      "op": "JUMP",
      "path": "0"
    },
    "3706": {
      "branch": 94,
      "fn": "AccessControl._revokeRole",
      "offset": [7961, 7983],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3707": {
      "fn": "AccessControl._revokeRole",
      "offset": [7957, 8106],
      "op": "ISZERO",
      "path": "0"
    },
    "3708": {
      "fn": "AccessControl._revokeRole",
      "offset": [7957, 8106],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "3711": {
      "branch": 94,
      "fn": "AccessControl._revokeRole",
      "offset": [7957, 8106],
      "op": "JUMPI",
      "path": "0"
    },
    "3712": {
      "fn": "AccessControl._revokeRole",
      "offset": [8031, 8036],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x0"
    },
    "3714": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP3",
      "path": "0"
    },
    "3715": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP2",
      "path": "0"
    },
    "3716": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "MSTORE",
      "path": "0"
    },
    "3717": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3719": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP2",
      "path": "0"
    },
    "3720": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP2",
      "path": "0"
    },
    "3721": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "MSTORE",
      "path": "0"
    },
    "3722": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3724": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP1",
      "path": "0"
    },
    "3725": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP4",
      "path": "0"
    },
    "3726": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "KECCAK256",
      "path": "0"
    },
    "3727": { "op": "PUSH1", "value": "0x1" },
    "3729": { "op": "PUSH1", "value": "0x1" },
    "3731": { "op": "PUSH1", "value": "0xA0" },
    "3733": { "op": "SHL" },
    "3734": { "op": "SUB" },
    "3735": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "DUP6",
      "path": "0"
    },
    "3736": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "AND",
      "path": "0"
    },
    "3737": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "DUP1",
      "path": "0"
    },
    "3738": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "DUP6",
      "path": "0"
    },
    "3739": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "MSTORE",
      "path": "0"
    },
    "3740": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "SWAP3",
      "path": "0"
    },
    "3741": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "MSTORE",
      "path": "0"
    },
    "3742": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "DUP1",
      "path": "0"
    },
    "3743": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "DUP4",
      "path": "0"
    },
    "3744": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8028],
      "op": "KECCAK256",
      "path": "0"
    },
    "3745": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8036],
      "op": "DUP1",
      "path": "0"
    },
    "3746": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8036],
      "op": "SLOAD",
      "path": "0"
    },
    "3747": { "op": "PUSH1", "value": "0xFF" },
    "3749": { "op": "NOT" },
    "3750": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8036],
      "op": "AND",
      "path": "0"
    },
    "3751": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8036],
      "op": "SWAP1",
      "path": "0"
    },
    "3752": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8036],
      "op": "SSTORE",
      "path": "0"
    },
    "3753": {
      "fn": "AccessControl._revokeRole",
      "offset": [8055, 8095],
      "op": "MLOAD",
      "path": "0",
      "statement": 53
    },
    "3754": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "3755": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP3",
      "path": "7"
    },
    "3756": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "DUP6",
      "path": "0"
    },
    "3757": {
      "fn": "AccessControl._revokeRole",
      "offset": [7999, 8011],
      "op": "SWAP2",
      "path": "0"
    },
    "3758": {
      "fn": "AccessControl._revokeRole",
      "offset": [8055, 8095],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "3791": {
      "fn": "AccessControl._revokeRole",
      "offset": [8055, 8095],
      "op": "SWAP2",
      "path": "0"
    },
    "3792": {
      "fn": "AccessControl._revokeRole",
      "offset": [8031, 8036],
      "op": "SWAP1",
      "path": "0"
    },
    "3793": {
      "fn": "AccessControl._revokeRole",
      "offset": [8055, 8095],
      "op": "LOG4",
      "path": "0"
    },
    "3794": {
      "fn": "AccessControl._revokeRole",
      "offset": [7878, 8112],
      "op": "POP",
      "path": "0"
    },
    "3795": {
      "fn": "AccessControl._revokeRole",
      "offset": [7878, 8112],
      "op": "POP",
      "path": "0"
    },
    "3796": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [7878, 8112],
      "op": "JUMP",
      "path": "0"
    },
    "3797": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11266, 11573],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3798": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11416, 11424],
      "op": "DUP2",
      "path": "2",
      "statement": 54
    },
    "3799": { "op": "PUSH1", "value": "0x1" },
    "3801": { "op": "PUSH1", "value": "0x1" },
    "3803": { "op": "PUSH1", "value": "0xA0" },
    "3805": { "op": "SHL" },
    "3806": { "op": "SUB" },
    "3807": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11407, 11424],
      "op": "AND",
      "path": "2"
    },
    "3808": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11407, 11412],
      "op": "DUP4",
      "path": "2"
    },
    "3809": { "op": "PUSH1", "value": "0x1" },
    "3811": { "op": "PUSH1", "value": "0x1" },
    "3813": { "op": "PUSH1", "value": "0xA0" },
    "3815": { "op": "SHL" },
    "3816": { "op": "SUB" },
    "3817": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11407, 11424],
      "op": "AND",
      "path": "2"
    },
    "3818": {
      "branch": 104,
      "fn": "ERC721._setApprovalForAll",
      "offset": [11407, 11424],
      "op": "SUB",
      "path": "2"
    },
    "3819": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF36"
    },
    "3822": {
      "branch": 104,
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "JUMPI",
      "path": "2"
    },
    "3823": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3825": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "MLOAD",
      "path": "2"
    },
    "3826": { "op": "PUSH3", "value": "0x461BCD" },
    "3830": { "op": "PUSH1", "value": "0xE5" },
    "3832": { "op": "SHL" },
    "3833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "DUP2",
      "path": "2"
    },
    "3834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "MSTORE",
      "path": "2"
    },
    "3835": { "op": "PUSH1", "value": "0x20" },
    "3837": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3839": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "DUP3",
      "path": "2"
    },
    "3840": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "ADD",
      "path": "2"
    },
    "3841": { "op": "MSTORE" },
    "3842": { "op": "PUSH1", "value": "0x19" },
    "3844": { "op": "PUSH1", "value": "0x24" },
    "3846": { "op": "DUP3" },
    "3847": { "op": "ADD" },
    "3848": { "op": "MSTORE" },
    "3849": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "3882": { "op": "PUSH1", "value": "0x44" },
    "3884": { "op": "DUP3" },
    "3885": { "op": "ADD" },
    "3886": { "op": "MSTORE" },
    "3887": { "op": "PUSH1", "value": "0x64" },
    "3889": { "op": "ADD" },
    "3890": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "3893": { "op": "JUMP" },
    "3894": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11399, 11454],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3895": { "op": "PUSH1", "value": "0x1" },
    "3897": { "op": "PUSH1", "value": "0x1" },
    "3899": { "op": "PUSH1", "value": "0xA0" },
    "3901": { "op": "SHL" },
    "3902": { "op": "SUB" },
    "3903": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP4",
      "path": "2",
      "statement": 55
    },
    "3904": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP2",
      "path": "2"
    },
    "3905": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "AND",
      "path": "2"
    },
    "3906": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3908": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP2",
      "path": "2"
    },
    "3909": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP2",
      "path": "2"
    },
    "3910": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "MSTORE",
      "path": "2"
    },
    "3911": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11482],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3913": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3915": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "SWAP1",
      "path": "2"
    },
    "3916": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP2",
      "path": "2"
    },
    "3917": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "MSTORE",
      "path": "2"
    },
    "3918": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3920": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP1",
      "path": "2"
    },
    "3921": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "DUP4",
      "path": "2"
    },
    "3922": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11489],
      "op": "KECCAK256",
      "path": "2"
    },
    "3923": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "SWAP5",
      "path": "2"
    },
    "3924": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "DUP8",
      "path": "2"
    },
    "3925": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "AND",
      "path": "2"
    },
    "3926": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "DUP1",
      "path": "2"
    },
    "3927": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "DUP5",
      "path": "2"
    },
    "3928": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "MSTORE",
      "path": "2"
    },
    "3929": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "SWAP5",
      "path": "2"
    },
    "3930": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "DUP3",
      "path": "2"
    },
    "3931": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "MSTORE",
      "path": "2"
    },
    "3932": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "SWAP2",
      "path": "2"
    },
    "3933": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "DUP3",
      "path": "2"
    },
    "3934": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "SWAP1",
      "path": "2"
    },
    "3935": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11499],
      "op": "KECCAK256",
      "path": "2"
    },
    "3936": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "DUP1",
      "path": "2"
    },
    "3937": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "SLOAD",
      "path": "2"
    },
    "3938": { "op": "PUSH1", "value": "0xFF" },
    "3940": { "op": "NOT" },
    "3941": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "AND",
      "path": "2"
    },
    "3942": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "DUP7",
      "path": "2"
    },
    "3943": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "ISZERO",
      "path": "2"
    },
    "3944": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "ISZERO",
      "path": "2"
    },
    "3945": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "SWAP1",
      "path": "2"
    },
    "3946": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "DUP2",
      "path": "2"
    },
    "3947": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "OR",
      "path": "2"
    },
    "3948": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "SWAP1",
      "path": "2"
    },
    "3949": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "SWAP2",
      "path": "2"
    },
    "3950": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11464, 11510],
      "op": "SSTORE",
      "path": "2"
    },
    "3951": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "SWAP2",
      "path": "2",
      "statement": 56
    },
    "3952": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "MLOAD",
      "path": "2"
    },
    "3953": { "op": "SWAP2" },
    "3954": { "op": "DUP3" },
    "3955": { "op": "MSTORE" },
    "3956": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "3989": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "SWAP2",
      "path": "2"
    },
    "3990": { "op": "ADD" },
    "3991": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3993": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "MLOAD",
      "path": "2"
    },
    "3994": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "DUP1",
      "path": "2"
    },
    "3995": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "SWAP2",
      "path": "2"
    },
    "3996": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "SUB",
      "path": "2"
    },
    "3997": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "SWAP1",
      "path": "2"
    },
    "3998": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11525, 11566],
      "op": "LOG3",
      "path": "2"
    },
    "3999": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11266, 11573],
      "op": "POP",
      "path": "2"
    },
    "4000": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11266, 11573],
      "op": "POP",
      "path": "2"
    },
    "4001": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [11266, 11573],
      "op": "POP",
      "path": "2"
    },
    "4002": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [11266, 11573],
      "op": "JUMP",
      "path": "2"
    },
    "4003": {
      "fn": "ERC721._safeTransfer",
      "offset": [6426, 6731],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4004": {
      "fn": "ERC721._safeTransfer",
      "offset": [6576, 6604],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0xFAE"
    },
    "4007": {
      "fn": "ERC721._safeTransfer",
      "offset": [6586, 6590],
      "op": "DUP5",
      "path": "2"
    },
    "4008": {
      "fn": "ERC721._safeTransfer",
      "offset": [6592, 6594],
      "op": "DUP5",
      "path": "2"
    },
    "4009": {
      "fn": "ERC721._safeTransfer",
      "offset": [6596, 6603],
      "op": "DUP5",
      "path": "2"
    },
    "4010": {
      "fn": "ERC721._safeTransfer",
      "offset": [6576, 6585],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC46"
    },
    "4013": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [6576, 6604],
      "op": "JUMP",
      "path": "2"
    },
    "4014": {
      "fn": "ERC721._safeTransfer",
      "offset": [6576, 6604],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4015": {
      "fn": "ERC721._safeTransfer",
      "offset": [6622, 6669],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0xFBA"
    },
    "4018": {
      "fn": "ERC721._safeTransfer",
      "offset": [6645, 6649],
      "op": "DUP5",
      "path": "2"
    },
    "4019": {
      "fn": "ERC721._safeTransfer",
      "offset": [6651, 6653],
      "op": "DUP5",
      "path": "2"
    },
    "4020": {
      "fn": "ERC721._safeTransfer",
      "offset": [6655, 6662],
      "op": "DUP5",
      "path": "2"
    },
    "4021": {
      "fn": "ERC721._safeTransfer",
      "offset": [6664, 6668],
      "op": "DUP5",
      "path": "2"
    },
    "4022": {
      "fn": "ERC721._safeTransfer",
      "offset": [6622, 6644],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1212"
    },
    "4025": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [6622, 6669],
      "op": "JUMP",
      "path": "2"
    },
    "4026": {
      "branch": 105,
      "fn": "ERC721._safeTransfer",
      "offset": [6622, 6669],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4027": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D5"
    },
    "4030": {
      "branch": 105,
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "JUMPI",
      "path": "2"
    },
    "4031": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4033": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "MLOAD",
      "path": "2"
    },
    "4034": { "op": "PUSH3", "value": "0x461BCD" },
    "4038": { "op": "PUSH1", "value": "0xE5" },
    "4040": { "op": "SHL" },
    "4041": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "DUP2",
      "path": "2"
    },
    "4042": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "MSTORE",
      "path": "2"
    },
    "4043": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4045": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "ADD",
      "path": "2"
    },
    "4046": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "4049": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "SWAP1",
      "path": "2"
    },
    "4050": {
      "fn": "ERC721._safeTransfer",
      "offset": [6614, 6724],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF1"
    },
    "4053": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [6614, 6724],
      "op": "JUMP",
      "path": "2"
    },
    "4054": {
      "fn": "Strings.toString",
      "offset": [392, 1095],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4055": {
      "fn": "Strings.toString",
      "offset": [448, 461],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "4057": {
      "fn": "Strings.toString",
      "offset": [665, 670],
      "op": "DUP2",
      "path": "9"
    },
    "4058": {
      "fn": "Strings.toString",
      "offset": [674, 675],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4060": {
      "branch": 109,
      "fn": "Strings.toString",
      "offset": [665, 675],
      "op": "SUB",
      "path": "9"
    },
    "4061": {
      "fn": "Strings.toString",
      "offset": [661, 712],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFFD"
    },
    "4064": {
      "branch": 109,
      "fn": "Strings.toString",
      "offset": [661, 712],
      "op": "JUMPI",
      "path": "9"
    },
    "4065": { "op": "POP" },
    "4066": { "op": "POP" },
    "4067": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "PUSH1",
      "path": "9",
      "statement": 59,
      "value": "0x40"
    },
    "4069": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "DUP1",
      "path": "9"
    },
    "4070": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "MLOAD",
      "path": "9"
    },
    "4071": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "DUP1",
      "path": "9"
    },
    "4072": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "DUP3",
      "path": "9"
    },
    "4073": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "ADD",
      "path": "9"
    },
    "4074": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "SWAP1",
      "path": "9"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "SWAP2",
      "path": "9"
    },
    "4076": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "MSTORE",
      "path": "9"
    },
    "4077": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4079": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "DUP2",
      "path": "9"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "MSTORE",
      "path": "9"
    },
    "4081": { "op": "PUSH1", "value": "0x3" },
    "4083": { "op": "PUSH1", "value": "0xFC" },
    "4085": { "op": "SHL" },
    "4086": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4088": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "DUP3",
      "path": "9"
    },
    "4089": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "ADD",
      "path": "9"
    },
    "4090": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "MSTORE",
      "path": "9"
    },
    "4091": {
      "fn": "Strings.toString",
      "offset": [691, 701],
      "op": "SWAP1",
      "path": "9"
    },
    "4092": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [392, 1095],
      "op": "JUMP",
      "path": "9"
    },
    "4093": {
      "fn": "Strings.toString",
      "offset": [661, 712],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4094": {
      "fn": "Strings.toString",
      "offset": [736, 741],
      "op": "DUP2",
      "path": "9"
    },
    "4095": {
      "fn": "Strings.toString",
      "offset": [721, 733],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4097": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4098": {
      "fn": "Strings.toString",
      "offset": [782, 791],
      "op": "DUP2",
      "path": "9"
    },
    "4099": {
      "fn": "Strings.toString",
      "offset": [782, 791],
      "op": "ISZERO",
      "path": "9"
    },
    "4100": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1027"
    },
    "4103": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "JUMPI",
      "path": "9"
    },
    "4104": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "DUP1",
      "path": "9",
      "statement": 60
    },
    "4105": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1011"
    },
    "4108": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "DUP2",
      "path": "9"
    },
    "4109": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C43"
    },
    "4112": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [807, 815],
      "op": "JUMP",
      "path": "9"
    },
    "4113": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [807, 815],
      "op": "SWAP2",
      "path": "9"
    },
    "4115": { "op": "POP" },
    "4116": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "PUSH2",
      "path": "9",
      "statement": 61,
      "value": "0x1020"
    },
    "4119": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "SWAP1",
      "path": "9"
    },
    "4120": { "op": "POP" },
    "4121": {
      "fn": "Strings.toString",
      "offset": [837, 839],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "DUP4",
      "path": "9"
    },
    "4124": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C72"
    },
    "4127": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [829, 839],
      "op": "JUMP",
      "path": "9"
    },
    "4128": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4129": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "SWAP2",
      "path": "9"
    },
    "4130": {
      "fn": "Strings.toString",
      "offset": [829, 839],
      "op": "POP",
      "path": "9"
    },
    "4131": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1001"
    },
    "4134": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "JUMP",
      "path": "9"
    },
    "4135": {
      "fn": "Strings.toString",
      "offset": [775, 850],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4136": {
      "fn": "Strings.toString",
      "offset": [859, 878],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4138": {
      "fn": "Strings.toString",
      "offset": [891, 897],
      "op": "DUP2",
      "path": "9"
    },
    "4139": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4148": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP2",
      "path": "9"
    },
    "4149": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "GT",
      "path": "9"
    },
    "4150": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ISZERO",
      "path": "9"
    },
    "4151": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1042"
    },
    "4154": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "JUMPI",
      "path": "9"
    },
    "4155": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1042"
    },
    "4158": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1878"
    },
    "4161": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [881, 898],
      "op": "JUMP",
      "path": "9"
    },
    "4162": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4163": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4165": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "MLOAD",
      "path": "9"
    },
    "4166": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "SWAP1",
      "path": "9"
    },
    "4167": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP1",
      "path": "9"
    },
    "4168": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP3",
      "path": "9"
    },
    "4169": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "MSTORE",
      "path": "9"
    },
    "4170": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP1",
      "path": "9"
    },
    "4171": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "4173": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ADD",
      "path": "9"
    },
    "4174": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "4176": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "NOT",
      "path": "9"
    },
    "4177": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "AND",
      "path": "9"
    },
    "4178": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4180": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ADD",
      "path": "9"
    },
    "4181": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP3",
      "path": "9"
    },
    "4182": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ADD",
      "path": "9"
    },
    "4183": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4185": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "MSTORE",
      "path": "9"
    },
    "4186": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP1",
      "path": "9"
    },
    "4187": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ISZERO",
      "path": "9"
    },
    "4188": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH2",
      "path": "9",
      "value": "0x106C"
    },
    "4191": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "JUMPI",
      "path": "9"
    },
    "4192": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4194": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP3",
      "path": "9"
    },
    "4195": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ADD",
      "path": "9"
    },
    "4196": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP2",
      "path": "9"
    },
    "4197": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP1",
      "path": "9"
    },
    "4198": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "4199": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "DUP4",
      "path": "9"
    },
    "4200": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "4201": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "ADD",
      "path": "9"
    },
    "4202": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "SWAP1",
      "path": "9"
    },
    "4203": { "op": "POP" },
    "4204": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4205": {
      "fn": "Strings.toString",
      "offset": [881, 898],
      "op": "POP",
      "path": "9"
    },
    "4206": {
      "fn": "Strings.toString",
      "offset": [859, 898],
      "op": "SWAP1",
      "path": "9"
    },
    "4207": {
      "fn": "Strings.toString",
      "offset": [859, 898],
      "op": "POP",
      "path": "9"
    },
    "4208": {
      "fn": "Strings.toString",
      "offset": [908, 1058],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4209": {
      "fn": "Strings.toString",
      "offset": [915, 925],
      "op": "DUP5",
      "path": "9"
    },
    "4210": {
      "fn": "Strings.toString",
      "offset": [915, 925],
      "op": "ISZERO",
      "path": "9"
    },
    "4211": {
      "fn": "Strings.toString",
      "offset": [908, 1058],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC3E"
    },
    "4214": {
      "fn": "Strings.toString",
      "offset": [908, 1058],
      "op": "JUMPI",
      "path": "9"
    },
    "4215": {
      "fn": "Strings.toString",
      "offset": [941, 952],
      "op": "PUSH2",
      "path": "9",
      "statement": 62,
      "value": "0x1081"
    },
    "4218": {
      "fn": "Strings.toString",
      "offset": [951, 952],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4220": {
      "fn": "Strings.toString",
      "offset": [941, 952],
      "op": "DUP4",
      "path": "9"
    },
    "4221": {
      "fn": "Strings.toString",
      "offset": [941, 952],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A7F"
    },
    "4224": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [941, 952],
      "op": "JUMP",
      "path": "9"
    },
    "4225": {
      "fn": "Strings.toString",
      "offset": [941, 952],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4226": {
      "fn": "Strings.toString",
      "offset": [941, 952],
      "op": "SWAP2",
      "path": "9"
    },
    "4227": { "op": "POP" },
    "4228": {
      "fn": "Strings.toString",
      "offset": [1009, 1019],
      "op": "PUSH2",
      "path": "9",
      "statement": 63,
      "value": "0x108E"
    },
    "4231": {
      "fn": "Strings.toString",
      "offset": [1017, 1019],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "4233": {
      "fn": "Strings.toString",
      "offset": [1009, 1014],
      "op": "DUP7",
      "path": "9"
    },
    "4234": {
      "fn": "Strings.toString",
      "offset": [1009, 1019],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C86"
    },
    "4237": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [1009, 1019],
      "op": "JUMP",
      "path": "9"
    },
    "4238": {
      "fn": "Strings.toString",
      "offset": [1009, 1019],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4239": {
      "fn": "Strings.toString",
      "offset": [996, 1020],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1099"
    },
    "4242": {
      "fn": "Strings.toString",
      "offset": [996, 1020],
      "op": "SWAP1",
      "path": "9"
    },
    "4243": {
      "fn": "Strings.toString",
      "offset": [996, 998],
      "op": "PUSH1",
      "path": "9",
      "value": "0x30"
    },
    "4245": {
      "fn": "Strings.toString",
      "offset": [996, 1020],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE4"
    },
    "4248": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [996, 1020],
      "op": "JUMP",
      "path": "9"
    },
    "4249": {
      "fn": "Strings.toString",
      "offset": [996, 1020],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4250": {
      "fn": "Strings.toString",
      "offset": [983, 1022],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF8"
    },
    "4252": {
      "fn": "Strings.toString",
      "offset": [983, 1022],
      "op": "SHL",
      "path": "9"
    },
    "4253": {
      "fn": "Strings.toString",
      "offset": [966, 972],
      "op": "DUP2",
      "path": "9"
    },
    "4254": {
      "fn": "Strings.toString",
      "offset": [973, 979],
      "op": "DUP4",
      "path": "9"
    },
    "4255": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "DUP2",
      "path": "9"
    },
    "4256": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "MLOAD",
      "path": "9"
    },
    "4257": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "DUP2",
      "path": "9"
    },
    "4258": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "LT",
      "path": "9"
    },
    "4259": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10AE"
    },
    "4262": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "JUMPI",
      "path": "9"
    },
    "4263": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10AE"
    },
    "4266": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9A"
    },
    "4269": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [966, 980],
      "op": "JUMP",
      "path": "9"
    },
    "4270": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4271": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4273": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "ADD",
      "path": "9"
    },
    "4274": {
      "fn": "Strings.toString",
      "offset": [966, 980],
      "op": "ADD",
      "path": "9"
    },
    "4275": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "SWAP1",
      "path": "9"
    },
    "4276": { "op": "PUSH1", "value": "0x1" },
    "4278": { "op": "PUSH1", "value": "0x1" },
    "4280": { "op": "PUSH1", "value": "0xF8" },
    "4282": { "op": "SHL" },
    "4283": { "op": "SUB" },
    "4284": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "NOT",
      "path": "9"
    },
    "4285": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "AND",
      "path": "9"
    },
    "4286": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "SWAP1",
      "path": "9"
    },
    "4287": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "DUP2",
      "path": "9"
    },
    "4288": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4290": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "BYTE",
      "path": "9"
    },
    "4291": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "SWAP1",
      "path": "9"
    },
    "4292": {
      "fn": "Strings.toString",
      "offset": [966, 1022],
      "op": "MSTORE8",
      "path": "9"
    },
    "4293": { "op": "POP" },
    "4294": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "PUSH2",
      "path": "9",
      "statement": 64,
      "value": "0x10D0"
    },
    "4297": {
      "fn": "Strings.toString",
      "offset": [1045, 1047],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "4299": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "DUP7",
      "path": "9"
    },
    "4300": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C72"
    },
    "4303": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [1036, 1047],
      "op": "JUMP",
      "path": "9"
    },
    "4304": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4305": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "SWAP5",
      "path": "9"
    },
    "4306": {
      "fn": "Strings.toString",
      "offset": [1036, 1047],
      "op": "POP",
      "path": "9"
    },
    "4307": {
      "fn": "Strings.toString",
      "offset": [908, 1058],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1070"
    },
    "4310": {
      "fn": "Strings.toString",
      "offset": [908, 1058],
      "op": "JUMP",
      "path": "9"
    },
    "4311": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2606, 2808],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4312": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2691, 2695],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4314": { "op": "PUSH1", "value": "0x1" },
    "4316": { "op": "PUSH1", "value": "0x1" },
    "4318": { "op": "PUSH1", "value": "0xE0" },
    "4320": { "op": "SHL" },
    "4321": { "op": "SUB" },
    "4322": { "op": "NOT" },
    "4323": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2761],
      "op": "DUP3",
      "path": "0",
      "statement": 65
    },
    "4324": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2761],
      "op": "AND",
      "path": "0"
    },
    "4325": { "op": "PUSH4", "value": "0x7965DB0B" },
    "4330": { "op": "PUSH1", "value": "0xE0" },
    "4332": { "op": "SHL" },
    "4333": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2761],
      "op": "EQ",
      "path": "0"
    },
    "4334": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2761],
      "op": "DUP1",
      "path": "0"
    },
    "4335": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2801],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "4338": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2714, 2801],
      "op": "JUMPI",
      "path": "0"
    },
    "4339": { "op": "POP" },
    "4340": { "op": "PUSH4", "value": "0x1FFC9A7" },
    "4345": { "op": "PUSH1", "value": "0xE0" },
    "4347": { "op": "SHL" },
    "4348": { "op": "PUSH1", "value": "0x1" },
    "4350": { "op": "PUSH1", "value": "0x1" },
    "4352": { "op": "PUSH1", "value": "0xE0" },
    "4354": { "op": "SHL" },
    "4355": { "op": "SUB" },
    "4356": { "op": "NOT" },
    "4357": {
      "fn": "ERC165.supportsInterface",
      "offset": [937, 977],
      "op": "DUP4",
      "path": "10",
      "statement": 66
    },
    "4358": {
      "fn": "ERC165.supportsInterface",
      "offset": [937, 977],
      "op": "AND",
      "path": "10"
    },
    "4359": {
      "fn": "ERC165.supportsInterface",
      "offset": [937, 977],
      "op": "EQ",
      "path": "10"
    },
    "4360": {
      "fn": "AccessControl.supportsInterface",
      "offset": [2765, 2801],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "4363": {
      "fn": "ERC165.supportsInterface",
      "offset": [829, 984],
      "op": "JUMP",
      "path": "10"
    },
    "4364": {
      "fn": "Diffemon.random",
      "offset": [2476, 2710],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4365": {
      "fn": "Diffemon.random",
      "offset": [2544, 2551],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4367": {
      "fn": "Diffemon.random",
      "offset": [2697, 2703],
      "op": "DUP3",
      "path": "12",
      "statement": 67
    },
    "4368": {
      "fn": "Diffemon.random",
      "offset": [2615, 2631],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111A"
    },
    "4371": {
      "fn": "Diffemon.random",
      "offset": [2630, 2631],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4373": {
      "fn": "Diffemon.random",
      "offset": [2615, 2627],
      "op": "NUMBER",
      "path": "12"
    },
    "4374": {
      "fn": "Diffemon.random",
      "offset": [2615, 2631],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7F"
    },
    "4377": {
      "fn": "Diffemon.random",
      "jump": "i",
      "offset": [2615, 2631],
      "op": "JUMP",
      "path": "12"
    },
    "4378": {
      "fn": "Diffemon.random",
      "offset": [2615, 2631],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4379": {
      "fn": "Diffemon.random",
      "offset": [2605, 2632],
      "op": "BLOCKHASH",
      "path": "12"
    },
    "4380": {
      "fn": "Diffemon.random",
      "offset": [2652, 2661],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1126"
    },
    "4383": {
      "fn": "Diffemon.random",
      "offset": [2657, 2661],
      "op": "DUP5",
      "path": "12"
    },
    "4384": {
      "fn": "Diffemon.random",
      "offset": [2652, 2654],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2F"
    },
    "4386": {
      "fn": "Diffemon.random",
      "offset": [2652, 2661],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CB0"
    },
    "4389": {
      "fn": "Diffemon.random",
      "jump": "i",
      "offset": [2652, 2661],
      "op": "JUMP",
      "path": "12"
    },
    "4390": {
      "fn": "Diffemon.random",
      "offset": [2652, 2661],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4391": {
      "fn": "Diffemon.random",
      "offset": [2634, 2661],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1130"
    },
    "4394": {
      "fn": "Diffemon.random",
      "offset": [2634, 2661],
      "op": "SWAP1",
      "path": "12"
    },
    "4395": {
      "fn": "Diffemon.random",
      "offset": [2634, 2649],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "4396": {
      "fn": "Diffemon.random",
      "offset": [2634, 2661],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7F"
    },
    "4399": {
      "fn": "Diffemon.random",
      "jump": "i",
      "offset": [2634, 2661],
      "op": "JUMP",
      "path": "12"
    },
    "4400": {
      "fn": "Diffemon.random",
      "offset": [2634, 2661],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4401": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4403": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "DUP1",
      "path": "12"
    },
    "4404": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "MLOAD",
      "path": "12"
    },
    "4405": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4407": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "DUP2",
      "path": "12"
    },
    "4408": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "ADD",
      "path": "12"
    },
    "4409": { "op": "SWAP4" },
    "4410": { "op": "SWAP1" },
    "4411": { "op": "SWAP4" },
    "4412": { "op": "MSTORE" },
    "4413": { "op": "DUP3" },
    "4414": { "op": "ADD" },
    "4415": { "op": "MSTORE" },
    "4416": {
      "fn": "Diffemon.random",
      "offset": [2663, 2679],
      "op": "DIFFICULTY",
      "path": "12"
    },
    "4417": { "op": "PUSH1", "value": "0x60" },
    "4419": { "op": "DUP1" },
    "4420": { "op": "DUP4" },
    "4421": { "op": "ADD" },
    "4422": { "op": "SWAP2" },
    "4423": { "op": "SWAP1" },
    "4424": { "op": "SWAP2" },
    "4425": { "op": "MSTORE" },
    "4426": {
      "fn": "Diffemon.random",
      "offset": [2681, 2691],
      "op": "CALLER",
      "path": "12"
    },
    "4427": { "op": "SWAP1" },
    "4428": { "op": "SHL" },
    "4429": { "op": "PUSH12", "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF" },
    "4442": { "op": "NOT" },
    "4443": { "op": "AND" },
    "4444": { "op": "PUSH1", "value": "0x80" },
    "4446": { "op": "DUP3" },
    "4447": { "op": "ADD" },
    "4448": { "op": "MSTORE" },
    "4449": { "op": "PUSH1", "value": "0x94" },
    "4451": { "op": "ADD" },
    "4452": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4454": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "MLOAD",
      "path": "12"
    },
    "4455": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4457": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "DUP2",
      "path": "12"
    },
    "4458": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "DUP4",
      "path": "12"
    },
    "4459": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "SUB",
      "path": "12"
    },
    "4460": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "SUB",
      "path": "12"
    },
    "4461": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "DUP2",
      "path": "12"
    },
    "4462": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "MSTORE",
      "path": "12"
    },
    "4463": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "SWAP1",
      "path": "12"
    },
    "4464": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4466": {
      "fn": "Diffemon.random",
      "offset": [2588, 2692],
      "op": "MSTORE",
      "path": "12"
    },
    "4467": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "DUP1",
      "path": "12"
    },
    "4468": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "MLOAD",
      "path": "12"
    },
    "4469": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "SWAP1",
      "path": "12"
    },
    "4470": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4472": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "ADD",
      "path": "12"
    },
    "4473": {
      "fn": "Diffemon.random",
      "offset": [2578, 2693],
      "op": "KECCAK256",
      "path": "12"
    },
    "4474": {
      "fn": "Diffemon.random",
      "offset": [2570, 2694],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4476": {
      "fn": "Diffemon.random",
      "offset": [2570, 2694],
      "op": "SHR",
      "path": "12"
    },
    "4477": {
      "fn": "Diffemon.random",
      "offset": [2570, 2703],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1186"
    },
    "4480": {
      "fn": "Diffemon.random",
      "offset": [2570, 2703],
      "op": "SWAP2",
      "path": "12"
    },
    "4481": {
      "fn": "Diffemon.random",
      "offset": [2570, 2703],
      "op": "SWAP1",
      "path": "12"
    },
    "4482": {
      "fn": "Diffemon.random",
      "offset": [2570, 2703],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C86"
    },
    "4485": {
      "fn": "Diffemon.random",
      "jump": "i",
      "offset": [2570, 2703],
      "op": "JUMP",
      "path": "12"
    },
    "4486": {
      "fn": "Diffemon.random",
      "offset": [2570, 2703],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4487": {
      "fn": "Diffemon.random",
      "offset": [2563, 2703],
      "op": "SWAP4",
      "path": "12"
    },
    "4488": {
      "fn": "Diffemon.random",
      "offset": [2476, 2710],
      "op": "SWAP3",
      "path": "12"
    },
    "4489": { "op": "POP" },
    "4490": { "op": "POP" },
    "4491": { "op": "POP" },
    "4492": {
      "fn": "Diffemon.random",
      "jump": "o",
      "offset": [2476, 2710],
      "op": "JUMP",
      "path": "12"
    },
    "4493": {
      "fn": "Diffemon.mint",
      "offset": [3104, 3239],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4494": {
      "fn": "Diffemon.mint",
      "offset": [3166, 3181],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4496": {
      "fn": "Diffemon.mint",
      "offset": [3184, 3196],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1198"
    },
    "4499": {
      "fn": "Diffemon.mint",
      "offset": [3193, 3195],
      "op": "DUP3",
      "path": "12"
    },
    "4500": {
      "fn": "Diffemon.mint",
      "offset": [3184, 3192],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1313"
    },
    "4503": {
      "fn": "Diffemon.mint",
      "jump": "i",
      "offset": [3184, 3196],
      "op": "JUMP",
      "path": "12"
    },
    "4504": {
      "fn": "Diffemon.mint",
      "offset": [3184, 3196],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4505": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "PUSH1",
      "path": "12",
      "statement": 68,
      "value": "0x0"
    },
    "4507": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "SWAP1",
      "path": "12"
    },
    "4508": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "DUP2",
      "path": "12"
    },
    "4509": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "MSTORE",
      "path": "12"
    },
    "4510": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3214],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "4512": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4514": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "MSTORE",
      "path": "12"
    },
    "4515": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4517": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "SWAP1",
      "path": "12"
    },
    "4518": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3223],
      "op": "KECCAK256",
      "path": "12"
    },
    "4519": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3232],
      "op": "SWAP3",
      "path": "12"
    },
    "4520": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3232],
      "op": "SWAP1",
      "path": "12"
    },
    "4521": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3232],
      "op": "SWAP3",
      "path": "12"
    },
    "4522": {
      "fn": "Diffemon.mint",
      "offset": [3209, 3232],
      "op": "SSTORE",
      "path": "12"
    },
    "4523": { "op": "POP" },
    "4524": { "op": "POP" },
    "4525": {
      "fn": "Diffemon.mint",
      "jump": "o",
      "offset": [3104, 3239],
      "op": "JUMP",
      "path": "12"
    },
    "4526": {
      "fn": "AccessControl._checkRole",
      "offset": [3718, 4210],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4527": {
      "fn": "AccessControl._checkRole",
      "offset": [3806, 3828],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B8"
    },
    "4530": {
      "fn": "AccessControl._checkRole",
      "offset": [3814, 3818],
      "op": "DUP3",
      "path": "0"
    },
    "4531": {
      "fn": "AccessControl._checkRole",
      "offset": [3820, 3827],
      "op": "DUP3",
      "path": "0"
    },
    "4532": {
      "fn": "AccessControl._checkRole",
      "offset": [3806, 3813],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "4535": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [3806, 3828],
      "op": "JUMP",
      "path": "0"
    },
    "4536": {
      "branch": 95,
      "fn": "AccessControl._checkRole",
      "offset": [3806, 3828],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4537": {
      "fn": "AccessControl._checkRole",
      "offset": [3801, 4204],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "4540": {
      "branch": 95,
      "fn": "AccessControl._checkRole",
      "offset": [3801, 4204],
      "op": "JUMPI",
      "path": "0"
    },
    "4541": {
      "fn": "AccessControl._checkRole",
      "offset": [3989, 4030],
      "op": "PUSH2",
      "path": "0",
      "statement": 69,
      "value": "0x11D0"
    },
    "4544": {
      "fn": "AccessControl._checkRole",
      "offset": [4017, 4024],
      "op": "DUP2",
      "path": "0"
    },
    "4545": { "op": "PUSH1", "value": "0x1" },
    "4547": { "op": "PUSH1", "value": "0x1" },
    "4549": { "op": "PUSH1", "value": "0xA0" },
    "4551": { "op": "SHL" },
    "4552": { "op": "SUB" },
    "4553": {
      "fn": "AccessControl._checkRole",
      "offset": [3989, 4030],
      "op": "AND",
      "path": "0"
    },
    "4554": {
      "fn": "AccessControl._checkRole",
      "offset": [4027, 4029],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "4556": {
      "fn": "AccessControl._checkRole",
      "offset": [3989, 4008],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1339"
    },
    "4559": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [3989, 4030],
      "op": "JUMP",
      "path": "0"
    },
    "4560": {
      "fn": "AccessControl._checkRole",
      "offset": [3989, 4030],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4561": {
      "fn": "AccessControl._checkRole",
      "offset": [4101, 4139],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DB"
    },
    "4564": {
      "fn": "AccessControl._checkRole",
      "offset": [4129, 4133],
      "op": "DUP4",
      "path": "0"
    },
    "4565": {
      "fn": "AccessControl._checkRole",
      "offset": [4136, 4138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4567": {
      "fn": "AccessControl._checkRole",
      "offset": [4101, 4120],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1339"
    },
    "4570": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [4101, 4139],
      "op": "JUMP",
      "path": "0"
    },
    "4571": {
      "fn": "AccessControl._checkRole",
      "offset": [4101, 4139],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4572": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4574": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "MLOAD",
      "path": "0"
    },
    "4575": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4577": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "ADD",
      "path": "0"
    },
    "4578": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EC"
    },
    "4581": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SWAP3",
      "path": "0"
    },
    "4582": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SWAP2",
      "path": "0"
    },
    "4583": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SWAP1",
      "path": "0"
    },
    "4584": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CCF"
    },
    "4587": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [3896, 4161],
      "op": "JUMP",
      "path": "0"
    },
    "4588": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4589": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4591": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "DUP1",
      "path": "0"
    },
    "4592": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "MLOAD",
      "path": "0"
    },
    "4593": { "op": "PUSH1", "value": "0x1F" },
    "4595": { "op": "NOT" },
    "4596": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "DUP2",
      "path": "0"
    },
    "4597": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "DUP5",
      "path": "0"
    },
    "4598": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SUB",
      "path": "0"
    },
    "4599": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "ADD",
      "path": "0"
    },
    "4600": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "DUP2",
      "path": "0"
    },
    "4601": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "MSTORE",
      "path": "0"
    },
    "4602": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SWAP1",
      "path": "0"
    },
    "4603": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "DUP3",
      "path": "0"
    },
    "4604": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "SWAP1",
      "path": "0"
    },
    "4605": {
      "fn": "AccessControl._checkRole",
      "offset": [3896, 4161],
      "op": "MSTORE",
      "path": "0"
    },
    "4606": { "op": "PUSH3", "value": "0x461BCD" },
    "4610": { "op": "PUSH1", "value": "0xE5" },
    "4612": { "op": "SHL" },
    "4613": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "DUP3",
      "path": "0"
    },
    "4614": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "MSTORE",
      "path": "0"
    },
    "4615": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "4618": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "SWAP2",
      "path": "0"
    },
    "4619": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4621": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "ADD",
      "path": "0"
    },
    "4622": {
      "fn": "AccessControl._checkRole",
      "offset": [3844, 4193],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1783"
    },
    "4625": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [3844, 4193],
      "op": "JUMP",
      "path": "0"
    },
    "4626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12491, 12495],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4629": { "op": "PUSH1", "value": "0x1" },
    "4631": { "op": "PUSH1", "value": "0x1" },
    "4633": { "op": "PUSH1", "value": "0xA0" },
    "4635": { "op": "SHL" },
    "4636": { "op": "SUB" },
    "4637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12511, 12524],
      "op": "DUP5",
      "path": "2"
    },
    "4638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12511, 12524],
      "op": "AND",
      "path": "2"
    },
    "4639": { "op": "EXTCODESIZE" },
    "4640": { "op": "ISZERO" },
    "4641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12507, 13167],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1308"
    },
    "4644": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12507, 13167],
      "op": "JUMPI",
      "path": "2"
    },
    "4645": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4647": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "MLOAD",
      "path": "2"
    },
    "4648": { "op": "PUSH4", "value": "0xA85BD01" },
    "4653": { "op": "PUSH1", "value": "0xE1" },
    "4655": { "op": "SHL" },
    "4656": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP2",
      "path": "2"
    },
    "4657": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "MSTORE",
      "path": "2"
    },
    "4658": { "op": "PUSH1", "value": "0x1" },
    "4660": { "op": "PUSH1", "value": "0x1" },
    "4662": { "op": "PUSH1", "value": "0xA0" },
    "4664": { "op": "SHL" },
    "4665": { "op": "SUB" },
    "4666": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12582],
      "op": "DUP6",
      "path": "2"
    },
    "4667": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12582],
      "op": "AND",
      "path": "2"
    },
    "4668": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12582],
      "op": "SWAP1",
      "path": "2"
    },
    "4669": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12582],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "4674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12582],
      "op": "SWAP1",
      "path": "2"
    },
    "4675": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1256"
    },
    "4678": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP1",
      "path": "2"
    },
    "4679": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "7"
    },
    "4680": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "SWAP1",
      "path": "7"
    },
    "4681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12597, 12601],
      "op": "DUP10",
      "path": "2"
    },
    "4682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12597, 12601],
      "op": "SWAP1",
      "path": "2"
    },
    "4683": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12603, 12610],
      "op": "DUP9",
      "path": "2"
    },
    "4684": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12603, 12610],
      "op": "SWAP1",
      "path": "2"
    },
    "4685": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12612, 12616],
      "op": "DUP9",
      "path": "2"
    },
    "4686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12612, 12616],
      "op": "SWAP1",
      "path": "2"
    },
    "4687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "ADD",
      "path": "2"
    },
    "4690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D44"
    },
    "4693": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [12546, 12617],
      "op": "JUMP",
      "path": "2"
    },
    "4694": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4695": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4699": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "MLOAD",
      "path": "2"
    },
    "4700": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP1",
      "path": "2"
    },
    "4701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP4",
      "path": "2"
    },
    "4702": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SUB",
      "path": "2"
    },
    "4703": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP2",
      "path": "2"
    },
    "4704": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4706": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP8",
      "path": "2"
    },
    "4707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "GAS",
      "path": "2"
    },
    "4708": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "CALL",
      "path": "2"
    },
    "4709": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP3",
      "path": "2"
    },
    "4710": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "POP",
      "path": "2"
    },
    "4711": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "POP",
      "path": "2"
    },
    "4712": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "POP",
      "path": "2"
    },
    "4713": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP1",
      "path": "2"
    },
    "4714": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "ISZERO",
      "path": "2"
    },
    "4715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1291"
    },
    "4718": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "JUMPI",
      "path": "2"
    },
    "4719": { "op": "POP" },
    "4720": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4722": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP1",
      "path": "2"
    },
    "4723": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "MLOAD",
      "path": "2"
    },
    "4724": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP1",
      "path": "2"
    },
    "4728": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP2",
      "path": "2"
    },
    "4729": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "ADD",
      "path": "2"
    },
    "4730": { "op": "PUSH1", "value": "0x1F" },
    "4732": { "op": "NOT" },
    "4733": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "AND",
      "path": "2"
    },
    "4734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP3",
      "path": "2"
    },
    "4735": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "ADD",
      "path": "2"
    },
    "4736": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP1",
      "path": "2"
    },
    "4737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP3",
      "path": "2"
    },
    "4738": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "MSTORE",
      "path": "2"
    },
    "4739": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128E"
    },
    "4742": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP2",
      "path": "2"
    },
    "4743": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "DUP2",
      "path": "2"
    },
    "4744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "ADD",
      "path": "2"
    },
    "4745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "SWAP1",
      "path": "2"
    },
    "4746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D81"
    },
    "4749": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [12546, 12617],
      "op": "JUMP",
      "path": "2"
    },
    "4750": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4751": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4753": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12546, 12617],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EE"
    },
    "4757": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMPI",
      "path": "2"
    },
    "4758": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "DUP1",
      "path": "2"
    },
    "4760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "DUP1",
      "path": "2"
    },
    "4761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "ISZERO",
      "path": "2"
    },
    "4762": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BF"
    },
    "4765": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMPI",
      "path": "2"
    },
    "4766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "MLOAD",
      "path": "2"
    },
    "4769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "SWAP2",
      "path": "2"
    },
    "4770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "POP",
      "path": "2"
    },
    "4771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "NOT",
      "path": "2"
    },
    "4774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "4776": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "ADD",
      "path": "2"
    },
    "4778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "AND",
      "path": "2"
    },
    "4779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "DUP3",
      "path": "2"
    },
    "4780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "ADD",
      "path": "2"
    },
    "4781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "MSTORE",
      "path": "2"
    },
    "4784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "DUP3",
      "path": "2"
    },
    "4786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "MSTORE",
      "path": "2"
    },
    "4787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "DUP5",
      "path": "2"
    },
    "4793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "ADD",
      "path": "2"
    },
    "4794": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C4"
    },
    "4798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMP",
      "path": "2"
    },
    "4799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "SWAP2",
      "path": "2"
    },
    "4803": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "POP",
      "path": "2"
    },
    "4804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4805": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "POP",
      "path": "2"
    },
    "4806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12784, 12790],
      "op": "DUP1",
      "path": "2"
    },
    "4807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12784, 12797],
      "op": "MLOAD",
      "path": "2"
    },
    "4808": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12801, 12802],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4810": {
      "branch": 106,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12784, 12802],
      "op": "SUB",
      "path": "2"
    },
    "4811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12780, 13101],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E6"
    },
    "4814": {
      "branch": 106,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12780, 13101],
      "op": "JUMPI",
      "path": "2"
    },
    "4815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x40"
    },
    "4817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "MLOAD",
      "path": "2"
    },
    "4818": { "op": "PUSH3", "value": "0x461BCD" },
    "4822": { "op": "PUSH1", "value": "0xE5" },
    "4824": { "op": "SHL" },
    "4825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "DUP2",
      "path": "2"
    },
    "4826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "MSTORE",
      "path": "2"
    },
    "4827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "ADD",
      "path": "2"
    },
    "4830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "4833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "SWAP1",
      "path": "2"
    },
    "4834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12826, 12886],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF1"
    },
    "4837": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [12826, 12886],
      "op": "JUMP",
      "path": "2"
    },
    "4838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12780, 13101],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13053, 13059],
      "op": "DUP1",
      "path": "2"
    },
    "4840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13047, 13060],
      "op": "MLOAD",
      "path": "2"
    },
    "4841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13038, 13044],
      "op": "DUP2",
      "path": "2"
    },
    "4842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13034, 13036],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13030, 13045],
      "op": "ADD",
      "path": "2"
    },
    "4845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13023, 13061],
      "op": "REVERT",
      "path": "2"
    },
    "4846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12542, 13115],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4847": { "op": "PUSH1", "value": "0x1" },
    "4849": { "op": "PUSH1", "value": "0x1" },
    "4851": { "op": "PUSH1", "value": "0xE0" },
    "4853": { "op": "SHL" },
    "4854": { "op": "SUB" },
    "4855": { "op": "NOT" },
    "4856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12667, 12718],
      "op": "AND",
      "path": "2",
      "statement": 71
    },
    "4857": { "op": "PUSH4", "value": "0xA85BD01" },
    "4862": { "op": "PUSH1", "value": "0xE1" },
    "4864": { "op": "SHL" },
    "4865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12667, 12718],
      "op": "EQ",
      "path": "2"
    },
    "4866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12667, 12718],
      "op": "SWAP1",
      "path": "2"
    },
    "4867": { "op": "POP" },
    "4868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12660, 12718],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3E"
    },
    "4871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12660, 12718],
      "op": "JUMP",
      "path": "2"
    },
    "4872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12507, 13167],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4873": { "op": "POP" },
    "4874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [13152, 13156],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x1"
    },
    "4876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "SWAP5",
      "path": "2"
    },
    "4877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "SWAP4",
      "path": "2"
    },
    "4878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "POP",
      "path": "2"
    },
    "4879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "POP",
      "path": "2"
    },
    "4880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "POP",
      "path": "2"
    },
    "4881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [12342, 13173],
      "op": "POP",
      "path": "2"
    },
    "4882": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [12342, 13173],
      "op": "JUMP",
      "path": "2"
    },
    "4883": {
      "fn": "Diffemon.safeMint",
      "offset": [1686, 1896],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4884": {
      "fn": "Diffemon.safeMint",
      "offset": [1734, 1741],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4886": {
      "fn": "Diffemon.safeMint",
      "offset": [1753, 1768],
      "op": "DUP1",
      "path": "12"
    },
    "4887": {
      "fn": "Diffemon.safeMint",
      "offset": [1771, 1796],
      "op": "PUSH2",
      "path": "12",
      "value": "0x131F"
    },
    "4890": {
      "fn": "Diffemon.safeMint",
      "offset": [1771, 1786],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4892": {
      "fn": "Counters.current",
      "offset": [918, 932],
      "op": "SLOAD",
      "path": "8",
      "statement": 73
    },
    "4893": {
      "fn": "Counters.current",
      "offset": [918, 932],
      "op": "SWAP1",
      "path": "8"
    },
    "4894": {
      "fn": "Counters.current",
      "offset": [827, 939],
      "op": "JUMP",
      "path": "8"
    },
    "4895": {
      "fn": "Diffemon.safeMint",
      "offset": [1771, 1796],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4896": {
      "fn": "Diffemon.safeMint",
      "offset": [1753, 1796],
      "op": "SWAP1",
      "path": "12"
    },
    "4897": {
      "fn": "Diffemon.safeMint",
      "offset": [1753, 1796],
      "op": "POP",
      "path": "12"
    },
    "4898": {
      "fn": "Diffemon.safeMint",
      "offset": [1806, 1833],
      "op": "PUSH2",
      "path": "12",
      "statement": 74,
      "value": "0x132F"
    },
    "4901": {
      "fn": "Diffemon.safeMint",
      "offset": [1806, 1821],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4903": {
      "fn": "Counters.increment",
      "offset": [1032, 1051],
      "op": "DUP1",
      "path": "8",
      "statement": 75
    },
    "4904": {
      "fn": "Counters.increment",
      "offset": [1032, 1051],
      "op": "SLOAD",
      "path": "8"
    },
    "4905": {
      "fn": "Counters.increment",
      "offset": [1050, 1051],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4907": {
      "fn": "Counters.increment",
      "offset": [1032, 1051],
      "op": "ADD",
      "path": "8"
    },
    "4908": {
      "fn": "Counters.increment",
      "offset": [1032, 1051],
      "op": "SWAP1",
      "path": "8"
    },
    "4909": {
      "fn": "Counters.increment",
      "offset": [1032, 1051],
      "op": "SSTORE",
      "path": "8"
    },
    "4910": {
      "fn": "Counters.increment",
      "offset": [945, 1068],
      "op": "JUMP",
      "path": "8"
    },
    "4911": {
      "fn": "Diffemon.safeMint",
      "offset": [1806, 1833],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4912": {
      "fn": "Diffemon.safeMint",
      "offset": [1843, 1865],
      "op": "PUSH2",
      "path": "12",
      "statement": 76,
      "value": "0x445"
    },
    "4915": {
      "fn": "Diffemon.safeMint",
      "offset": [1853, 1855],
      "op": "DUP4",
      "path": "12"
    },
    "4916": {
      "fn": "Diffemon.safeMint",
      "offset": [1857, 1864],
      "op": "DUP3",
      "path": "12"
    },
    "4917": {
      "fn": "Diffemon.safeMint",
      "offset": [1843, 1852],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D5"
    },
    "4920": {
      "fn": "Diffemon.safeMint",
      "jump": "i",
      "offset": [1843, 1865],
      "op": "JUMP",
      "path": "12"
    },
    "4921": {
      "fn": "Strings.toHexString",
      "offset": [1652, 2093],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4922": {
      "fn": "Strings.toHexString",
      "offset": [1727, 1740],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "4924": {
      "fn": "Strings.toHexString",
      "offset": [1752, 1771],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4926": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1794],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1348"
    },
    "4929": {
      "fn": "Strings.toHexString",
      "offset": [1788, 1794],
      "op": "DUP4",
      "path": "9"
    },
    "4930": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1785],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "4932": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1794],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CB0"
    },
    "4935": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1784, 1794],
      "op": "JUMP",
      "path": "9"
    },
    "4936": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1794],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4937": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1798],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1353"
    },
    "4940": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1798],
      "op": "SWAP1",
      "path": "9"
    },
    "4941": {
      "fn": "Strings.toHexString",
      "offset": [1797, 1798],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "4943": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1798],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE4"
    },
    "4946": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1784, 1798],
      "op": "JUMP",
      "path": "9"
    },
    "4947": {
      "fn": "Strings.toHexString",
      "offset": [1784, 1798],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4948": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4957": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP2",
      "path": "9"
    },
    "4958": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "GT",
      "path": "9"
    },
    "4959": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ISZERO",
      "path": "9"
    },
    "4960": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH2",
      "path": "9",
      "value": "0x136B"
    },
    "4963": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "JUMPI",
      "path": "9"
    },
    "4964": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH2",
      "path": "9",
      "value": "0x136B"
    },
    "4967": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1878"
    },
    "4970": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1774, 1799],
      "op": "JUMP",
      "path": "9"
    },
    "4971": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4972": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4974": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "MLOAD",
      "path": "9"
    },
    "4975": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "SWAP1",
      "path": "9"
    },
    "4976": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP1",
      "path": "9"
    },
    "4977": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP3",
      "path": "9"
    },
    "4978": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "MSTORE",
      "path": "9"
    },
    "4979": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP1",
      "path": "9"
    },
    "4980": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "4982": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ADD",
      "path": "9"
    },
    "4983": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "4985": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "NOT",
      "path": "9"
    },
    "4986": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "AND",
      "path": "9"
    },
    "4987": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4989": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ADD",
      "path": "9"
    },
    "4990": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP3",
      "path": "9"
    },
    "4991": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ADD",
      "path": "9"
    },
    "4992": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4994": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "MSTORE",
      "path": "9"
    },
    "4995": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP1",
      "path": "9"
    },
    "4996": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ISZERO",
      "path": "9"
    },
    "4997": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1395"
    },
    "5000": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "JUMPI",
      "path": "9"
    },
    "5001": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5003": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP3",
      "path": "9"
    },
    "5004": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ADD",
      "path": "9"
    },
    "5005": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP2",
      "path": "9"
    },
    "5006": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP1",
      "path": "9"
    },
    "5007": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "5008": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "DUP4",
      "path": "9"
    },
    "5009": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "5010": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "ADD",
      "path": "9"
    },
    "5011": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "SWAP1",
      "path": "9"
    },
    "5012": { "op": "POP" },
    "5013": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5014": {
      "fn": "Strings.toHexString",
      "offset": [1774, 1799],
      "op": "POP",
      "path": "9"
    },
    "5015": {
      "fn": "Strings.toHexString",
      "offset": [1752, 1799],
      "op": "SWAP1",
      "path": "9"
    },
    "5016": {
      "fn": "Strings.toHexString",
      "offset": [1752, 1799],
      "op": "POP",
      "path": "9"
    },
    "5017": { "op": "PUSH1", "value": "0x3" },
    "5019": { "op": "PUSH1", "value": "0xFC" },
    "5021": { "op": "SHL" },
    "5022": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1815],
      "op": "DUP2",
      "path": "9",
      "statement": 77
    },
    "5023": {
      "fn": "Strings.toHexString",
      "offset": [1816, 1817],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5025": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "DUP2",
      "path": "9"
    },
    "5026": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "MLOAD",
      "path": "9"
    },
    "5027": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "DUP2",
      "path": "9"
    },
    "5028": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "LT",
      "path": "9"
    },
    "5029": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B0"
    },
    "5032": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "JUMPI",
      "path": "9"
    },
    "5033": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13B0"
    },
    "5036": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9A"
    },
    "5039": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1809, 1818],
      "op": "JUMP",
      "path": "9"
    },
    "5040": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5041": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5043": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "ADD",
      "path": "9"
    },
    "5044": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1818],
      "op": "ADD",
      "path": "9"
    },
    "5045": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "SWAP1",
      "path": "9"
    },
    "5046": { "op": "PUSH1", "value": "0x1" },
    "5048": { "op": "PUSH1", "value": "0x1" },
    "5050": { "op": "PUSH1", "value": "0xF8" },
    "5052": { "op": "SHL" },
    "5053": { "op": "SUB" },
    "5054": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "NOT",
      "path": "9"
    },
    "5055": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "AND",
      "path": "9"
    },
    "5056": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "SWAP1",
      "path": "9"
    },
    "5057": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "DUP2",
      "path": "9"
    },
    "5058": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5060": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "BYTE",
      "path": "9"
    },
    "5061": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "SWAP1",
      "path": "9"
    },
    "5062": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "MSTORE8",
      "path": "9"
    },
    "5063": {
      "fn": "Strings.toHexString",
      "offset": [1809, 1824],
      "op": "POP",
      "path": "9"
    },
    "5064": { "op": "PUSH1", "value": "0xF" },
    "5066": { "op": "PUSH1", "value": "0xFB" },
    "5068": { "op": "SHL" },
    "5069": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1840],
      "op": "DUP2",
      "path": "9",
      "statement": 78
    },
    "5070": {
      "fn": "Strings.toHexString",
      "offset": [1841, 1842],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5072": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "DUP2",
      "path": "9"
    },
    "5073": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "MLOAD",
      "path": "9"
    },
    "5074": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "DUP2",
      "path": "9"
    },
    "5075": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "LT",
      "path": "9"
    },
    "5076": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13DF"
    },
    "5079": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "JUMPI",
      "path": "9"
    },
    "5080": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13DF"
    },
    "5083": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9A"
    },
    "5086": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1834, 1843],
      "op": "JUMP",
      "path": "9"
    },
    "5087": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5088": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5090": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "ADD",
      "path": "9"
    },
    "5091": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1843],
      "op": "ADD",
      "path": "9"
    },
    "5092": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "SWAP1",
      "path": "9"
    },
    "5093": { "op": "PUSH1", "value": "0x1" },
    "5095": { "op": "PUSH1", "value": "0x1" },
    "5097": { "op": "PUSH1", "value": "0xF8" },
    "5099": { "op": "SHL" },
    "5100": { "op": "SUB" },
    "5101": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "NOT",
      "path": "9"
    },
    "5102": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "AND",
      "path": "9"
    },
    "5103": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "SWAP1",
      "path": "9"
    },
    "5104": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "DUP2",
      "path": "9"
    },
    "5105": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5107": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "BYTE",
      "path": "9"
    },
    "5108": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "SWAP1",
      "path": "9"
    },
    "5109": {
      "fn": "Strings.toHexString",
      "offset": [1834, 1849],
      "op": "MSTORE8",
      "path": "9"
    },
    "5110": { "op": "POP" },
    "5111": {
      "fn": "Strings.toHexString",
      "offset": [1864, 1873],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5113": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1886],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1403"
    },
    "5116": {
      "fn": "Strings.toHexString",
      "offset": [1880, 1886],
      "op": "DUP5",
      "path": "9"
    },
    "5117": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1877],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "5119": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1886],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CB0"
    },
    "5122": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1876, 1886],
      "op": "JUMP",
      "path": "9"
    },
    "5123": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1886],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5124": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1890],
      "op": "PUSH2",
      "path": "9",
      "value": "0x140E"
    },
    "5127": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1890],
      "op": "SWAP1",
      "path": "9"
    },
    "5128": {
      "fn": "Strings.toHexString",
      "offset": [1889, 1890],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5130": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1890],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE4"
    },
    "5133": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1876, 1890],
      "op": "JUMP",
      "path": "9"
    },
    "5134": {
      "fn": "Strings.toHexString",
      "offset": [1876, 1890],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5135": {
      "fn": "Strings.toHexString",
      "offset": [1864, 1890],
      "op": "SWAP1",
      "path": "9"
    },
    "5136": {
      "fn": "Strings.toHexString",
      "offset": [1864, 1890],
      "op": "POP",
      "path": "9"
    },
    "5137": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5138": {
      "fn": "Strings.toHexString",
      "offset": [1896, 1897],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5140": {
      "fn": "Strings.toHexString",
      "offset": [1892, 1893],
      "op": "DUP2",
      "path": "9"
    },
    "5141": {
      "fn": "Strings.toHexString",
      "offset": [1892, 1897],
      "op": "GT",
      "path": "9"
    },
    "5142": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "ISZERO",
      "path": "9"
    },
    "5143": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1486"
    },
    "5146": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "JUMPI",
      "path": "9"
    },
    "5147": { "op": "PUSH16", "value": "0x181899199A1A9B1B9C1CB0B131B232B3" },
    "5164": { "op": "PUSH1", "value": "0x81" },
    "5166": { "op": "SHL" },
    "5167": {
      "fn": "Strings.toHexString",
      "offset": [1943, 1948],
      "op": "DUP6",
      "path": "9",
      "statement": 79
    },
    "5168": {
      "fn": "Strings.toHexString",
      "offset": [1951, 1954],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF"
    },
    "5170": {
      "fn": "Strings.toHexString",
      "offset": [1943, 1954],
      "op": "AND",
      "path": "9"
    },
    "5171": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "PUSH1",
      "path": "9",
      "value": "0x10"
    },
    "5173": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "DUP2",
      "path": "9"
    },
    "5174": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "LT",
      "path": "9"
    },
    "5175": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1442"
    },
    "5178": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "JUMPI",
      "path": "9"
    },
    "5179": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1442"
    },
    "5182": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9A"
    },
    "5185": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1930, 1955],
      "op": "JUMP",
      "path": "9"
    },
    "5186": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5187": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "BYTE",
      "path": "9"
    },
    "5188": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF8"
    },
    "5190": {
      "fn": "Strings.toHexString",
      "offset": [1930, 1955],
      "op": "SHL",
      "path": "9"
    },
    "5191": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1924],
      "op": "DUP3",
      "path": "9"
    },
    "5192": {
      "fn": "Strings.toHexString",
      "offset": [1925, 1926],
      "op": "DUP3",
      "path": "9"
    },
    "5193": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "DUP2",
      "path": "9"
    },
    "5194": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "MLOAD",
      "path": "9"
    },
    "5195": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "DUP2",
      "path": "9"
    },
    "5196": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "LT",
      "path": "9"
    },
    "5197": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1458"
    },
    "5200": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "JUMPI",
      "path": "9"
    },
    "5201": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1458"
    },
    "5204": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9A"
    },
    "5207": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1918, 1927],
      "op": "JUMP",
      "path": "9"
    },
    "5208": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5209": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5211": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "ADD",
      "path": "9"
    },
    "5212": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1927],
      "op": "ADD",
      "path": "9"
    },
    "5213": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "SWAP1",
      "path": "9"
    },
    "5214": { "op": "PUSH1", "value": "0x1" },
    "5216": { "op": "PUSH1", "value": "0x1" },
    "5218": { "op": "PUSH1", "value": "0xF8" },
    "5220": { "op": "SHL" },
    "5221": { "op": "SUB" },
    "5222": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "NOT",
      "path": "9"
    },
    "5223": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "AND",
      "path": "9"
    },
    "5224": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "SWAP1",
      "path": "9"
    },
    "5225": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "DUP2",
      "path": "9"
    },
    "5226": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5228": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "BYTE",
      "path": "9"
    },
    "5229": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "SWAP1",
      "path": "9"
    },
    "5230": {
      "fn": "Strings.toHexString",
      "offset": [1918, 1955],
      "op": "MSTORE8",
      "path": "9"
    },
    "5231": { "op": "POP" },
    "5232": {
      "fn": "Strings.toHexString",
      "offset": [1979, 1980],
      "op": "PUSH1",
      "path": "9",
      "statement": 80,
      "value": "0x4"
    },
    "5234": {
      "fn": "Strings.toHexString",
      "offset": [1969, 1980],
      "op": "SWAP5",
      "path": "9"
    },
    "5235": {
      "fn": "Strings.toHexString",
      "offset": [1969, 1980],
      "op": "SWAP1",
      "path": "9"
    },
    "5236": {
      "fn": "Strings.toHexString",
      "offset": [1969, 1980],
      "op": "SWAP5",
      "path": "9"
    },
    "5237": {
      "fn": "Strings.toHexString",
      "offset": [1969, 1980],
      "op": "SHR",
      "path": "9"
    },
    "5238": {
      "fn": "Strings.toHexString",
      "offset": [1969, 1980],
      "op": "SWAP4",
      "path": "9"
    },
    "5239": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "PUSH2",
      "path": "9",
      "statement": 81,
      "value": "0x147F"
    },
    "5242": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "DUP2",
      "path": "9"
    },
    "5243": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1D9E"
    },
    "5246": {
      "fn": "Strings.toHexString",
      "jump": "i",
      "offset": [1899, 1902],
      "op": "JUMP",
      "path": "9"
    },
    "5247": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5248": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "SWAP1",
      "path": "9"
    },
    "5249": {
      "fn": "Strings.toHexString",
      "offset": [1899, 1902],
      "op": "POP",
      "path": "9"
    },
    "5250": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1411"
    },
    "5253": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "JUMP",
      "path": "9"
    },
    "5254": {
      "fn": "Strings.toHexString",
      "offset": [1859, 1991],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5255": { "op": "POP" },
    "5256": {
      "fn": "Strings.toHexString",
      "offset": [2008, 2018],
      "op": "DUP4",
      "path": "9",
      "statement": 82
    },
    "5257": {
      "branch": 110,
      "fn": "Strings.toHexString",
      "offset": [2008, 2018],
      "op": "ISZERO",
      "path": "9"
    },
    "5258": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1186"
    },
    "5261": {
      "branch": 110,
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "JUMPI",
      "path": "9"
    },
    "5262": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5264": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "MLOAD",
      "path": "9"
    },
    "5265": { "op": "PUSH3", "value": "0x461BCD" },
    "5269": { "op": "PUSH1", "value": "0xE5" },
    "5271": { "op": "SHL" },
    "5272": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "DUP2",
      "path": "9"
    },
    "5273": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "MSTORE",
      "path": "9"
    },
    "5274": { "op": "PUSH1", "value": "0x20" },
    "5276": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5278": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "DUP3",
      "path": "9"
    },
    "5279": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "ADD",
      "path": "9"
    },
    "5280": { "op": "DUP2" },
    "5281": { "op": "SWAP1" },
    "5282": { "op": "MSTORE" },
    "5283": { "op": "PUSH1", "value": "0x24" },
    "5285": { "op": "DUP3" },
    "5286": { "op": "ADD" },
    "5287": { "op": "MSTORE" },
    "5288": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "5321": { "op": "PUSH1", "value": "0x44" },
    "5323": { "op": "DUP3" },
    "5324": { "op": "ADD" },
    "5325": { "op": "MSTORE" },
    "5326": { "op": "PUSH1", "value": "0x64" },
    "5328": { "op": "ADD" },
    "5329": {
      "fn": "Strings.toHexString",
      "offset": [2000, 2055],
      "op": "PUSH2",
      "path": "9",
      "value": "0x578"
    },
    "5332": { "op": "JUMP" },
    "5333": {
      "fn": "ERC721._safeMint",
      "offset": [7908, 8016],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5334": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "PUSH2",
      "path": "2",
      "statement": 83,
      "value": "0x7D9"
    },
    "5337": {
      "fn": "ERC721._safeMint",
      "offset": [7993, 7995],
      "op": "DUP3",
      "path": "2"
    },
    "5338": {
      "fn": "ERC721._safeMint",
      "offset": [7997, 8004],
      "op": "DUP3",
      "path": "2"
    },
    "5339": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5341": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "MLOAD",
      "path": "2"
    },
    "5342": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "DUP1",
      "path": "2"
    },
    "5343": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5345": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "ADD",
      "path": "2"
    },
    "5346": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5348": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "MSTORE",
      "path": "2"
    },
    "5349": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "DUP1",
      "path": "2"
    },
    "5350": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5352": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "DUP2",
      "path": "2"
    },
    "5353": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "MSTORE",
      "path": "2"
    },
    "5354": {
      "fn": "ERC721._safeMint",
      "offset": [7983, 8009],
      "op": "POP",
      "path": "2"
    },
    "5355": {
      "fn": "ERC721._safeMint",
      "offset": [8361, 8379],
      "op": "PUSH2",
      "path": "2",
      "statement": 84,
      "value": "0x14F4"
    },
    "5358": {
      "fn": "ERC721._safeMint",
      "offset": [8367, 8369],
      "op": "DUP4",
      "path": "2"
    },
    "5359": {
      "fn": "ERC721._safeMint",
      "offset": [8371, 8378],
      "op": "DUP4",
      "path": "2"
    },
    "5360": {
      "fn": "ERC721._safeMint",
      "offset": [8361, 8366],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151D"
    },
    "5363": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [8361, 8379],
      "op": "JUMP",
      "path": "2"
    },
    "5364": {
      "fn": "ERC721._safeMint",
      "offset": [8361, 8379],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5365": {
      "fn": "ERC721._safeMint",
      "offset": [8410, 8463],
      "op": "PUSH2",
      "path": "2",
      "statement": 85,
      "value": "0x1501"
    },
    "5368": {
      "fn": "ERC721._safeMint",
      "offset": [8441, 8442],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5370": {
      "fn": "ERC721._safeMint",
      "offset": [8445, 8447],
      "op": "DUP5",
      "path": "2"
    },
    "5371": {
      "fn": "ERC721._safeMint",
      "offset": [8449, 8456],
      "op": "DUP5",
      "path": "2"
    },
    "5372": {
      "fn": "ERC721._safeMint",
      "offset": [8458, 8462],
      "op": "DUP5",
      "path": "2"
    },
    "5373": {
      "fn": "ERC721._safeMint",
      "offset": [8410, 8432],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1212"
    },
    "5376": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [8410, 8463],
      "op": "JUMP",
      "path": "2"
    },
    "5377": {
      "branch": 107,
      "fn": "ERC721._safeMint",
      "offset": [8410, 8463],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5378": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "PUSH2",
      "path": "2",
      "value": "0x619"
    },
    "5381": {
      "branch": 107,
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "JUMPI",
      "path": "2"
    },
    "5382": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5384": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "MLOAD",
      "path": "2"
    },
    "5385": { "op": "PUSH3", "value": "0x461BCD" },
    "5389": { "op": "PUSH1", "value": "0xE5" },
    "5391": { "op": "SHL" },
    "5392": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "DUP2",
      "path": "2"
    },
    "5393": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "MSTORE",
      "path": "2"
    },
    "5394": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5396": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "ADD",
      "path": "2"
    },
    "5397": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "5400": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "SWAP1",
      "path": "2"
    },
    "5401": {
      "fn": "ERC721._safeMint",
      "offset": [8389, 8539],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF1"
    },
    "5404": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [8389, 8539],
      "op": "JUMP",
      "path": "2"
    },
    "5405": {
      "fn": "ERC721._mint",
      "offset": [8868, 9295],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5406": { "op": "PUSH1", "value": "0x1" },
    "5408": { "op": "PUSH1", "value": "0x1" },
    "5410": { "op": "PUSH1", "value": "0xA0" },
    "5412": { "op": "SHL" },
    "5413": { "op": "SUB" },
    "5414": {
      "fn": "ERC721._mint",
      "offset": [8947, 8963],
      "op": "DUP3",
      "path": "2",
      "statement": 86
    },
    "5415": {
      "branch": 108,
      "fn": "ERC721._mint",
      "offset": [8947, 8963],
      "op": "AND",
      "path": "2"
    },
    "5416": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1573"
    },
    "5419": {
      "branch": 108,
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "JUMPI",
      "path": "2"
    },
    "5420": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5422": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "MLOAD",
      "path": "2"
    },
    "5423": { "op": "PUSH3", "value": "0x461BCD" },
    "5427": { "op": "PUSH1", "value": "0xE5" },
    "5429": { "op": "SHL" },
    "5430": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "DUP2",
      "path": "2"
    },
    "5431": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "MSTORE",
      "path": "2"
    },
    "5432": { "op": "PUSH1", "value": "0x20" },
    "5434": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5436": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "DUP3",
      "path": "2"
    },
    "5437": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "ADD",
      "path": "2"
    },
    "5438": { "op": "DUP2" },
    "5439": { "op": "SWAP1" },
    "5440": { "op": "MSTORE" },
    "5441": { "op": "PUSH1", "value": "0x24" },
    "5443": { "op": "DUP3" },
    "5444": { "op": "ADD" },
    "5445": { "op": "MSTORE" },
    "5446": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "5479": { "op": "PUSH1", "value": "0x44" },
    "5481": { "op": "DUP3" },
    "5482": { "op": "ADD" },
    "5483": { "op": "MSTORE" },
    "5484": { "op": "PUSH1", "value": "0x64" },
    "5486": { "op": "ADD" },
    "5487": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "5490": { "op": "JUMP" },
    "5491": {
      "fn": "ERC721._mint",
      "offset": [8939, 9000],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5492": {
      "fn": "ERC721._exists",
      "offset": [7099, 7103],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5494": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "DUP2",
      "path": "2"
    },
    "5495": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "DUP2",
      "path": "2"
    },
    "5496": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "MSTORE",
      "path": "2"
    },
    "5497": {
      "fn": "ERC721._exists",
      "offset": [7122, 7129],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5499": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5501": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "MSTORE",
      "path": "2"
    },
    "5502": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5504": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "SWAP1",
      "path": "2"
    },
    "5505": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "KECCAK256",
      "path": "2"
    },
    "5506": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "SLOAD",
      "path": "2"
    },
    "5507": { "op": "PUSH1", "value": "0x1" },
    "5509": { "op": "PUSH1", "value": "0x1" },
    "5511": { "op": "PUSH1", "value": "0xA0" },
    "5513": { "op": "SHL" },
    "5514": { "op": "SUB" },
    "5515": {
      "fn": "ERC721._exists",
      "offset": [7122, 7138],
      "op": "AND",
      "path": "2"
    },
    "5516": {
      "fn": "ERC721._exists",
      "offset": [7122, 7152],
      "op": "ISZERO",
      "path": "2"
    },
    "5517": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "PUSH2",
      "path": "2",
      "statement": 87,
      "value": "0x15D8"
    },
    "5520": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "JUMPI",
      "path": "2"
    },
    "5521": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5523": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "MLOAD",
      "path": "2"
    },
    "5524": { "op": "PUSH3", "value": "0x461BCD" },
    "5528": { "op": "PUSH1", "value": "0xE5" },
    "5530": { "op": "SHL" },
    "5531": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "DUP2",
      "path": "2"
    },
    "5532": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "MSTORE",
      "path": "2"
    },
    "5533": { "op": "PUSH1", "value": "0x20" },
    "5535": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5537": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "DUP3",
      "path": "2"
    },
    "5538": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "ADD",
      "path": "2"
    },
    "5539": { "op": "MSTORE" },
    "5540": { "op": "PUSH1", "value": "0x1C" },
    "5542": { "op": "PUSH1", "value": "0x24" },
    "5544": { "op": "DUP3" },
    "5545": { "op": "ADD" },
    "5546": { "op": "MSTORE" },
    "5547": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "5580": { "op": "PUSH1", "value": "0x44" },
    "5582": { "op": "DUP3" },
    "5583": { "op": "ADD" },
    "5584": { "op": "MSTORE" },
    "5585": { "op": "PUSH1", "value": "0x64" },
    "5587": { "op": "ADD" },
    "5588": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "5591": { "op": "JUMP" },
    "5592": {
      "fn": "ERC721._mint",
      "offset": [9010, 9068],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5593": { "op": "PUSH1", "value": "0x1" },
    "5595": { "op": "PUSH1", "value": "0x1" },
    "5597": { "op": "PUSH1", "value": "0xA0" },
    "5599": { "op": "SHL" },
    "5600": { "op": "SUB" },
    "5601": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "DUP3",
      "path": "2",
      "statement": 88
    },
    "5602": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "AND",
      "path": "2"
    },
    "5603": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5605": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "SWAP1",
      "path": "2"
    },
    "5606": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "DUP2",
      "path": "2"
    },
    "5607": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "MSTORE",
      "path": "2"
    },
    "5608": {
      "fn": "ERC721._mint",
      "offset": [9135, 9144],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5610": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5612": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "MSTORE",
      "path": "2"
    },
    "5613": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5615": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "DUP2",
      "path": "2"
    },
    "5616": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "KECCAK256",
      "path": "2"
    },
    "5617": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "DUP1",
      "path": "2"
    },
    "5618": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "SLOAD",
      "path": "2"
    },
    "5619": {
      "fn": "ERC721._mint",
      "offset": [9152, 9153],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5621": {
      "fn": "ERC721._mint",
      "offset": [9152, 9153],
      "op": "SWAP3",
      "path": "2"
    },
    "5622": {
      "fn": "ERC721._mint",
      "offset": [9135, 9148],
      "op": "SWAP1",
      "path": "2"
    },
    "5623": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1601"
    },
    "5626": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "SWAP1",
      "path": "2"
    },
    "5627": {
      "fn": "ERC721._mint",
      "offset": [9152, 9153],
      "op": "DUP5",
      "path": "2"
    },
    "5628": {
      "fn": "ERC721._mint",
      "offset": [9152, 9153],
      "op": "SWAP1",
      "path": "2"
    },
    "5629": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE4"
    },
    "5632": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [9135, 9153],
      "op": "JUMP",
      "path": "2"
    },
    "5633": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5634": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "SWAP1",
      "path": "2"
    },
    "5635": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "SWAP2",
      "path": "2"
    },
    "5636": {
      "fn": "ERC721._mint",
      "offset": [9135, 9153],
      "op": "SSTORE",
      "path": "2"
    },
    "5637": { "op": "POP" },
    "5638": { "op": "POP" },
    "5639": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x0"
    },
    "5641": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP2",
      "path": "2"
    },
    "5642": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP2",
      "path": "2"
    },
    "5643": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "MSTORE",
      "path": "2"
    },
    "5644": {
      "fn": "ERC721._mint",
      "offset": [9163, 9170],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5646": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5648": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "MSTORE",
      "path": "2"
    },
    "5649": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5651": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP1",
      "path": "2"
    },
    "5652": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP3",
      "path": "2"
    },
    "5653": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "KECCAK256",
      "path": "2"
    },
    "5654": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "DUP1",
      "path": "2"
    },
    "5655": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "SLOAD",
      "path": "2"
    },
    "5656": { "op": "PUSH1", "value": "0x1" },
    "5658": { "op": "PUSH1", "value": "0x1" },
    "5660": { "op": "PUSH1", "value": "0xA0" },
    "5662": { "op": "SHL" },
    "5663": { "op": "SUB" },
    "5664": { "op": "NOT" },
    "5665": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "AND",
      "path": "2"
    },
    "5666": { "op": "PUSH1", "value": "0x1" },
    "5668": { "op": "PUSH1", "value": "0x1" },
    "5670": { "op": "PUSH1", "value": "0xA0" },
    "5672": { "op": "SHL" },
    "5673": { "op": "SUB" },
    "5674": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "DUP7",
      "path": "2"
    },
    "5675": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "AND",
      "path": "2"
    },
    "5676": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "SWAP1",
      "path": "2"
    },
    "5677": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "DUP2",
      "path": "2"
    },
    "5678": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "OR",
      "path": "2"
    },
    "5679": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "SWAP1",
      "path": "2"
    },
    "5680": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "SWAP2",
      "path": "2"
    },
    "5681": {
      "fn": "ERC721._mint",
      "offset": [9163, 9184],
      "op": "SSTORE",
      "path": "2"
    },
    "5682": {
      "fn": "ERC721._mint",
      "offset": [9200, 9233],
      "op": "SWAP1",
      "path": "2",
      "statement": 90
    },
    "5683": {
      "fn": "ERC721._mint",
      "offset": [9200, 9233],
      "op": "MLOAD",
      "path": "2"
    },
    "5684": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP4",
      "path": "2"
    },
    "5685": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "SWAP3",
      "path": "2"
    },
    "5686": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "SWAP1",
      "path": "2"
    },
    "5687": {
      "fn": "ERC721._mint",
      "offset": [9200, 9233],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5720": {
      "fn": "ERC721._mint",
      "offset": [9200, 9233],
      "op": "SWAP1",
      "path": "2"
    },
    "5721": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "DUP3",
      "path": "2"
    },
    "5722": {
      "fn": "ERC721._mint",
      "offset": [9163, 9179],
      "op": "SWAP1",
      "path": "2"
    },
    "5723": {
      "fn": "ERC721._mint",
      "offset": [9200, 9233],
      "op": "LOG4",
      "path": "2"
    },
    "5724": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "POP",
      "path": "0"
    },
    "5725": {
      "fn": "AccessControl.renounceRole",
      "offset": [5925, 6139],
      "op": "POP",
      "path": "0"
    },
    "5726": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [5925, 6139],
      "op": "JUMP",
      "path": "0"
    },
    "5727": { "op": "JUMPDEST" },
    "5728": { "op": "DUP3" },
    "5729": { "op": "DUP1" },
    "5730": { "op": "SLOAD" },
    "5731": { "op": "PUSH2", "value": "0x166B" },
    "5734": { "op": "SWAP1" },
    "5735": { "op": "PUSH2", "value": "0x1A2F" },
    "5738": { "jump": "i", "op": "JUMP" },
    "5739": { "op": "JUMPDEST" },
    "5740": { "op": "SWAP1" },
    "5741": { "op": "PUSH1", "value": "0x0" },
    "5743": { "op": "MSTORE" },
    "5744": { "op": "PUSH1", "value": "0x20" },
    "5746": { "op": "PUSH1", "value": "0x0" },
    "5748": { "op": "KECCAK256" },
    "5749": { "op": "SWAP1" },
    "5750": { "op": "PUSH1", "value": "0x1F" },
    "5752": { "op": "ADD" },
    "5753": { "op": "PUSH1", "value": "0x20" },
    "5755": { "op": "SWAP1" },
    "5756": { "op": "DIV" },
    "5757": { "op": "DUP2" },
    "5758": { "op": "ADD" },
    "5759": { "op": "SWAP3" },
    "5760": { "op": "DUP3" },
    "5761": { "op": "PUSH2", "value": "0x168D" },
    "5764": { "op": "JUMPI" },
    "5765": { "op": "PUSH1", "value": "0x0" },
    "5767": { "op": "DUP6" },
    "5768": { "op": "SSTORE" },
    "5769": { "op": "PUSH2", "value": "0x16D3" },
    "5772": { "op": "JUMP" },
    "5773": { "op": "JUMPDEST" },
    "5774": { "op": "DUP3" },
    "5775": { "op": "PUSH1", "value": "0x1F" },
    "5777": { "op": "LT" },
    "5778": { "op": "PUSH2", "value": "0x16A6" },
    "5781": { "op": "JUMPI" },
    "5782": { "op": "DUP1" },
    "5783": { "op": "MLOAD" },
    "5784": { "op": "PUSH1", "value": "0xFF" },
    "5786": { "op": "NOT" },
    "5787": { "op": "AND" },
    "5788": { "op": "DUP4" },
    "5789": { "op": "DUP1" },
    "5790": { "op": "ADD" },
    "5791": { "op": "OR" },
    "5792": { "op": "DUP6" },
    "5793": { "op": "SSTORE" },
    "5794": { "op": "PUSH2", "value": "0x16D3" },
    "5797": { "op": "JUMP" },
    "5798": { "op": "JUMPDEST" },
    "5799": { "op": "DUP3" },
    "5800": { "op": "DUP1" },
    "5801": { "op": "ADD" },
    "5802": { "op": "PUSH1", "value": "0x1" },
    "5804": { "op": "ADD" },
    "5805": { "op": "DUP6" },
    "5806": { "op": "SSTORE" },
    "5807": { "op": "DUP3" },
    "5808": { "op": "ISZERO" },
    "5809": { "op": "PUSH2", "value": "0x16D3" },
    "5812": { "op": "JUMPI" },
    "5813": { "op": "SWAP2" },
    "5814": { "op": "DUP3" },
    "5815": { "op": "ADD" },
    "5816": { "op": "JUMPDEST" },
    "5817": { "op": "DUP3" },
    "5818": { "op": "DUP2" },
    "5819": { "op": "GT" },
    "5820": { "op": "ISZERO" },
    "5821": { "op": "PUSH2", "value": "0x16D3" },
    "5824": { "op": "JUMPI" },
    "5825": { "op": "DUP3" },
    "5826": { "op": "MLOAD" },
    "5827": { "op": "DUP3" },
    "5828": { "op": "SSTORE" },
    "5829": { "op": "SWAP2" },
    "5830": { "op": "PUSH1", "value": "0x20" },
    "5832": { "op": "ADD" },
    "5833": { "op": "SWAP2" },
    "5834": { "op": "SWAP1" },
    "5835": { "op": "PUSH1", "value": "0x1" },
    "5837": { "op": "ADD" },
    "5838": { "op": "SWAP1" },
    "5839": { "op": "PUSH2", "value": "0x16B8" },
    "5842": { "op": "JUMP" },
    "5843": { "op": "JUMPDEST" },
    "5844": { "op": "POP" },
    "5845": { "op": "PUSH2", "value": "0x16DF" },
    "5848": { "op": "SWAP3" },
    "5849": { "op": "SWAP2" },
    "5850": { "op": "POP" },
    "5851": { "op": "PUSH2", "value": "0x16E3" },
    "5854": { "jump": "i", "op": "JUMP" },
    "5855": { "op": "JUMPDEST" },
    "5856": { "op": "POP" },
    "5857": { "op": "SWAP1" },
    "5858": { "jump": "o", "op": "JUMP" },
    "5859": { "op": "JUMPDEST" },
    "5860": { "op": "JUMPDEST" },
    "5861": { "op": "DUP1" },
    "5862": { "op": "DUP3" },
    "5863": { "op": "GT" },
    "5864": { "op": "ISZERO" },
    "5865": { "op": "PUSH2", "value": "0x16DF" },
    "5868": { "op": "JUMPI" },
    "5869": { "op": "PUSH1", "value": "0x0" },
    "5871": { "op": "DUP2" },
    "5872": { "op": "SSTORE" },
    "5873": { "op": "PUSH1", "value": "0x1" },
    "5875": { "op": "ADD" },
    "5876": { "op": "PUSH2", "value": "0x16E4" },
    "5879": { "op": "JUMP" },
    "5880": { "op": "JUMPDEST" },
    "5881": { "op": "PUSH1", "value": "0x1" },
    "5883": { "op": "PUSH1", "value": "0x1" },
    "5885": { "op": "PUSH1", "value": "0xE0" },
    "5887": { "op": "SHL" },
    "5888": { "op": "SUB" },
    "5889": { "op": "NOT" },
    "5890": { "op": "DUP2" },
    "5891": { "op": "AND" },
    "5892": { "op": "DUP2" },
    "5893": { "op": "EQ" },
    "5894": { "op": "PUSH2", "value": "0xB16" },
    "5897": { "op": "JUMPI" },
    "5898": { "op": "PUSH1", "value": "0x0" },
    "5900": { "op": "DUP1" },
    "5901": { "op": "REVERT" },
    "5902": { "op": "JUMPDEST" },
    "5903": { "op": "PUSH1", "value": "0x0" },
    "5905": { "op": "PUSH1", "value": "0x20" },
    "5907": { "op": "DUP3" },
    "5908": { "op": "DUP5" },
    "5909": { "op": "SUB" },
    "5910": { "op": "SLT" },
    "5911": { "op": "ISZERO" },
    "5912": { "op": "PUSH2", "value": "0x1720" },
    "5915": { "op": "JUMPI" },
    "5916": { "op": "PUSH1", "value": "0x0" },
    "5918": { "op": "DUP1" },
    "5919": { "op": "REVERT" },
    "5920": { "op": "JUMPDEST" },
    "5921": { "op": "DUP2" },
    "5922": { "op": "CALLDATALOAD" },
    "5923": { "op": "PUSH2", "value": "0x1186" },
    "5926": { "op": "DUP2" },
    "5927": { "op": "PUSH2", "value": "0x16F8" },
    "5930": { "jump": "i", "op": "JUMP" },
    "5931": { "op": "JUMPDEST" },
    "5932": { "op": "PUSH1", "value": "0x0" },
    "5934": { "op": "JUMPDEST" },
    "5935": { "op": "DUP4" },
    "5936": { "op": "DUP2" },
    "5937": { "op": "LT" },
    "5938": { "op": "ISZERO" },
    "5939": { "op": "PUSH2", "value": "0x1746" },
    "5942": { "op": "JUMPI" },
    "5943": { "op": "DUP2" },
    "5944": { "op": "DUP2" },
    "5945": { "op": "ADD" },
    "5946": { "op": "MLOAD" },
    "5947": { "op": "DUP4" },
    "5948": { "op": "DUP3" },
    "5949": { "op": "ADD" },
    "5950": { "op": "MSTORE" },
    "5951": { "op": "PUSH1", "value": "0x20" },
    "5953": { "op": "ADD" },
    "5954": { "op": "PUSH2", "value": "0x172E" },
    "5957": { "op": "JUMP" },
    "5958": { "op": "JUMPDEST" },
    "5959": { "op": "DUP4" },
    "5960": { "op": "DUP2" },
    "5961": { "op": "GT" },
    "5962": { "op": "ISZERO" },
    "5963": { "op": "PUSH2", "value": "0x9D5" },
    "5966": { "op": "JUMPI" },
    "5967": { "op": "POP" },
    "5968": { "op": "POP" },
    "5969": { "op": "PUSH1", "value": "0x0" },
    "5971": { "op": "SWAP2" },
    "5972": { "op": "ADD" },
    "5973": { "op": "MSTORE" },
    "5974": { "jump": "o", "op": "JUMP" },
    "5975": { "op": "JUMPDEST" },
    "5976": { "op": "PUSH1", "value": "0x0" },
    "5978": { "op": "DUP2" },
    "5979": { "op": "MLOAD" },
    "5980": { "op": "DUP1" },
    "5981": { "op": "DUP5" },
    "5982": { "op": "MSTORE" },
    "5983": { "op": "PUSH2", "value": "0x176F" },
    "5986": { "op": "DUP2" },
    "5987": { "op": "PUSH1", "value": "0x20" },
    "5989": { "op": "DUP7" },
    "5990": { "op": "ADD" },
    "5991": { "op": "PUSH1", "value": "0x20" },
    "5993": { "op": "DUP7" },
    "5994": { "op": "ADD" },
    "5995": { "op": "PUSH2", "value": "0x172B" },
    "5998": { "jump": "i", "op": "JUMP" },
    "5999": { "op": "JUMPDEST" },
    "6000": { "op": "PUSH1", "value": "0x1F" },
    "6002": { "op": "ADD" },
    "6003": { "op": "PUSH1", "value": "0x1F" },
    "6005": { "op": "NOT" },
    "6006": { "op": "AND" },
    "6007": { "op": "SWAP3" },
    "6008": { "op": "SWAP1" },
    "6009": { "op": "SWAP3" },
    "6010": { "op": "ADD" },
    "6011": { "op": "PUSH1", "value": "0x20" },
    "6013": { "op": "ADD" },
    "6014": { "op": "SWAP3" },
    "6015": { "op": "SWAP2" },
    "6016": { "op": "POP" },
    "6017": { "op": "POP" },
    "6018": { "jump": "o", "op": "JUMP" },
    "6019": { "op": "JUMPDEST" },
    "6020": { "op": "PUSH1", "value": "0x20" },
    "6022": { "op": "DUP2" },
    "6023": { "op": "MSTORE" },
    "6024": { "op": "PUSH1", "value": "0x0" },
    "6026": { "op": "PUSH2", "value": "0x1186" },
    "6029": { "op": "PUSH1", "value": "0x20" },
    "6031": { "op": "DUP4" },
    "6032": { "op": "ADD" },
    "6033": { "op": "DUP5" },
    "6034": { "op": "PUSH2", "value": "0x1757" },
    "6037": { "jump": "i", "op": "JUMP" },
    "6038": { "op": "JUMPDEST" },
    "6039": { "op": "PUSH1", "value": "0x0" },
    "6041": { "op": "PUSH1", "value": "0x20" },
    "6043": { "op": "DUP3" },
    "6044": { "op": "DUP5" },
    "6045": { "op": "SUB" },
    "6046": { "op": "SLT" },
    "6047": { "op": "ISZERO" },
    "6048": { "op": "PUSH2", "value": "0x17A8" },
    "6051": { "op": "JUMPI" },
    "6052": { "op": "PUSH1", "value": "0x0" },
    "6054": { "op": "DUP1" },
    "6055": { "op": "REVERT" },
    "6056": { "op": "JUMPDEST" },
    "6057": { "op": "POP" },
    "6058": { "op": "CALLDATALOAD" },
    "6059": { "op": "SWAP2" },
    "6060": { "op": "SWAP1" },
    "6061": { "op": "POP" },
    "6062": { "jump": "o", "op": "JUMP" },
    "6063": { "op": "JUMPDEST" },
    "6064": { "op": "DUP1" },
    "6065": { "op": "CALLDATALOAD" },
    "6066": { "op": "PUSH1", "value": "0x1" },
    "6068": { "op": "PUSH1", "value": "0x1" },
    "6070": { "op": "PUSH1", "value": "0xA0" },
    "6072": { "op": "SHL" },
    "6073": { "op": "SUB" },
    "6074": { "op": "DUP2" },
    "6075": { "op": "AND" },
    "6076": { "op": "DUP2" },
    "6077": { "op": "EQ" },
    "6078": { "op": "PUSH2", "value": "0x17C6" },
    "6081": { "op": "JUMPI" },
    "6082": { "op": "PUSH1", "value": "0x0" },
    "6084": { "op": "DUP1" },
    "6085": { "op": "REVERT" },
    "6086": { "op": "JUMPDEST" },
    "6087": { "op": "SWAP2" },
    "6088": { "op": "SWAP1" },
    "6089": { "op": "POP" },
    "6090": { "jump": "o", "op": "JUMP" },
    "6091": { "op": "JUMPDEST" },
    "6092": { "op": "PUSH1", "value": "0x0" },
    "6094": { "op": "DUP1" },
    "6095": { "op": "PUSH1", "value": "0x40" },
    "6097": { "op": "DUP4" },
    "6098": { "op": "DUP6" },
    "6099": { "op": "SUB" },
    "6100": { "op": "SLT" },
    "6101": { "op": "ISZERO" },
    "6102": { "op": "PUSH2", "value": "0x17DE" },
    "6105": { "op": "JUMPI" },
    "6106": { "op": "PUSH1", "value": "0x0" },
    "6108": { "op": "DUP1" },
    "6109": { "op": "REVERT" },
    "6110": { "op": "JUMPDEST" },
    "6111": { "op": "PUSH2", "value": "0x17E7" },
    "6114": { "op": "DUP4" },
    "6115": { "op": "PUSH2", "value": "0x17AF" },
    "6118": { "jump": "i", "op": "JUMP" },
    "6119": { "op": "JUMPDEST" },
    "6120": { "op": "SWAP5" },
    "6121": { "op": "PUSH1", "value": "0x20" },
    "6123": { "op": "SWAP4" },
    "6124": { "op": "SWAP1" },
    "6125": { "op": "SWAP4" },
    "6126": { "op": "ADD" },
    "6127": { "op": "CALLDATALOAD" },
    "6128": { "op": "SWAP4" },
    "6129": { "op": "POP" },
    "6130": { "op": "POP" },
    "6131": { "op": "POP" },
    "6132": { "jump": "o", "op": "JUMP" },
    "6133": { "op": "JUMPDEST" },
    "6134": { "op": "PUSH1", "value": "0x0" },
    "6136": { "op": "DUP1" },
    "6137": { "op": "PUSH1", "value": "0x0" },
    "6139": { "op": "PUSH1", "value": "0x60" },
    "6141": { "op": "DUP5" },
    "6142": { "op": "DUP7" },
    "6143": { "op": "SUB" },
    "6144": { "op": "SLT" },
    "6145": { "op": "ISZERO" },
    "6146": { "op": "PUSH2", "value": "0x180A" },
    "6149": { "op": "JUMPI" },
    "6150": { "op": "PUSH1", "value": "0x0" },
    "6152": { "op": "DUP1" },
    "6153": { "op": "REVERT" },
    "6154": { "op": "JUMPDEST" },
    "6155": { "op": "PUSH2", "value": "0x1813" },
    "6158": { "op": "DUP5" },
    "6159": { "op": "PUSH2", "value": "0x17AF" },
    "6162": { "jump": "i", "op": "JUMP" },
    "6163": { "op": "JUMPDEST" },
    "6164": { "op": "SWAP3" },
    "6165": { "op": "POP" },
    "6166": { "op": "PUSH2", "value": "0x1821" },
    "6169": { "op": "PUSH1", "value": "0x20" },
    "6171": { "op": "DUP6" },
    "6172": { "op": "ADD" },
    "6173": { "op": "PUSH2", "value": "0x17AF" },
    "6176": { "jump": "i", "op": "JUMP" },
    "6177": { "op": "JUMPDEST" },
    "6178": { "op": "SWAP2" },
    "6179": { "op": "POP" },
    "6180": { "op": "PUSH1", "value": "0x40" },
    "6182": { "op": "DUP5" },
    "6183": { "op": "ADD" },
    "6184": { "op": "CALLDATALOAD" },
    "6185": { "op": "SWAP1" },
    "6186": { "op": "POP" },
    "6187": { "op": "SWAP3" },
    "6188": { "op": "POP" },
    "6189": { "op": "SWAP3" },
    "6190": { "op": "POP" },
    "6191": { "op": "SWAP3" },
    "6192": { "jump": "o", "op": "JUMP" },
    "6193": { "op": "JUMPDEST" },
    "6194": { "op": "PUSH1", "value": "0x0" },
    "6196": { "op": "DUP1" },
    "6197": { "op": "PUSH1", "value": "0x40" },
    "6199": { "op": "DUP4" },
    "6200": { "op": "DUP6" },
    "6201": { "op": "SUB" },
    "6202": { "op": "SLT" },
    "6203": { "op": "ISZERO" },
    "6204": { "op": "PUSH2", "value": "0x1844" },
    "6207": { "op": "JUMPI" },
    "6208": { "op": "PUSH1", "value": "0x0" },
    "6210": { "op": "DUP1" },
    "6211": { "op": "REVERT" },
    "6212": { "op": "JUMPDEST" },
    "6213": { "op": "DUP3" },
    "6214": { "op": "CALLDATALOAD" },
    "6215": { "op": "SWAP2" },
    "6216": { "op": "POP" },
    "6217": { "op": "PUSH2", "value": "0x1854" },
    "6220": { "op": "PUSH1", "value": "0x20" },
    "6222": { "op": "DUP5" },
    "6223": { "op": "ADD" },
    "6224": { "op": "PUSH2", "value": "0x17AF" },
    "6227": { "jump": "i", "op": "JUMP" },
    "6228": { "op": "JUMPDEST" },
    "6229": { "op": "SWAP1" },
    "6230": { "op": "POP" },
    "6231": { "op": "SWAP3" },
    "6232": { "op": "POP" },
    "6233": { "op": "SWAP3" },
    "6234": { "op": "SWAP1" },
    "6235": { "op": "POP" },
    "6236": { "jump": "o", "op": "JUMP" },
    "6237": { "op": "JUMPDEST" },
    "6238": { "op": "PUSH1", "value": "0x0" },
    "6240": { "op": "PUSH1", "value": "0x20" },
    "6242": { "op": "DUP3" },
    "6243": { "op": "DUP5" },
    "6244": { "op": "SUB" },
    "6245": { "op": "SLT" },
    "6246": { "op": "ISZERO" },
    "6247": { "op": "PUSH2", "value": "0x186F" },
    "6250": { "op": "JUMPI" },
    "6251": { "op": "PUSH1", "value": "0x0" },
    "6253": { "op": "DUP1" },
    "6254": { "op": "REVERT" },
    "6255": { "op": "JUMPDEST" },
    "6256": { "op": "PUSH2", "value": "0x1186" },
    "6259": { "op": "DUP3" },
    "6260": { "op": "PUSH2", "value": "0x17AF" },
    "6263": { "jump": "i", "op": "JUMP" },
    "6264": { "op": "JUMPDEST" },
    "6265": { "op": "PUSH4", "value": "0x4E487B71" },
    "6270": { "op": "PUSH1", "value": "0xE0" },
    "6272": { "op": "SHL" },
    "6273": { "op": "PUSH1", "value": "0x0" },
    "6275": { "op": "MSTORE" },
    "6276": { "op": "PUSH1", "value": "0x41" },
    "6278": { "op": "PUSH1", "value": "0x4" },
    "6280": { "op": "MSTORE" },
    "6281": { "op": "PUSH1", "value": "0x24" },
    "6283": { "op": "PUSH1", "value": "0x0" },
    "6285": { "op": "REVERT" },
    "6286": { "op": "JUMPDEST" },
    "6287": { "op": "PUSH1", "value": "0x0" },
    "6289": { "op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF" },
    "6298": { "op": "DUP1" },
    "6299": { "op": "DUP5" },
    "6300": { "op": "GT" },
    "6301": { "op": "ISZERO" },
    "6302": { "op": "PUSH2", "value": "0x18A9" },
    "6305": { "op": "JUMPI" },
    "6306": { "op": "PUSH2", "value": "0x18A9" },
    "6309": { "op": "PUSH2", "value": "0x1878" },
    "6312": { "jump": "i", "op": "JUMP" },
    "6313": { "op": "JUMPDEST" },
    "6314": { "op": "PUSH1", "value": "0x40" },
    "6316": { "op": "MLOAD" },
    "6317": { "op": "PUSH1", "value": "0x1F" },
    "6319": { "op": "DUP6" },
    "6320": { "op": "ADD" },
    "6321": { "op": "PUSH1", "value": "0x1F" },
    "6323": { "op": "NOT" },
    "6324": { "op": "SWAP1" },
    "6325": { "op": "DUP2" },
    "6326": { "op": "AND" },
    "6327": { "op": "PUSH1", "value": "0x3F" },
    "6329": { "op": "ADD" },
    "6330": { "op": "AND" },
    "6331": { "op": "DUP2" },
    "6332": { "op": "ADD" },
    "6333": { "op": "SWAP1" },
    "6334": { "op": "DUP3" },
    "6335": { "op": "DUP3" },
    "6336": { "op": "GT" },
    "6337": { "op": "DUP2" },
    "6338": { "op": "DUP4" },
    "6339": { "op": "LT" },
    "6340": { "op": "OR" },
    "6341": { "op": "ISZERO" },
    "6342": { "op": "PUSH2", "value": "0x18D1" },
    "6345": { "op": "JUMPI" },
    "6346": { "op": "PUSH2", "value": "0x18D1" },
    "6349": { "op": "PUSH2", "value": "0x1878" },
    "6352": { "jump": "i", "op": "JUMP" },
    "6353": { "op": "JUMPDEST" },
    "6354": { "op": "DUP2" },
    "6355": { "op": "PUSH1", "value": "0x40" },
    "6357": { "op": "MSTORE" },
    "6358": { "op": "DUP1" },
    "6359": { "op": "SWAP4" },
    "6360": { "op": "POP" },
    "6361": { "op": "DUP6" },
    "6362": { "op": "DUP2" },
    "6363": { "op": "MSTORE" },
    "6364": { "op": "DUP7" },
    "6365": { "op": "DUP7" },
    "6366": { "op": "DUP7" },
    "6367": { "op": "ADD" },
    "6368": { "op": "GT" },
    "6369": { "op": "ISZERO" },
    "6370": { "op": "PUSH2", "value": "0x18EA" },
    "6373": { "op": "JUMPI" },
    "6374": { "op": "PUSH1", "value": "0x0" },
    "6376": { "op": "DUP1" },
    "6377": { "op": "REVERT" },
    "6378": { "op": "JUMPDEST" },
    "6379": { "op": "DUP6" },
    "6380": { "op": "DUP6" },
    "6381": { "op": "PUSH1", "value": "0x20" },
    "6383": { "op": "DUP4" },
    "6384": { "op": "ADD" },
    "6385": { "op": "CALLDATACOPY" },
    "6386": { "op": "PUSH1", "value": "0x0" },
    "6388": { "op": "PUSH1", "value": "0x20" },
    "6390": { "op": "DUP8" },
    "6391": { "op": "DUP4" },
    "6392": { "op": "ADD" },
    "6393": { "op": "ADD" },
    "6394": { "op": "MSTORE" },
    "6395": { "op": "POP" },
    "6396": { "op": "POP" },
    "6397": { "op": "POP" },
    "6398": { "op": "SWAP4" },
    "6399": { "op": "SWAP3" },
    "6400": { "op": "POP" },
    "6401": { "op": "POP" },
    "6402": { "op": "POP" },
    "6403": { "jump": "o", "op": "JUMP" },
    "6404": { "op": "JUMPDEST" },
    "6405": { "op": "PUSH1", "value": "0x0" },
    "6407": { "op": "PUSH1", "value": "0x20" },
    "6409": { "op": "DUP3" },
    "6410": { "op": "DUP5" },
    "6411": { "op": "SUB" },
    "6412": { "op": "SLT" },
    "6413": { "op": "ISZERO" },
    "6414": { "op": "PUSH2", "value": "0x1916" },
    "6417": { "op": "JUMPI" },
    "6418": { "op": "PUSH1", "value": "0x0" },
    "6420": { "op": "DUP1" },
    "6421": { "op": "REVERT" },
    "6422": { "op": "JUMPDEST" },
    "6423": { "op": "DUP2" },
    "6424": { "op": "CALLDATALOAD" },
    "6425": { "op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF" },
    "6434": { "op": "DUP2" },
    "6435": { "op": "GT" },
    "6436": { "op": "ISZERO" },
    "6437": { "op": "PUSH2", "value": "0x192D" },
    "6440": { "op": "JUMPI" },
    "6441": { "op": "PUSH1", "value": "0x0" },
    "6443": { "op": "DUP1" },
    "6444": { "op": "REVERT" },
    "6445": { "op": "JUMPDEST" },
    "6446": { "op": "DUP3" },
    "6447": { "op": "ADD" },
    "6448": { "op": "PUSH1", "value": "0x1F" },
    "6450": { "op": "DUP2" },
    "6451": { "op": "ADD" },
    "6452": { "op": "DUP5" },
    "6453": { "op": "SGT" },
    "6454": { "op": "PUSH2", "value": "0x193E" },
    "6457": { "op": "JUMPI" },
    "6458": { "op": "PUSH1", "value": "0x0" },
    "6460": { "op": "DUP1" },
    "6461": { "op": "REVERT" },
    "6462": { "op": "JUMPDEST" },
    "6463": { "op": "PUSH2", "value": "0xC3E" },
    "6466": { "op": "DUP5" },
    "6467": { "op": "DUP3" },
    "6468": { "op": "CALLDATALOAD" },
    "6469": { "op": "PUSH1", "value": "0x20" },
    "6471": { "op": "DUP5" },
    "6472": { "op": "ADD" },
    "6473": { "op": "PUSH2", "value": "0x188E" },
    "6476": { "jump": "i", "op": "JUMP" },
    "6477": { "op": "JUMPDEST" },
    "6478": { "op": "PUSH1", "value": "0x0" },
    "6480": { "op": "DUP1" },
    "6481": { "op": "PUSH1", "value": "0x40" },
    "6483": { "op": "DUP4" },
    "6484": { "op": "DUP6" },
    "6485": { "op": "SUB" },
    "6486": { "op": "SLT" },
    "6487": { "op": "ISZERO" },
    "6488": { "op": "PUSH2", "value": "0x1960" },
    "6491": { "op": "JUMPI" },
    "6492": { "op": "PUSH1", "value": "0x0" },
    "6494": { "op": "DUP1" },
    "6495": { "op": "REVERT" },
    "6496": { "op": "JUMPDEST" },
    "6497": { "op": "PUSH2", "value": "0x1969" },
    "6500": { "op": "DUP4" },
    "6501": { "op": "PUSH2", "value": "0x17AF" },
    "6504": { "jump": "i", "op": "JUMP" },
    "6505": { "op": "JUMPDEST" },
    "6506": { "op": "SWAP2" },
    "6507": { "op": "POP" },
    "6508": { "op": "PUSH1", "value": "0x20" },
    "6510": { "op": "DUP4" },
    "6511": { "op": "ADD" },
    "6512": { "op": "CALLDATALOAD" },
    "6513": { "op": "DUP1" },
    "6514": { "op": "ISZERO" },
    "6515": { "op": "ISZERO" },
    "6516": { "op": "DUP2" },
    "6517": { "op": "EQ" },
    "6518": { "op": "PUSH2", "value": "0x197E" },
    "6521": { "op": "JUMPI" },
    "6522": { "op": "PUSH1", "value": "0x0" },
    "6524": { "op": "DUP1" },
    "6525": { "op": "REVERT" },
    "6526": { "op": "JUMPDEST" },
    "6527": { "op": "DUP1" },
    "6528": { "op": "SWAP2" },
    "6529": { "op": "POP" },
    "6530": { "op": "POP" },
    "6531": { "op": "SWAP3" },
    "6532": { "op": "POP" },
    "6533": { "op": "SWAP3" },
    "6534": { "op": "SWAP1" },
    "6535": { "op": "POP" },
    "6536": { "jump": "o", "op": "JUMP" },
    "6537": { "op": "JUMPDEST" },
    "6538": { "op": "PUSH1", "value": "0x0" },
    "6540": { "op": "DUP1" },
    "6541": { "op": "PUSH1", "value": "0x0" },
    "6543": { "op": "DUP1" },
    "6544": { "op": "PUSH1", "value": "0x80" },
    "6546": { "op": "DUP6" },
    "6547": { "op": "DUP8" },
    "6548": { "op": "SUB" },
    "6549": { "op": "SLT" },
    "6550": { "op": "ISZERO" },
    "6551": { "op": "PUSH2", "value": "0x199F" },
    "6554": { "op": "JUMPI" },
    "6555": { "op": "PUSH1", "value": "0x0" },
    "6557": { "op": "DUP1" },
    "6558": { "op": "REVERT" },
    "6559": { "op": "JUMPDEST" },
    "6560": { "op": "PUSH2", "value": "0x19A8" },
    "6563": { "op": "DUP6" },
    "6564": { "op": "PUSH2", "value": "0x17AF" },
    "6567": { "jump": "i", "op": "JUMP" },
    "6568": { "op": "JUMPDEST" },
    "6569": { "op": "SWAP4" },
    "6570": { "op": "POP" },
    "6571": { "op": "PUSH2", "value": "0x19B6" },
    "6574": { "op": "PUSH1", "value": "0x20" },
    "6576": { "op": "DUP7" },
    "6577": { "op": "ADD" },
    "6578": { "op": "PUSH2", "value": "0x17AF" },
    "6581": { "jump": "i", "op": "JUMP" },
    "6582": { "op": "JUMPDEST" },
    "6583": { "op": "SWAP3" },
    "6584": { "op": "POP" },
    "6585": { "op": "PUSH1", "value": "0x40" },
    "6587": { "op": "DUP6" },
    "6588": { "op": "ADD" },
    "6589": { "op": "CALLDATALOAD" },
    "6590": { "op": "SWAP2" },
    "6591": { "op": "POP" },
    "6592": { "op": "PUSH1", "value": "0x60" },
    "6594": { "op": "DUP6" },
    "6595": { "op": "ADD" },
    "6596": { "op": "CALLDATALOAD" },
    "6597": { "op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF" },
    "6606": { "op": "DUP2" },
    "6607": { "op": "GT" },
    "6608": { "op": "ISZERO" },
    "6609": { "op": "PUSH2", "value": "0x19D9" },
    "6612": { "op": "JUMPI" },
    "6613": { "op": "PUSH1", "value": "0x0" },
    "6615": { "op": "DUP1" },
    "6616": { "op": "REVERT" },
    "6617": { "op": "JUMPDEST" },
    "6618": { "op": "DUP6" },
    "6619": { "op": "ADD" },
    "6620": { "op": "PUSH1", "value": "0x1F" },
    "6622": { "op": "DUP2" },
    "6623": { "op": "ADD" },
    "6624": { "op": "DUP8" },
    "6625": { "op": "SGT" },
    "6626": { "op": "PUSH2", "value": "0x19EA" },
    "6629": { "op": "JUMPI" },
    "6630": { "op": "PUSH1", "value": "0x0" },
    "6632": { "op": "DUP1" },
    "6633": { "op": "REVERT" },
    "6634": { "op": "JUMPDEST" },
    "6635": { "op": "PUSH2", "value": "0x19F9" },
    "6638": { "op": "DUP8" },
    "6639": { "op": "DUP3" },
    "6640": { "op": "CALLDATALOAD" },
    "6641": { "op": "PUSH1", "value": "0x20" },
    "6643": { "op": "DUP5" },
    "6644": { "op": "ADD" },
    "6645": { "op": "PUSH2", "value": "0x188E" },
    "6648": { "jump": "i", "op": "JUMP" },
    "6649": { "op": "JUMPDEST" },
    "6650": { "op": "SWAP2" },
    "6651": { "op": "POP" },
    "6652": { "op": "POP" },
    "6653": { "op": "SWAP3" },
    "6654": { "op": "SWAP6" },
    "6655": { "op": "SWAP2" },
    "6656": { "op": "SWAP5" },
    "6657": { "op": "POP" },
    "6658": { "op": "SWAP3" },
    "6659": { "op": "POP" },
    "6660": { "jump": "o", "op": "JUMP" },
    "6661": { "op": "JUMPDEST" },
    "6662": { "op": "PUSH1", "value": "0x0" },
    "6664": { "op": "DUP1" },
    "6665": { "op": "PUSH1", "value": "0x40" },
    "6667": { "op": "DUP4" },
    "6668": { "op": "DUP6" },
    "6669": { "op": "SUB" },
    "6670": { "op": "SLT" },
    "6671": { "op": "ISZERO" },
    "6672": { "op": "PUSH2", "value": "0x1A18" },
    "6675": { "op": "JUMPI" },
    "6676": { "op": "PUSH1", "value": "0x0" },
    "6678": { "op": "DUP1" },
    "6679": { "op": "REVERT" },
    "6680": { "op": "JUMPDEST" },
    "6681": { "op": "PUSH2", "value": "0x1A21" },
    "6684": { "op": "DUP4" },
    "6685": { "op": "PUSH2", "value": "0x17AF" },
    "6688": { "jump": "i", "op": "JUMP" },
    "6689": { "op": "JUMPDEST" },
    "6690": { "op": "SWAP2" },
    "6691": { "op": "POP" },
    "6692": { "op": "PUSH2", "value": "0x1854" },
    "6695": { "op": "PUSH1", "value": "0x20" },
    "6697": { "op": "DUP5" },
    "6698": { "op": "ADD" },
    "6699": { "op": "PUSH2", "value": "0x17AF" },
    "6702": { "jump": "i", "op": "JUMP" },
    "6703": { "op": "JUMPDEST" },
    "6704": { "op": "PUSH1", "value": "0x1" },
    "6706": { "op": "DUP2" },
    "6707": { "op": "DUP2" },
    "6708": { "op": "SHR" },
    "6709": { "op": "SWAP1" },
    "6710": { "op": "DUP3" },
    "6711": { "op": "AND" },
    "6712": { "op": "DUP1" },
    "6713": { "op": "PUSH2", "value": "0x1A43" },
    "6716": { "op": "JUMPI" },
    "6717": { "op": "PUSH1", "value": "0x7F" },
    "6719": { "op": "DUP3" },
    "6720": { "op": "AND" },
    "6721": { "op": "SWAP2" },
    "6722": { "op": "POP" },
    "6723": { "op": "JUMPDEST" },
    "6724": { "op": "PUSH1", "value": "0x20" },
    "6726": { "op": "DUP3" },
    "6727": { "op": "LT" },
    "6728": { "op": "DUP2" },
    "6729": { "op": "SUB" },
    "6730": { "op": "PUSH2", "value": "0x1A63" },
    "6733": { "op": "JUMPI" },
    "6734": { "op": "PUSH4", "value": "0x4E487B71" },
    "6739": { "op": "PUSH1", "value": "0xE0" },
    "6741": { "op": "SHL" },
    "6742": { "op": "PUSH1", "value": "0x0" },
    "6744": { "op": "MSTORE" },
    "6745": { "op": "PUSH1", "value": "0x22" },
    "6747": { "op": "PUSH1", "value": "0x4" },
    "6749": { "op": "MSTORE" },
    "6750": { "op": "PUSH1", "value": "0x24" },
    "6752": { "op": "PUSH1", "value": "0x0" },
    "6754": { "op": "REVERT" },
    "6755": { "op": "JUMPDEST" },
    "6756": { "op": "POP" },
    "6757": { "op": "SWAP2" },
    "6758": { "op": "SWAP1" },
    "6759": { "op": "POP" },
    "6760": { "jump": "o", "op": "JUMP" },
    "6761": { "op": "JUMPDEST" },
    "6762": { "op": "PUSH4", "value": "0x4E487B71" },
    "6767": { "op": "PUSH1", "value": "0xE0" },
    "6769": { "op": "SHL" },
    "6770": { "op": "PUSH1", "value": "0x0" },
    "6772": { "op": "MSTORE" },
    "6773": { "op": "PUSH1", "value": "0x11" },
    "6775": { "op": "PUSH1", "value": "0x4" },
    "6777": { "op": "MSTORE" },
    "6778": { "op": "PUSH1", "value": "0x24" },
    "6780": { "op": "PUSH1", "value": "0x0" },
    "6782": { "op": "REVERT" },
    "6783": { "op": "JUMPDEST" },
    "6784": { "op": "PUSH1", "value": "0x0" },
    "6786": { "op": "DUP3" },
    "6787": { "op": "DUP3" },
    "6788": { "op": "LT" },
    "6789": { "op": "ISZERO" },
    "6790": { "op": "PUSH2", "value": "0x1A91" },
    "6793": { "op": "JUMPI" },
    "6794": { "op": "PUSH2", "value": "0x1A91" },
    "6797": { "op": "PUSH2", "value": "0x1A69" },
    "6800": { "jump": "i", "op": "JUMP" },
    "6801": { "op": "JUMPDEST" },
    "6802": { "op": "POP" },
    "6803": { "op": "SUB" },
    "6804": { "op": "SWAP1" },
    "6805": { "jump": "o", "op": "JUMP" },
    "6806": { "op": "JUMPDEST" },
    "6807": { "op": "PUSH1", "value": "0x20" },
    "6809": { "op": "DUP1" },
    "6810": { "op": "DUP3" },
    "6811": { "op": "MSTORE" },
    "6812": { "op": "PUSH1", "value": "0x2E" },
    "6814": { "op": "SWAP1" },
    "6815": { "op": "DUP3" },
    "6816": { "op": "ADD" },
    "6817": { "op": "MSTORE" },
    "6818": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "6851": { "op": "PUSH1", "value": "0x40" },
    "6853": { "op": "DUP3" },
    "6854": { "op": "ADD" },
    "6855": { "op": "MSTORE" },
    "6856": { "op": "PUSH14", "value": "0x1C881B9BDC88185C1C1C9BDD9959" },
    "6871": { "op": "PUSH1", "value": "0x92" },
    "6873": { "op": "SHL" },
    "6874": { "op": "PUSH1", "value": "0x60" },
    "6876": { "op": "DUP3" },
    "6877": { "op": "ADD" },
    "6878": { "op": "MSTORE" },
    "6879": { "op": "PUSH1", "value": "0x80" },
    "6881": { "op": "ADD" },
    "6882": { "op": "SWAP1" },
    "6883": { "jump": "o", "op": "JUMP" },
    "6884": { "op": "JUMPDEST" },
    "6885": { "op": "PUSH1", "value": "0x0" },
    "6887": { "op": "DUP3" },
    "6888": { "op": "NOT" },
    "6889": { "op": "DUP3" },
    "6890": { "op": "GT" },
    "6891": { "op": "ISZERO" },
    "6892": { "op": "PUSH2", "value": "0x1AF7" },
    "6895": { "op": "JUMPI" },
    "6896": { "op": "PUSH2", "value": "0x1AF7" },
    "6899": { "op": "PUSH2", "value": "0x1A69" },
    "6902": { "jump": "i", "op": "JUMP" },
    "6903": { "op": "JUMPDEST" },
    "6904": { "op": "POP" },
    "6905": { "op": "ADD" },
    "6906": { "op": "SWAP1" },
    "6907": { "jump": "o", "op": "JUMP" },
    "6908": { "op": "JUMPDEST" },
    "6909": { "op": "PUSH1", "value": "0x0" },
    "6911": { "op": "DUP2" },
    "6912": { "op": "MLOAD" },
    "6913": { "op": "PUSH2", "value": "0x1B0E" },
    "6916": { "op": "DUP2" },
    "6917": { "op": "DUP6" },
    "6918": { "op": "PUSH1", "value": "0x20" },
    "6920": { "op": "DUP7" },
    "6921": { "op": "ADD" },
    "6922": { "op": "PUSH2", "value": "0x172B" },
    "6925": { "jump": "i", "op": "JUMP" },
    "6926": { "op": "JUMPDEST" },
    "6927": { "op": "SWAP3" },
    "6928": { "op": "SWAP1" },
    "6929": { "op": "SWAP3" },
    "6930": { "op": "ADD" },
    "6931": { "op": "SWAP3" },
    "6932": { "op": "SWAP2" },
    "6933": { "op": "POP" },
    "6934": { "op": "POP" },
    "6935": { "jump": "o", "op": "JUMP" },
    "6936": { "op": "JUMPDEST" },
    "6937": { "op": "PUSH1", "value": "0x0" },
    "6939": { "op": "DUP1" },
    "6940": { "op": "DUP5" },
    "6941": { "op": "SLOAD" },
    "6942": { "op": "DUP2" },
    "6943": { "op": "PUSH1", "value": "0x1" },
    "6945": { "op": "DUP3" },
    "6946": { "op": "DUP2" },
    "6947": { "op": "SHR" },
    "6948": { "op": "SWAP2" },
    "6949": { "op": "POP" },
    "6950": { "op": "DUP1" },
    "6951": { "op": "DUP4" },
    "6952": { "op": "AND" },
    "6953": { "op": "DUP1" },
    "6954": { "op": "PUSH2", "value": "0x1B34" },
    "6957": { "op": "JUMPI" },
    "6958": { "op": "PUSH1", "value": "0x7F" },
    "6960": { "op": "DUP4" },
    "6961": { "op": "AND" },
    "6962": { "op": "SWAP3" },
    "6963": { "op": "POP" },
    "6964": { "op": "JUMPDEST" },
    "6965": { "op": "PUSH1", "value": "0x20" },
    "6967": { "op": "DUP1" },
    "6968": { "op": "DUP5" },
    "6969": { "op": "LT" },
    "6970": { "op": "DUP3" },
    "6971": { "op": "SUB" },
    "6972": { "op": "PUSH2", "value": "0x1B53" },
    "6975": { "op": "JUMPI" },
    "6976": { "op": "PUSH4", "value": "0x4E487B71" },
    "6981": { "op": "PUSH1", "value": "0xE0" },
    "6983": { "op": "SHL" },
    "6984": { "op": "DUP7" },
    "6985": { "op": "MSTORE" },
    "6986": { "op": "PUSH1", "value": "0x22" },
    "6988": { "op": "PUSH1", "value": "0x4" },
    "6990": { "op": "MSTORE" },
    "6991": { "op": "PUSH1", "value": "0x24" },
    "6993": { "op": "DUP7" },
    "6994": { "op": "REVERT" },
    "6995": { "op": "JUMPDEST" },
    "6996": { "op": "DUP2" },
    "6997": { "op": "DUP1" },
    "6998": { "op": "ISZERO" },
    "6999": { "op": "PUSH2", "value": "0x1B67" },
    "7002": { "op": "JUMPI" },
    "7003": { "op": "PUSH1", "value": "0x1" },
    "7005": { "op": "DUP2" },
    "7006": { "op": "EQ" },
    "7007": { "op": "PUSH2", "value": "0x1B78" },
    "7010": { "op": "JUMPI" },
    "7011": { "op": "PUSH2", "value": "0x1BA5" },
    "7014": { "op": "JUMP" },
    "7015": { "op": "JUMPDEST" },
    "7016": { "op": "PUSH1", "value": "0xFF" },
    "7018": { "op": "NOT" },
    "7019": { "op": "DUP7" },
    "7020": { "op": "AND" },
    "7021": { "op": "DUP10" },
    "7022": { "op": "MSTORE" },
    "7023": { "op": "DUP5" },
    "7024": { "op": "DUP10" },
    "7025": { "op": "ADD" },
    "7026": { "op": "SWAP7" },
    "7027": { "op": "POP" },
    "7028": { "op": "PUSH2", "value": "0x1BA5" },
    "7031": { "op": "JUMP" },
    "7032": { "op": "JUMPDEST" },
    "7033": { "op": "PUSH1", "value": "0x0" },
    "7035": { "op": "DUP12" },
    "7036": { "op": "DUP2" },
    "7037": { "op": "MSTORE" },
    "7038": { "op": "PUSH1", "value": "0x20" },
    "7040": { "op": "SWAP1" },
    "7041": { "op": "KECCAK256" },
    "7042": { "op": "PUSH1", "value": "0x0" },
    "7044": { "op": "JUMPDEST" },
    "7045": { "op": "DUP7" },
    "7046": { "op": "DUP2" },
    "7047": { "op": "LT" },
    "7048": { "op": "ISZERO" },
    "7049": { "op": "PUSH2", "value": "0x1B9D" },
    "7052": { "op": "JUMPI" },
    "7053": { "op": "DUP2" },
    "7054": { "op": "SLOAD" },
    "7055": { "op": "DUP12" },
    "7056": { "op": "DUP3" },
    "7057": { "op": "ADD" },
    "7058": { "op": "MSTORE" },
    "7059": { "op": "SWAP1" },
    "7060": { "op": "DUP6" },
    "7061": { "op": "ADD" },
    "7062": { "op": "SWAP1" },
    "7063": { "op": "DUP4" },
    "7064": { "op": "ADD" },
    "7065": { "op": "PUSH2", "value": "0x1B84" },
    "7068": { "op": "JUMP" },
    "7069": { "op": "JUMPDEST" },
    "7070": { "op": "POP" },
    "7071": { "op": "POP" },
    "7072": { "op": "DUP5" },
    "7073": { "op": "DUP10" },
    "7074": { "op": "ADD" },
    "7075": { "op": "SWAP7" },
    "7076": { "op": "POP" },
    "7077": { "op": "JUMPDEST" },
    "7078": { "op": "POP" },
    "7079": { "op": "POP" },
    "7080": { "op": "POP" },
    "7081": { "op": "POP" },
    "7082": { "op": "POP" },
    "7083": { "op": "POP" },
    "7084": { "op": "PUSH2", "value": "0x1BC9" },
    "7087": { "op": "PUSH2", "value": "0x1BB8" },
    "7090": { "op": "DUP3" },
    "7091": { "op": "DUP7" },
    "7092": { "op": "PUSH2", "value": "0x1AFC" },
    "7095": { "jump": "i", "op": "JUMP" },
    "7096": { "op": "JUMPDEST" },
    "7097": { "op": "PUSH5", "value": "0x173539B7B7" },
    "7103": { "op": "PUSH1", "value": "0xD9" },
    "7105": { "op": "SHL" },
    "7106": { "op": "DUP2" },
    "7107": { "op": "MSTORE" },
    "7108": { "op": "PUSH1", "value": "0x5" },
    "7110": { "op": "ADD" },
    "7111": { "op": "SWAP1" },
    "7112": { "op": "JUMP" },
    "7113": { "op": "JUMPDEST" },
    "7114": { "op": "SWAP6" },
    "7115": { "op": "SWAP5" },
    "7116": { "op": "POP" },
    "7117": { "op": "POP" },
    "7118": { "op": "POP" },
    "7119": { "op": "POP" },
    "7120": { "op": "POP" },
    "7121": { "jump": "o", "op": "JUMP" },
    "7122": { "op": "JUMPDEST" },
    "7123": { "op": "PUSH1", "value": "0x0" },
    "7125": { "op": "PUSH1", "value": "0xFF" },
    "7127": { "op": "DUP3" },
    "7128": { "op": "AND" },
    "7129": { "op": "PUSH1", "value": "0xFF" },
    "7131": { "op": "DUP2" },
    "7132": { "op": "SUB" },
    "7133": { "op": "PUSH2", "value": "0x1BE8" },
    "7136": { "op": "JUMPI" },
    "7137": { "op": "PUSH2", "value": "0x1BE8" },
    "7140": { "op": "PUSH2", "value": "0x1A69" },
    "7143": { "jump": "i", "op": "JUMP" },
    "7144": { "op": "JUMPDEST" },
    "7145": { "op": "PUSH1", "value": "0x1" },
    "7147": { "op": "ADD" },
    "7148": { "op": "SWAP3" },
    "7149": { "op": "SWAP2" },
    "7150": { "op": "POP" },
    "7151": { "op": "POP" },
    "7152": { "jump": "o", "op": "JUMP" },
    "7153": { "op": "JUMPDEST" },
    "7154": { "op": "PUSH1", "value": "0x20" },
    "7156": { "op": "DUP1" },
    "7157": { "op": "DUP3" },
    "7158": { "op": "MSTORE" },
    "7159": { "op": "PUSH1", "value": "0x32" },
    "7161": { "op": "SWAP1" },
    "7162": { "op": "DUP3" },
    "7163": { "op": "ADD" },
    "7164": { "op": "MSTORE" },
    "7165": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "7198": { "op": "PUSH1", "value": "0x40" },
    "7200": { "op": "DUP3" },
    "7201": { "op": "ADD" },
    "7202": { "op": "MSTORE" },
    "7203": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "7222": { "op": "PUSH1", "value": "0x71" },
    "7224": { "op": "SHL" },
    "7225": { "op": "PUSH1", "value": "0x60" },
    "7227": { "op": "DUP3" },
    "7228": { "op": "ADD" },
    "7229": { "op": "MSTORE" },
    "7230": { "op": "PUSH1", "value": "0x80" },
    "7232": { "op": "ADD" },
    "7233": { "op": "SWAP1" },
    "7234": { "jump": "o", "op": "JUMP" },
    "7235": { "op": "JUMPDEST" },
    "7236": { "op": "PUSH1", "value": "0x0" },
    "7238": { "op": "PUSH1", "value": "0x1" },
    "7240": { "op": "DUP3" },
    "7241": { "op": "ADD" },
    "7242": { "op": "PUSH2", "value": "0x1C55" },
    "7245": { "op": "JUMPI" },
    "7246": { "op": "PUSH2", "value": "0x1C55" },
    "7249": { "op": "PUSH2", "value": "0x1A69" },
    "7252": { "jump": "i", "op": "JUMP" },
    "7253": { "op": "JUMPDEST" },
    "7254": { "op": "POP" },
    "7255": { "op": "PUSH1", "value": "0x1" },
    "7257": { "op": "ADD" },
    "7258": { "op": "SWAP1" },
    "7259": { "jump": "o", "op": "JUMP" },
    "7260": { "op": "JUMPDEST" },
    "7261": { "op": "PUSH4", "value": "0x4E487B71" },
    "7266": { "op": "PUSH1", "value": "0xE0" },
    "7268": { "op": "SHL" },
    "7269": { "op": "PUSH1", "value": "0x0" },
    "7271": { "op": "MSTORE" },
    "7272": { "op": "PUSH1", "value": "0x12" },
    "7274": { "op": "PUSH1", "value": "0x4" },
    "7276": { "op": "MSTORE" },
    "7277": { "op": "PUSH1", "value": "0x24" },
    "7279": { "op": "PUSH1", "value": "0x0" },
    "7281": { "op": "REVERT" },
    "7282": { "op": "JUMPDEST" },
    "7283": { "op": "PUSH1", "value": "0x0" },
    "7285": { "op": "DUP3" },
    "7286": { "op": "PUSH2", "value": "0x1C81" },
    "7289": { "op": "JUMPI" },
    "7290": { "op": "PUSH2", "value": "0x1C81" },
    "7293": { "op": "PUSH2", "value": "0x1C5C" },
    "7296": { "jump": "i", "op": "JUMP" },
    "7297": { "op": "JUMPDEST" },
    "7298": { "op": "POP" },
    "7299": { "op": "DIV" },
    "7300": { "op": "SWAP1" },
    "7301": { "jump": "o", "op": "JUMP" },
    "7302": { "op": "JUMPDEST" },
    "7303": { "op": "PUSH1", "value": "0x0" },
    "7305": { "op": "DUP3" },
    "7306": { "op": "PUSH2", "value": "0x1C95" },
    "7309": { "op": "JUMPI" },
    "7310": { "op": "PUSH2", "value": "0x1C95" },
    "7313": { "op": "PUSH2", "value": "0x1C5C" },
    "7316": { "jump": "i", "op": "JUMP" },
    "7317": { "op": "JUMPDEST" },
    "7318": { "op": "POP" },
    "7319": { "op": "MOD" },
    "7320": { "op": "SWAP1" },
    "7321": { "jump": "o", "op": "JUMP" },
    "7322": { "op": "JUMPDEST" },
    "7323": { "op": "PUSH4", "value": "0x4E487B71" },
    "7328": { "op": "PUSH1", "value": "0xE0" },
    "7330": { "op": "SHL" },
    "7331": { "op": "PUSH1", "value": "0x0" },
    "7333": { "op": "MSTORE" },
    "7334": { "op": "PUSH1", "value": "0x32" },
    "7336": { "op": "PUSH1", "value": "0x4" },
    "7338": { "op": "MSTORE" },
    "7339": { "op": "PUSH1", "value": "0x24" },
    "7341": { "op": "PUSH1", "value": "0x0" },
    "7343": { "op": "REVERT" },
    "7344": { "op": "JUMPDEST" },
    "7345": { "op": "PUSH1", "value": "0x0" },
    "7347": { "op": "DUP2" },
    "7348": { "op": "PUSH1", "value": "0x0" },
    "7350": { "op": "NOT" },
    "7351": { "op": "DIV" },
    "7352": { "op": "DUP4" },
    "7353": { "op": "GT" },
    "7354": { "op": "DUP3" },
    "7355": { "op": "ISZERO" },
    "7356": { "op": "ISZERO" },
    "7357": { "op": "AND" },
    "7358": { "op": "ISZERO" },
    "7359": { "op": "PUSH2", "value": "0x1CCA" },
    "7362": { "op": "JUMPI" },
    "7363": { "op": "PUSH2", "value": "0x1CCA" },
    "7366": { "op": "PUSH2", "value": "0x1A69" },
    "7369": { "jump": "i", "op": "JUMP" },
    "7370": { "op": "JUMPDEST" },
    "7371": { "op": "POP" },
    "7372": { "op": "MUL" },
    "7373": { "op": "SWAP1" },
    "7374": { "jump": "o", "op": "JUMP" },
    "7375": { "op": "JUMPDEST" },
    "7376": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
    },
    "7409": { "op": "DUP2" },
    "7410": { "op": "MSTORE" },
    "7411": { "op": "PUSH1", "value": "0x0" },
    "7413": { "op": "DUP4" },
    "7414": { "op": "MLOAD" },
    "7415": { "op": "PUSH2", "value": "0x1D07" },
    "7418": { "op": "DUP2" },
    "7419": { "op": "PUSH1", "value": "0x17" },
    "7421": { "op": "DUP6" },
    "7422": { "op": "ADD" },
    "7423": { "op": "PUSH1", "value": "0x20" },
    "7425": { "op": "DUP9" },
    "7426": { "op": "ADD" },
    "7427": { "op": "PUSH2", "value": "0x172B" },
    "7430": { "jump": "i", "op": "JUMP" },
    "7431": { "op": "JUMPDEST" },
    "7432": { "op": "PUSH17", "value": "0x1034B99036B4B9B9B4B733903937B6329" },
    "7450": { "op": "PUSH1", "value": "0x7D" },
    "7452": { "op": "SHL" },
    "7453": { "op": "PUSH1", "value": "0x17" },
    "7455": { "op": "SWAP2" },
    "7456": { "op": "DUP5" },
    "7457": { "op": "ADD" },
    "7458": { "op": "SWAP2" },
    "7459": { "op": "DUP3" },
    "7460": { "op": "ADD" },
    "7461": { "op": "MSTORE" },
    "7462": { "op": "DUP4" },
    "7463": { "op": "MLOAD" },
    "7464": { "op": "PUSH2", "value": "0x1D38" },
    "7467": { "op": "DUP2" },
    "7468": { "op": "PUSH1", "value": "0x28" },
    "7470": { "op": "DUP5" },
    "7471": { "op": "ADD" },
    "7472": { "op": "PUSH1", "value": "0x20" },
    "7474": { "op": "DUP9" },
    "7475": { "op": "ADD" },
    "7476": { "op": "PUSH2", "value": "0x172B" },
    "7479": { "jump": "i", "op": "JUMP" },
    "7480": { "op": "JUMPDEST" },
    "7481": { "op": "ADD" },
    "7482": { "op": "PUSH1", "value": "0x28" },
    "7484": { "op": "ADD" },
    "7485": { "op": "SWAP5" },
    "7486": { "op": "SWAP4" },
    "7487": { "op": "POP" },
    "7488": { "op": "POP" },
    "7489": { "op": "POP" },
    "7490": { "op": "POP" },
    "7491": { "jump": "o", "op": "JUMP" },
    "7492": { "op": "JUMPDEST" },
    "7493": { "op": "PUSH1", "value": "0x1" },
    "7495": { "op": "PUSH1", "value": "0x1" },
    "7497": { "op": "PUSH1", "value": "0xA0" },
    "7499": { "op": "SHL" },
    "7500": { "op": "SUB" },
    "7501": { "op": "DUP6" },
    "7502": { "op": "DUP2" },
    "7503": { "op": "AND" },
    "7504": { "op": "DUP3" },
    "7505": { "op": "MSTORE" },
    "7506": { "op": "DUP5" },
    "7507": { "op": "AND" },
    "7508": { "op": "PUSH1", "value": "0x20" },
    "7510": { "op": "DUP3" },
    "7511": { "op": "ADD" },
    "7512": { "op": "MSTORE" },
    "7513": { "op": "PUSH1", "value": "0x40" },
    "7515": { "op": "DUP2" },
    "7516": { "op": "ADD" },
    "7517": { "op": "DUP4" },
    "7518": { "op": "SWAP1" },
    "7519": { "op": "MSTORE" },
    "7520": { "op": "PUSH1", "value": "0x80" },
    "7522": { "op": "PUSH1", "value": "0x60" },
    "7524": { "op": "DUP3" },
    "7525": { "op": "ADD" },
    "7526": { "op": "DUP2" },
    "7527": { "op": "SWAP1" },
    "7528": { "op": "MSTORE" },
    "7529": { "op": "PUSH1", "value": "0x0" },
    "7531": { "op": "SWAP1" },
    "7532": { "op": "PUSH2", "value": "0x1D77" },
    "7535": { "op": "SWAP1" },
    "7536": { "op": "DUP4" },
    "7537": { "op": "ADD" },
    "7538": { "op": "DUP5" },
    "7539": { "op": "PUSH2", "value": "0x1757" },
    "7542": { "jump": "i", "op": "JUMP" },
    "7543": { "op": "JUMPDEST" },
    "7544": { "op": "SWAP7" },
    "7545": { "op": "SWAP6" },
    "7546": { "op": "POP" },
    "7547": { "op": "POP" },
    "7548": { "op": "POP" },
    "7549": { "op": "POP" },
    "7550": { "op": "POP" },
    "7551": { "op": "POP" },
    "7552": { "jump": "o", "op": "JUMP" },
    "7553": { "op": "JUMPDEST" },
    "7554": { "op": "PUSH1", "value": "0x0" },
    "7556": { "op": "PUSH1", "value": "0x20" },
    "7558": { "op": "DUP3" },
    "7559": { "op": "DUP5" },
    "7560": { "op": "SUB" },
    "7561": { "op": "SLT" },
    "7562": { "op": "ISZERO" },
    "7563": { "op": "PUSH2", "value": "0x1D93" },
    "7566": { "op": "JUMPI" },
    "7567": { "op": "PUSH1", "value": "0x0" },
    "7569": { "op": "DUP1" },
    "7570": { "op": "REVERT" },
    "7571": { "op": "JUMPDEST" },
    "7572": { "op": "DUP2" },
    "7573": { "op": "MLOAD" },
    "7574": { "op": "PUSH2", "value": "0x1186" },
    "7577": { "op": "DUP2" },
    "7578": { "op": "PUSH2", "value": "0x16F8" },
    "7581": { "jump": "i", "op": "JUMP" },
    "7582": { "op": "JUMPDEST" },
    "7583": { "op": "PUSH1", "value": "0x0" },
    "7585": { "op": "DUP2" },
    "7586": { "op": "PUSH2", "value": "0x1DAD" },
    "7589": { "op": "JUMPI" },
    "7590": { "op": "PUSH2", "value": "0x1DAD" },
    "7593": { "op": "PUSH2", "value": "0x1A69" },
    "7596": { "jump": "i", "op": "JUMP" },
    "7597": { "op": "JUMPDEST" },
    "7598": { "op": "POP" },
    "7599": { "op": "PUSH1", "value": "0x0" },
    "7601": { "op": "NOT" },
    "7602": { "op": "ADD" },
    "7603": { "op": "SWAP1" },
    "7604": { "jump": "o", "op": "JUMP" }
  },
  "sha1": "444e2e0a10f5866c2cdba0e66ac065efd551dbce",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n// Diffemon main smart contract\ncontract Diffemon is AccessControl, ERC721  {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIdCounter;\n\n    uint256 public sizeOfBoosterPack;\n    uint256 public numCards;\n    mapping (uint256 => uint256) public cards;\n    mapping(address => uint256) public boostersAllowedToBuy;  \n\n    string baseURI;  \n\n    // Initializes the contract by setting a `name` and a `symbol` to the token collection.\n    constructor () public ERC721('Diffemon', 'DMON') {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n\n        numCards = 104;\n        sizeOfBoosterPack = 6;\n        \n        baseURI = \"ipfs://bafybeic6nxm4pxgr2sfwxwjoin6xalhpoyoichio2abxlnimdxssvx257a/\";\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _burn(uint256 tokenId) internal override(ERC721) {\n        super._burn(tokenId);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721)\n        returns (string memory)\n    {\n        _requireMinted(tokenId);\n\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, Strings.toString(cards[tokenId]), \".json\")) : \"\";\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, AccessControl)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function safeMint(address to) internal returns (uint256) {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n        return tokenId;\n    }\n\n    function setBaseURI(string memory uri) public onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\n        baseURI = uri;\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseURI;\n    }\n    \n    function setBoosterSize(uint256 newBoosterSize) public onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\n        sizeOfBoosterPack = newBoosterSize;\n    }\n    \n    function setNumCards(uint256 _numCards) public onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\n        numCards = _numCards;\n    }\n    \n    // RNG, on-chain timestamp based\n    function random(uint256 modulo, uint256 salt) private view returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(blockhash(block.number - 1), block.timestamp - 47 * salt, block.difficulty, msg.sender))) % modulo;\n    }\n\n    function allotBoosters(address to, uint256 numAllowed) public onlyRole(getRoleAdmin(DEFAULT_ADMIN_ROLE)) {\n        boostersAllowedToBuy[to] += numAllowed;\n    }\n    \n    function buyBooster() public {\n        require(boostersAllowedToBuy[msg.sender] > 0, \"Not enough boosters allowed to buy\");\n        boostersAllowedToBuy[msg.sender] -= 1;\n        mintTokens(msg.sender);\n    }\n    \n    function mint(uint256 cardId, address to) internal { \n        uint256 tokenId = safeMint(to);   \n        cards[tokenId] = cardId;\n    }   \n\n    function mintTokens(address to) internal {\n        for(uint8 i = 0; i < sizeOfBoosterPack; i++) {\n            uint256 cardId = random(numCards, i);\n    \n            mint(cardId, to);\n        }\n    } \n}\n",
  "sourceMap": "313:3136:12:-:0;;;744:262;;;;;;;;;-1:-1:-1;1390:113:2;;;;;;;;;;;-1:-1:-1;;;1390:113:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:2;;;;1456:13;;1390:113;;;1456:13;;:5;;:13;:::i;:::-;-1:-1:-1;1479:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;803:42:12::1;::::0;-1:-1:-1;2072:4:0::1;::::0;-1:-1:-1;834:10:12::1;803;:42::i;:::-;867:3;856:8;:14:::0;900:1:::1;880:17;:21:::0;920:79:::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;::::1;;::::0;;::::1;::::0;:7:::1;::::0;:79:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;313:3136:::0;;7474:233:0;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:7;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;313:3136:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;313:3136:12;;;-1:-1:-1;313:3136:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:13;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;313:3136:12;;;;;;",
  "sourcePath": "contracts/Diffemon.sol",
  "type": "contract",
  "deployment": {
    "address": "0xFcafd3545E51Bb52C7b41b6C8734fcD40eF9CD8d",
    "chainid": "137",
    "blockHeight": 33538226
  }
}
